(function(){window.commitData=[{sha:"46a0a3107ef02f4edbb136d0ae3056d66c862b84",commit:{author:{name:"Logan Laughlin",email:"loganlaughlin@gmail.com",date:"2013-07-19T20:23:17Z"},committer:{name:"Logan Laughlin",email:"loganlaughlin@gmail.com",date:"2013-07-19T20:23:17Z"},message:"Added coffeescript bundle.",tree:{sha:"81184914f5e8d84651439a060ac1762d7890155e",url:"https://api.github.com/repos/llaughlin/DemoApp/git/trees/81184914f5e8d84651439a060ac1762d7890155e"},url:"https://api.github.com/repos/llaughlin/DemoApp/git/commits/46a0a3107ef02f4edbb136d0ae3056d66c862b84",comment_count:0},url:"https://api.github.com/repos/llaughlin/DemoApp/commits/46a0a3107ef02f4edbb136d0ae3056d66c862b84",html_url:"https://github.com/llaughlin/DemoApp/commit/46a0a3107ef02f4edbb136d0ae3056d66c862b84",comments_url:"https://api.github.com/repos/llaughlin/DemoApp/commits/46a0a3107ef02f4edbb136d0ae3056d66c862b84/comments",author:{login:"llaughlin",id:1325514,avatar_url:"https://secure.gravatar.com/avatar/e2e8ea1aa36a140ceb008c3f219eac3e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",gravatar_id:"e2e8ea1aa36a140ceb008c3f219eac3e",url:"https://api.github.com/users/llaughlin",html_url:"https://github.com/llaughlin",followers_url:"https://api.github.com/users/llaughlin/followers",following_url:"https://api.github.com/users/llaughlin/following{/other_user}",gists_url:"https://api.github.com/users/llaughlin/gists{/gist_id}",starred_url:"https://api.github.com/users/llaughlin/starred{/owner}{/repo}",subscriptions_url:"https://api.github.com/users/llaughlin/subscriptions",organizations_url:"https://api.github.com/users/llaughlin/orgs",repos_url:"https://api.github.com/users/llaughlin/repos",events_url:"https://api.github.com/users/llaughlin/events{/privacy}",received_events_url:"https://api.github.com/users/llaughlin/received_events",type:"User"},committer:{login:"llaughlin",id:1325514,avatar_url:"https://secure.gravatar.com/avatar/e2e8ea1aa36a140ceb008c3f219eac3e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",gravatar_id:"e2e8ea1aa36a140ceb008c3f219eac3e",url:"https://api.github.com/users/llaughlin",html_url:"https://github.com/llaughlin",followers_url:"https://api.github.com/users/llaughlin/followers",following_url:"https://api.github.com/users/llaughlin/following{/other_user}",gists_url:"https://api.github.com/users/llaughlin/gists{/gist_id}",starred_url:"https://api.github.com/users/llaughlin/starred{/owner}{/repo}",subscriptions_url:"https://api.github.com/users/llaughlin/subscriptions",organizations_url:"https://api.github.com/users/llaughlin/orgs",repos_url:"https://api.github.com/users/llaughlin/repos",events_url:"https://api.github.com/users/llaughlin/events{/privacy}",received_events_url:"https://api.github.com/users/llaughlin/received_events",type:"User"},parents:[{sha:"090d4c5041e99c3e0e2086d078dc161afefaf3e0",url:"https://api.github.com/repos/llaughlin/DemoApp/commits/090d4c5041e99c3e0e2086d078dc161afefaf3e0",html_url:"https://github.com/llaughlin/DemoApp/commit/090d4c5041e99c3e0e2086d078dc161afefaf3e0"}]},{sha:"090d4c5041e99c3e0e2086d078dc161afefaf3e0",commit:{author:{name:"Logan Laughlin",email:"loganlaughlin@gmail.com",date:"2013-07-19T20:19:17Z"},committer:{name:"Logan Laughlin",email:"loganlaughlin@gmail.com",date:"2013-07-19T20:19:17Z"},message:"Aded coffeescript script.",tree:{sha:"22f293b1d4e346f077106ac9c8e146c824056eb9",url:"https://api.github.com/repos/llaughlin/DemoApp/git/trees/22f293b1d4e346f077106ac9c8e146c824056eb9"},url:"https://api.github.com/repos/llaughlin/DemoApp/git/commits/090d4c5041e99c3e0e2086d078dc161afefaf3e0",comment_count:0},url:"https://api.github.com/repos/llaughlin/DemoApp/commits/090d4c5041e99c3e0e2086d078dc161afefaf3e0",html_url:"https://github.com/llaughlin/DemoApp/commit/090d4c5041e99c3e0e2086d078dc161afefaf3e0",comments_url:"https://api.github.com/repos/llaughlin/DemoApp/commits/090d4c5041e99c3e0e2086d078dc161afefaf3e0/comments",author:{login:"llaughlin",id:1325514,avatar_url:"https://secure.gravatar.com/avatar/e2e8ea1aa36a140ceb008c3f219eac3e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",gravatar_id:"e2e8ea1aa36a140ceb008c3f219eac3e",url:"https://api.github.com/users/llaughlin",html_url:"https://github.com/llaughlin",followers_url:"https://api.github.com/users/llaughlin/followers",following_url:"https://api.github.com/users/llaughlin/following{/other_user}",gists_url:"https://api.github.com/users/llaughlin/gists{/gist_id}",starred_url:"https://api.github.com/users/llaughlin/starred{/owner}{/repo}",subscriptions_url:"https://api.github.com/users/llaughlin/subscriptions",organizations_url:"https://api.github.com/users/llaughlin/orgs",repos_url:"https://api.github.com/users/llaughlin/repos",events_url:"https://api.github.com/users/llaughlin/events{/privacy}",received_events_url:"https://api.github.com/users/llaughlin/received_events",type:"User"},committer:{login:"llaughlin",id:1325514,avatar_url:"https://secure.gravatar.com/avatar/e2e8ea1aa36a140ceb008c3f219eac3e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",gravatar_id:"e2e8ea1aa36a140ceb008c3f219eac3e",url:"https://api.github.com/users/llaughlin",html_url:"https://github.com/llaughlin",followers_url:"https://api.github.com/users/llaughlin/followers",following_url:"https://api.github.com/users/llaughlin/following{/other_user}",gists_url:"https://api.github.com/users/llaughlin/gists{/gist_id}",starred_url:"https://api.github.com/users/llaughlin/starred{/owner}{/repo}",subscriptions_url:"https://api.github.com/users/llaughlin/subscriptions",organizations_url:"https://api.github.com/users/llaughlin/orgs",repos_url:"https://api.github.com/users/llaughlin/repos",events_url:"https://api.github.com/users/llaughlin/events{/privacy}",received_events_url:"https://api.github.com/users/llaughlin/received_events",type:"User"},parents:[{sha:"505014059dc6ddcb8734d289b73e0f187a5d0f28",url:"https://api.github.com/repos/llaughlin/DemoApp/commits/505014059dc6ddcb8734d289b73e0f187a5d0f28",html_url:"https://github.com/llaughlin/DemoApp/commit/505014059dc6ddcb8734d289b73e0f187a5d0f28"}]},{sha:"505014059dc6ddcb8734d289b73e0f187a5d0f28",commit:{author:{name:"Logan Laughlin",email:"loganlaughlin@gmail.com",date:"2013-07-19T19:50:55Z"},committer:{name:"Logan Laughlin",email:"loganlaughlin@gmail.com",date:"2013-07-19T19:50:55Z"},message:"Added bootstrap.",tree:{sha:"64dac250afb0fd956e2cc5837fa96e182a5d5b25",url:"https://api.github.com/repos/llaughlin/DemoApp/git/trees/64dac250afb0fd956e2cc5837fa96e182a5d5b25"},url:"https://api.github.com/repos/llaughlin/DemoApp/git/commits/505014059dc6ddcb8734d289b73e0f187a5d0f28",comment_count:0},url:"https://api.github.com/repos/llaughlin/DemoApp/commits/505014059dc6ddcb8734d289b73e0f187a5d0f28",html_url:"https://github.com/llaughlin/DemoApp/commit/505014059dc6ddcb8734d289b73e0f187a5d0f28",comments_url:"https://api.github.com/repos/llaughlin/DemoApp/commits/505014059dc6ddcb8734d289b73e0f187a5d0f28/comments",author:{login:"llaughlin",id:1325514,avatar_url:"https://secure.gravatar.com/avatar/e2e8ea1aa36a140ceb008c3f219eac3e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",gravatar_id:"e2e8ea1aa36a140ceb008c3f219eac3e",url:"https://api.github.com/users/llaughlin",html_url:"https://github.com/llaughlin",followers_url:"https://api.github.com/users/llaughlin/followers",following_url:"https://api.github.com/users/llaughlin/following{/other_user}",gists_url:"https://api.github.com/users/llaughlin/gists{/gist_id}",starred_url:"https://api.github.com/users/llaughlin/starred{/owner}{/repo}",subscriptions_url:"https://api.github.com/users/llaughlin/subscriptions",organizations_url:"https://api.github.com/users/llaughlin/orgs",repos_url:"https://api.github.com/users/llaughlin/repos",events_url:"https://api.github.com/users/llaughlin/events{/privacy}",received_events_url:"https://api.github.com/users/llaughlin/received_events",type:"User"},committer:{login:"llaughlin",id:1325514,avatar_url:"https://secure.gravatar.com/avatar/e2e8ea1aa36a140ceb008c3f219eac3e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",gravatar_id:"e2e8ea1aa36a140ceb008c3f219eac3e",url:"https://api.github.com/users/llaughlin",html_url:"https://github.com/llaughlin",followers_url:"https://api.github.com/users/llaughlin/followers",following_url:"https://api.github.com/users/llaughlin/following{/other_user}",gists_url:"https://api.github.com/users/llaughlin/gists{/gist_id}",starred_url:"https://api.github.com/users/llaughlin/starred{/owner}{/repo}",subscriptions_url:"https://api.github.com/users/llaughlin/subscriptions",organizations_url:"https://api.github.com/users/llaughlin/orgs",repos_url:"https://api.github.com/users/llaughlin/repos",events_url:"https://api.github.com/users/llaughlin/events{/privacy}",received_events_url:"https://api.github.com/users/llaughlin/received_events",type:"User"},parents:[{sha:"d09d477368a0c38e21cecf06d156dbe13c89991d",url:"https://api.github.com/repos/llaughlin/DemoApp/commits/d09d477368a0c38e21cecf06d156dbe13c89991d",html_url:"https://github.com/llaughlin/DemoApp/commit/d09d477368a0c38e21cecf06d156dbe13c89991d"}]},{sha:"d09d477368a0c38e21cecf06d156dbe13c89991d",commit:{author:{name:"Logan Laughlin",email:"loganlaughlin@gmail.com",date:"2013-07-19T19:40:17Z"},committer:{name:"Logan Laughlin",email:"loganlaughlin@gmail.com",date:"2013-07-19T19:40:17Z"},message:"Removed everything except Index, HomeController, and scripts and css.",tree:{sha:"720c2d86b2497e570e9a6122fe738d65a62533b9",url:"https://api.github.com/repos/llaughlin/DemoApp/git/trees/720c2d86b2497e570e9a6122fe738d65a62533b9"},url:"https://api.github.com/repos/llaughlin/DemoApp/git/commits/d09d477368a0c38e21cecf06d156dbe13c89991d",comment_count:0},url:"https://api.github.com/repos/llaughlin/DemoApp/commits/d09d477368a0c38e21cecf06d156dbe13c89991d",html_url:"https://github.com/llaughlin/DemoApp/commit/d09d477368a0c38e21cecf06d156dbe13c89991d",comments_url:"https://api.github.com/repos/llaughlin/DemoApp/commits/d09d477368a0c38e21cecf06d156dbe13c89991d/comments",author:{login:"llaughlin",id:1325514,avatar_url:"https://secure.gravatar.com/avatar/e2e8ea1aa36a140ceb008c3f219eac3e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",gravatar_id:"e2e8ea1aa36a140ceb008c3f219eac3e",url:"https://api.github.com/users/llaughlin",html_url:"https://github.com/llaughlin",followers_url:"https://api.github.com/users/llaughlin/followers",following_url:"https://api.github.com/users/llaughlin/following{/other_user}",gists_url:"https://api.github.com/users/llaughlin/gists{/gist_id}",starred_url:"https://api.github.com/users/llaughlin/starred{/owner}{/repo}",subscriptions_url:"https://api.github.com/users/llaughlin/subscriptions",organizations_url:"https://api.github.com/users/llaughlin/orgs",repos_url:"https://api.github.com/users/llaughlin/repos",events_url:"https://api.github.com/users/llaughlin/events{/privacy}",received_events_url:"https://api.github.com/users/llaughlin/received_events",type:"User"},committer:{login:"llaughlin",id:1325514,avatar_url:"https://secure.gravatar.com/avatar/e2e8ea1aa36a140ceb008c3f219eac3e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",gravatar_id:"e2e8ea1aa36a140ceb008c3f219eac3e",url:"https://api.github.com/users/llaughlin",html_url:"https://github.com/llaughlin",followers_url:"https://api.github.com/users/llaughlin/followers",following_url:"https://api.github.com/users/llaughlin/following{/other_user}",gists_url:"https://api.github.com/users/llaughlin/gists{/gist_id}",starred_url:"https://api.github.com/users/llaughlin/starred{/owner}{/repo}",subscriptions_url:"https://api.github.com/users/llaughlin/subscriptions",organizations_url:"https://api.github.com/users/llaughlin/orgs",repos_url:"https://api.github.com/users/llaughlin/repos",events_url:"https://api.github.com/users/llaughlin/events{/privacy}",received_events_url:"https://api.github.com/users/llaughlin/received_events",type:"User"},parents:[{sha:"5064770c5c97742041a767d527b33ea8c4295e52",url:"https://api.github.com/repos/llaughlin/DemoApp/commits/5064770c5c97742041a767d527b33ea8c4295e52",html_url:"https://github.com/llaughlin/DemoApp/commit/5064770c5c97742041a767d527b33ea8c4295e52"}]},{sha:"5064770c5c97742041a767d527b33ea8c4295e52",commit:{author:{name:"Logan Laughlin",email:"loganlaughlin@gmail.com",date:"2013-07-19T19:28:57Z"},committer:{name:"Logan Laughlin",email:"loganlaughlin@gmail.com",date:"2013-07-19T19:28:57Z"},message:"Initial Commit",tree:{sha:"1edd1c3179b3eb0fe9cbcb15fc7503ff81bda372",url:"https://api.github.com/repos/llaughlin/DemoApp/git/trees/1edd1c3179b3eb0fe9cbcb15fc7503ff81bda372"},url:"https://api.github.com/repos/llaughlin/DemoApp/git/commits/5064770c5c97742041a767d527b33ea8c4295e52",comment_count:0},url:"https://api.github.com/repos/llaughlin/DemoApp/commits/5064770c5c97742041a767d527b33ea8c4295e52",html_url:"https://github.com/llaughlin/DemoApp/commit/5064770c5c97742041a767d527b33ea8c4295e52",comments_url:"https://api.github.com/repos/llaughlin/DemoApp/commits/5064770c5c97742041a767d527b33ea8c4295e52/comments",author:{login:"llaughlin",id:1325514,avatar_url:"https://secure.gravatar.com/avatar/e2e8ea1aa36a140ceb008c3f219eac3e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",gravatar_id:"e2e8ea1aa36a140ceb008c3f219eac3e",url:"https://api.github.com/users/llaughlin",html_url:"https://github.com/llaughlin",followers_url:"https://api.github.com/users/llaughlin/followers",following_url:"https://api.github.com/users/llaughlin/following{/other_user}",gists_url:"https://api.github.com/users/llaughlin/gists{/gist_id}",starred_url:"https://api.github.com/users/llaughlin/starred{/owner}{/repo}",subscriptions_url:"https://api.github.com/users/llaughlin/subscriptions",organizations_url:"https://api.github.com/users/llaughlin/orgs",repos_url:"https://api.github.com/users/llaughlin/repos",events_url:"https://api.github.com/users/llaughlin/events{/privacy}",received_events_url:"https://api.github.com/users/llaughlin/received_events",type:"User"},committer:{login:"llaughlin",id:1325514,avatar_url:"https://secure.gravatar.com/avatar/e2e8ea1aa36a140ceb008c3f219eac3e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",gravatar_id:"e2e8ea1aa36a140ceb008c3f219eac3e",url:"https://api.github.com/users/llaughlin",html_url:"https://github.com/llaughlin",followers_url:"https://api.github.com/users/llaughlin/followers",following_url:"https://api.github.com/users/llaughlin/following{/other_user}",gists_url:"https://api.github.com/users/llaughlin/gists{/gist_id}",starred_url:"https://api.github.com/users/llaughlin/starred{/owner}{/repo}",subscriptions_url:"https://api.github.com/users/llaughlin/subscriptions",organizations_url:"https://api.github.com/users/llaughlin/orgs",repos_url:"https://api.github.com/users/llaughlin/repos",events_url:"https://api.github.com/users/llaughlin/events{/privacy}",received_events_url:"https://api.github.com/users/llaughlin/received_events",type:"User"},parents:[{sha:"7ab97fdf8994fd178c0f17dd0fb34ee93dea7046",url:"https://api.github.com/repos/llaughlin/DemoApp/commits/7ab97fdf8994fd178c0f17dd0fb34ee93dea7046",html_url:"https://github.com/llaughlin/DemoApp/commit/7ab97fdf8994fd178c0f17dd0fb34ee93dea7046"}]},{sha:"7ab97fdf8994fd178c0f17dd0fb34ee93dea7046",commit:{author:{name:"Logan Laughlin",email:"loganlaughlin@gmail.com",date:"2013-07-19T18:54:19Z"},committer:{name:"Logan Laughlin",email:"loganlaughlin@gmail.com",date:"2013-07-19T18:54:19Z"},message:"Initial commit to add default .gitIgnore and .gitAttribute files.",tree:{sha:"cf90900df56ab45a95f4c608ac6038485041c6c3",url:"https://api.github.com/repos/llaughlin/DemoApp/git/trees/cf90900df56ab45a95f4c608ac6038485041c6c3"},url:"https://api.github.com/repos/llaughlin/DemoApp/git/commits/7ab97fdf8994fd178c0f17dd0fb34ee93dea7046",comment_count:0},url:"https://api.github.com/repos/llaughlin/DemoApp/commits/7ab97fdf8994fd178c0f17dd0fb34ee93dea7046",html_url:"https://github.com/llaughlin/DemoApp/commit/7ab97fdf8994fd178c0f17dd0fb34ee93dea7046",comments_url:"https://api.github.com/repos/llaughlin/DemoApp/commits/7ab97fdf8994fd178c0f17dd0fb34ee93dea7046/comments",author:{login:"llaughlin",id:1325514,avatar_url:"https://secure.gravatar.com/avatar/e2e8ea1aa36a140ceb008c3f219eac3e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",gravatar_id:"e2e8ea1aa36a140ceb008c3f219eac3e",url:"https://api.github.com/users/llaughlin",html_url:"https://github.com/llaughlin",followers_url:"https://api.github.com/users/llaughlin/followers",following_url:"https://api.github.com/users/llaughlin/following{/other_user}",gists_url:"https://api.github.com/users/llaughlin/gists{/gist_id}",starred_url:"https://api.github.com/users/llaughlin/starred{/owner}{/repo}",subscriptions_url:"https://api.github.com/users/llaughlin/subscriptions",organizations_url:"https://api.github.com/users/llaughlin/orgs",repos_url:"https://api.github.com/users/llaughlin/repos",events_url:"https://api.github.com/users/llaughlin/events{/privacy}",received_events_url:"https://api.github.com/users/llaughlin/received_events",type:"User"},committer:{login:"llaughlin",id:1325514,avatar_url:"https://secure.gravatar.com/avatar/e2e8ea1aa36a140ceb008c3f219eac3e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",gravatar_id:"e2e8ea1aa36a140ceb008c3f219eac3e",url:"https://api.github.com/users/llaughlin",html_url:"https://github.com/llaughlin",followers_url:"https://api.github.com/users/llaughlin/followers",following_url:"https://api.github.com/users/llaughlin/following{/other_user}",gists_url:"https://api.github.com/users/llaughlin/gists{/gist_id}",starred_url:"https://api.github.com/users/llaughlin/starred{/owner}{/repo}",subscriptions_url:"https://api.github.com/users/llaughlin/subscriptions",organizations_url:"https://api.github.com/users/llaughlin/orgs",repos_url:"https://api.github.com/users/llaughlin/repos",events_url:"https://api.github.com/users/llaughlin/events{/privacy}",received_events_url:"https://api.github.com/users/llaughlin/received_events",type:"User"},parents:[]}],window.fileData={sha:"d09d477368a0c38e21cecf06d156dbe13c89991d",commit:{author:{name:"Logan Laughlin",email:"loganlaughlin@gmail.com",date:"2013-07-19T19:40:17Z"},committer:{name:"Logan Laughlin",email:"loganlaughlin@gmail.com",date:"2013-07-19T19:40:17Z"},message:"Removed everything except Index, HomeController, and scripts and css.",tree:{sha:"720c2d86b2497e570e9a6122fe738d65a62533b9",url:"https://api.github.com/repos/llaughlin/DemoApp/git/trees/720c2d86b2497e570e9a6122fe738d65a62533b9"},url:"https://api.github.com/repos/llaughlin/DemoApp/git/commits/d09d477368a0c38e21cecf06d156dbe13c89991d",comment_count:0},url:"https://api.github.com/repos/llaughlin/DemoApp/commits/d09d477368a0c38e21cecf06d156dbe13c89991d",html_url:"https://github.com/llaughlin/DemoApp/commit/d09d477368a0c38e21cecf06d156dbe13c89991d",comments_url:"https://api.github.com/repos/llaughlin/DemoApp/commits/d09d477368a0c38e21cecf06d156dbe13c89991d/comments",author:{login:"llaughlin",id:1325514,avatar_url:"https://secure.gravatar.com/avatar/e2e8ea1aa36a140ceb008c3f219eac3e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",gravatar_id:"e2e8ea1aa36a140ceb008c3f219eac3e",url:"https://api.github.com/users/llaughlin",html_url:"https://github.com/llaughlin",followers_url:"https://api.github.com/users/llaughlin/followers",following_url:"https://api.github.com/users/llaughlin/following{/other_user}",gists_url:"https://api.github.com/users/llaughlin/gists{/gist_id}",starred_url:"https://api.github.com/users/llaughlin/starred{/owner}{/repo}",subscriptions_url:"https://api.github.com/users/llaughlin/subscriptions",organizations_url:"https://api.github.com/users/llaughlin/orgs",repos_url:"https://api.github.com/users/llaughlin/repos",events_url:"https://api.github.com/users/llaughlin/events{/privacy}",received_events_url:"https://api.github.com/users/llaughlin/received_events",type:"User"},committer:{login:"llaughlin",id:1325514,avatar_url:"https://secure.gravatar.com/avatar/e2e8ea1aa36a140ceb008c3f219eac3e?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png",gravatar_id:"e2e8ea1aa36a140ceb008c3f219eac3e",url:"https://api.github.com/users/llaughlin",html_url:"https://github.com/llaughlin",followers_url:"https://api.github.com/users/llaughlin/followers",following_url:"https://api.github.com/users/llaughlin/following{/other_user}",gists_url:"https://api.github.com/users/llaughlin/gists{/gist_id}",starred_url:"https://api.github.com/users/llaughlin/starred{/owner}{/repo}",subscriptions_url:"https://api.github.com/users/llaughlin/subscriptions",organizations_url:"https://api.github.com/users/llaughlin/orgs",repos_url:"https://api.github.com/users/llaughlin/repos",events_url:"https://api.github.com/users/llaughlin/events{/privacy}",received_events_url:"https://api.github.com/users/llaughlin/received_events",type:"User"},parents:[{sha:"5064770c5c97742041a767d527b33ea8c4295e52",url:"https://api.github.com/repos/llaughlin/DemoApp/commits/5064770c5c97742041a767d527b33ea8c4295e52",html_url:"https://github.com/llaughlin/DemoApp/commit/5064770c5c97742041a767d527b33ea8c4295e52"}],stats:{total:4014,additions:6,deletions:4008},files:[{sha:"17c78803ad5955df1fb7a0e02ec67e2409910588",filename:"DemoApp/App_Start/AuthConfig.cs",status:"modified",additions:0,deletions:1,changes:1,blob_url:"https://github.com/llaughlin/DemoApp/blob/d09d477368a0c38e21cecf06d156dbe13c89991d/DemoApp/App_Start/AuthConfig.cs",raw_url:"https://github.com/llaughlin/DemoApp/raw/d09d477368a0c38e21cecf06d156dbe13c89991d/DemoApp/App_Start/AuthConfig.cs",contents_url:"https://api.github.com/repos/llaughlin/DemoApp/contents/DemoApp/App_Start/AuthConfig.cs?ref=d09d477368a0c38e21cecf06d156dbe13c89991d",patch:"@@ -3,7 +3,6 @@\n using System.Linq;\n using System.Text;\n using Microsoft.Web.WebPages.OAuth;\n-using DemoApp.Models;\n \n namespace DemoApp\n {"},{sha:"f2ff1b7599b80b130cc638f59f8ecc65a597b9a0",filename:"DemoApp/Areas/HelpPage/ApiDescriptionExtensions.cs",status:"removed",additions:0,deletions:39,changes:39,blob_url:"https://github.com/llaughlin/DemoApp/blob/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Areas/HelpPage/ApiDescriptionExtensions.cs",raw_url:"https://github.com/llaughlin/DemoApp/raw/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Areas/HelpPage/ApiDescriptionExtensions.cs",contents_url:"https://api.github.com/repos/llaughlin/DemoApp/contents/DemoApp/Areas/HelpPage/ApiDescriptionExtensions.cs?ref=5064770c5c97742041a767d527b33ea8c4295e52",patch:'@@ -1,39 +0,0 @@\n-using System;\n-using System.Text;\n-using System.Web;\n-using System.Web.Http.Description;\n-\n-namespace DemoApp.Areas.HelpPage\n-{\n-    public static class ApiDescriptionExtensions\n-    {\n-        /// <summary>\n-        /// Generates an URI-friendly ID for the <see cref="ApiDescription"/>. E.g. "Get-Values-id_name" instead of "GetValues/{id}?name={name}"\n-        /// <\/summary>\n-        /// <param name="description">The <see cref="ApiDescription"/>.<\/param>\n-        /// <returns>The ID as a string.<\/returns>\n-        public static string GetFriendlyId(this ApiDescription description)\n-        {\n-            string path = description.RelativePath;\n-            string[] urlParts = path.Split(\'?\');\n-            string localPath = urlParts[0];\n-            string queryKeyString = null;\n-            if (urlParts.Length > 1)\n-            {\n-                string query = urlParts[1];\n-                string[] queryKeys = HttpUtility.ParseQueryString(query).AllKeys;\n-                queryKeyString = String.Join("_", queryKeys);\n-            }\n-\n-            StringBuilder friendlyPath = new StringBuilder();\n-            friendlyPath.AppendFormat("{0}-{1}",\n-                description.HttpMethod.Method,\n-                localPath.Replace("/", "-").Replace("{", String.Empty).Replace("}", String.Empty));\n-            if (queryKeyString != null)\n-            {\n-                friendlyPath.AppendFormat("_{0}", queryKeyString);\n-            }\n-            return friendlyPath.ToString();\n-        }\n-    }\n-}\n\\ No newline at end of file'},{sha:"a43e659e39d3839ecc493a3e53f0025d6abc04e6",filename:"DemoApp/Areas/HelpPage/App_Start/HelpPageConfig.cs",status:"removed",additions:0,deletions:51,changes:51,blob_url:"https://github.com/llaughlin/DemoApp/blob/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Areas/HelpPage/App_Start/HelpPageConfig.cs",raw_url:"https://github.com/llaughlin/DemoApp/raw/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Areas/HelpPage/App_Start/HelpPageConfig.cs",contents_url:"https://api.github.com/repos/llaughlin/DemoApp/contents/DemoApp/Areas/HelpPage/App_Start/HelpPageConfig.cs?ref=5064770c5c97742041a767d527b33ea8c4295e52",patch:'@@ -1,51 +0,0 @@\n-using System;\n-using System.Collections.Generic;\n-using System.Net.Http.Headers;\n-using System.Web;\n-using System.Web.Http;\n-\n-namespace DemoApp.Areas.HelpPage\n-{\n-    /// <summary>\n-    /// Use this class to customize the Help Page.\n-    /// For example you can set a custom <see cref="System.Web.Http.Description.IDocumentationProvider"/> to supply the documentation\n-    /// or you can provide the samples for the requests/responses.\n-    /// <\/summary>\n-    public static class HelpPageConfig\n-    {\n-        public static void Register(HttpConfiguration config)\n-        {\n-            //// Uncomment the following to use the documentation from XML documentation file.\n-            //config.SetDocumentationProvider(new XmlDocumentationProvider(HttpContext.Current.Server.MapPath("~/App_Data/XmlDocument.xml")));\n-\n-            //// Uncomment the following to use "sample string" as the sample for all actions that have string as the body parameter or return type.\n-            //// Also, the string arrays will be used for IEnumerable<string>. The sample objects will be serialized into different media type \n-            //// formats by the available formatters.\n-            //config.SetSampleObjects(new Dictionary<Type, object>\n-            //{\n-            //    {typeof(string), "sample string"},\n-            //    {typeof(IEnumerable<string>), new string[]{"sample 1", "sample 2"}}\n-            //});\n-\n-            //// Uncomment the following to use "[0]=foo&[1]=bar" directly as the sample for all actions that support form URL encoded format\n-            //// and have IEnumerable<string> as the body parameter or return type.\n-            //config.SetSampleForType("[0]=foo&[1]=bar", new MediaTypeHeaderValue("application/x-www-form-urlencoded"), typeof(IEnumerable<string>));\n-\n-            //// Uncomment the following to use "1234" directly as the request sample for media type "text/plain" on the controller named "Values"\n-            //// and action named "Put".\n-            //config.SetSampleRequest("1234", new MediaTypeHeaderValue("text/plain"), "Values", "Put");\n-\n-            //// Uncomment the following to use the image on "../images/aspNetHome.png" directly as the response sample for media type "image/png"\n-            //// on the controller named "Values" and action named "Get" with parameter "id".\n-            //config.SetSampleResponse(new ImageSample("../images/aspNetHome.png"), new MediaTypeHeaderValue("image/png"), "Values", "Get", "id");\n-\n-            //// Uncomment the following to correct the sample request when the action expects an HttpRequestMessage with ObjectContent<string>.\n-            //// The sample will be generated as if the controller named "Values" and action named "Get" were having string as the body parameter.\n-            //config.SetActualRequestType(typeof(string), "Values", "Get");\n-\n-            //// Uncomment the following to correct the sample response when the action returns an HttpResponseMessage with ObjectContent<string>.\n-            //// The sample will be generated as if the controller named "Values" and action named "Post" were returning a string.\n-            //config.SetActualResponseType(typeof(string), "Values", "Post");\n-        }\n-    }\n-}\n\\ No newline at end of file'},{sha:"cde2edf86068c6b7f5b844cd815856fa71440145",filename:"DemoApp/Areas/HelpPage/Controllers/HelpController.cs",status:"removed",additions:0,deletions:44,changes:44,blob_url:"https://github.com/llaughlin/DemoApp/blob/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Areas/HelpPage/Controllers/HelpController.cs",raw_url:"https://github.com/llaughlin/DemoApp/raw/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Areas/HelpPage/Controllers/HelpController.cs",contents_url:"https://api.github.com/repos/llaughlin/DemoApp/contents/DemoApp/Areas/HelpPage/Controllers/HelpController.cs?ref=5064770c5c97742041a767d527b33ea8c4295e52",patch:'@@ -1,44 +0,0 @@\n-using System;\n-using System.Web.Http;\n-using System.Web.Mvc;\n-using DemoApp.Areas.HelpPage.Models;\n-\n-namespace DemoApp.Areas.HelpPage.Controllers\n-{\n-    /// <summary>\n-    /// The controller that will handle requests for the help page.\n-    /// <\/summary>\n-    public class HelpController : Controller\n-    {\n-        public HelpController()\n-            : this(GlobalConfiguration.Configuration)\n-        {\n-        }\n-\n-        public HelpController(HttpConfiguration config)\n-        {\n-            Configuration = config;\n-        }\n-\n-        public HttpConfiguration Configuration { get; private set; }\n-\n-        public ActionResult Index()\n-        {\n-            return View(Configuration.Services.GetApiExplorer().ApiDescriptions);\n-        }\n-\n-        public ActionResult Api(string apiId)\n-        {\n-            if (!String.IsNullOrEmpty(apiId))\n-            {\n-                HelpPageApiModel apiModel = Configuration.GetHelpPageApiModel(apiId);\n-                if (apiModel != null)\n-                {\n-                    return View(apiModel);\n-                }\n-            }\n-\n-            return View("Error");\n-        }\n-    }\n-}\n\\ No newline at end of file'},{sha:"ee461e0d010b6acb8b154bb15a28620cee8e894d",filename:"DemoApp/Areas/HelpPage/HelpPage.css",status:"removed",additions:0,deletions:89,changes:89,blob_url:"https://github.com/llaughlin/DemoApp/blob/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Areas/HelpPage/HelpPage.css",raw_url:"https://github.com/llaughlin/DemoApp/raw/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Areas/HelpPage/HelpPage.css",contents_url:"https://api.github.com/repos/llaughlin/DemoApp/contents/DemoApp/Areas/HelpPage/HelpPage.css?ref=5064770c5c97742041a767d527b33ea8c4295e52",patch:"@@ -1,89 +0,0 @@\n-pre.wrapped {\n-    white-space: -moz-pre-wrap;\n-    white-space: -pre-wrap;\n-    white-space: -o-pre-wrap;\n-    white-space: pre-wrap;\n-}\n-\n-.warning-message-container {\n-    margin-top: 20px;\n-    padding: 0 10px;\n-    color: #525252;\n-    background: #EFDCA9; \n-    border: 1px solid #CCCCCC;\n-}\n-\n-.help-page-table {\n-    width: 100%;\n-    border-collapse: collapse;\n-    text-align: left;\n-    margin: 0px 0px 20px 0px;\n-    border-top: 2px solid #D4D4D4;\n-}\n-\n-.help-page-table th {\n-    text-align: left;\n-    font-weight: bold;\n-    border-bottom: 2px solid #D4D4D4;\n-    padding: 8px 6px 8px 6px;\n-}\n-\n-.help-page-table td {\n-    border-bottom: 2px solid #D4D4D4;\n-    padding: 15px 8px 15px 8px;\n-    vertical-align: top;\n-}\n-\n-.help-page-table pre, .help-page-table p {\n-    margin: 0px;\n-    padding: 0px;\n-    font-family: inherit;\n-    font-size: 100%;\n-}\n-\n-.help-page-table tbody tr:hover td {\n-    background-color: #F3F3F3;\n-}\n-\n-a:hover {\n-    background-color: transparent;\n-}\n-\n-.sample-header {\n-    border: 2px solid #D4D4D4;\n-    background: #76B8DB;\n-    color: #FFFFFF;\n-    padding: 8px 15px;\n-    border-bottom: none;\n-    display: inline-block;\n-    margin: 10px 0px 0px 0px;\n-}\n-\n-.sample-content {\n-    display: block;\n-    border-width: 0;\n-    padding: 15px 20px;\n-    background: #FFFFFF;\n-    border: 2px solid #D4D4D4;\n-    margin: 0px 0px 10px 0px;\n-}\n-\n-.api-name {\n-    width: 40%;\n-}\n-\n-.api-documentation {\n-    width: 60%;\n-}\n-\n-.parameter-name {\n-    width: 20%;\n-}\n-\n-.parameter-documentation {\n-    width: 50%;\n-}\n-\n-.parameter-source {\n-    width: 30%;\n-}"},{sha:"b8fb9ad2ce95c946a0f297df51ae5f7e483996a0",filename:"DemoApp/Areas/HelpPage/HelpPageAreaRegistration.cs",status:"removed",additions:0,deletions:26,changes:26,blob_url:"https://github.com/llaughlin/DemoApp/blob/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Areas/HelpPage/HelpPageAreaRegistration.cs",raw_url:"https://github.com/llaughlin/DemoApp/raw/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Areas/HelpPage/HelpPageAreaRegistration.cs",contents_url:"https://api.github.com/repos/llaughlin/DemoApp/contents/DemoApp/Areas/HelpPage/HelpPageAreaRegistration.cs?ref=5064770c5c97742041a767d527b33ea8c4295e52",patch:'@@ -1,26 +0,0 @@\n-using System.Web.Http;\n-using System.Web.Mvc;\n-\n-namespace DemoApp.Areas.HelpPage\n-{\n-    public class HelpPageAreaRegistration : AreaRegistration\n-    {\n-        public override string AreaName\n-        {\n-            get\n-            {\n-                return "HelpPage";\n-            }\n-        }\n-\n-        public override void RegisterArea(AreaRegistrationContext context)\n-        {\n-            context.MapRoute(\n-                "HelpPage_Default",\n-                "Help/{action}/{apiId}",\n-                new { controller = "Help", action = "Index", apiId = UrlParameter.Optional });\n-\n-            HelpPageConfig.Register(GlobalConfiguration.Configuration);\n-        }\n-    }\n-}\n\\ No newline at end of file'},{sha:"5903b6dfd1f12f54093e86cb447ba4910600c97a",filename:"DemoApp/Areas/HelpPage/HelpPageConfigurationExtensions.cs",status:"removed",additions:0,deletions:247,changes:247,blob_url:"https://github.com/llaughlin/DemoApp/blob/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Areas/HelpPage/HelpPageConfigurationExtensions.cs",raw_url:"https://github.com/llaughlin/DemoApp/raw/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Areas/HelpPage/HelpPageConfigurationExtensions.cs",contents_url:"https://api.github.com/repos/llaughlin/DemoApp/contents/DemoApp/Areas/HelpPage/HelpPageConfigurationExtensions.cs?ref=5064770c5c97742041a767d527b33ea8c4295e52",patch:'@@ -1,247 +0,0 @@\n-using System;\n-using System.Collections.Generic;\n-using System.Collections.ObjectModel;\n-using System.Diagnostics.CodeAnalysis;\n-using System.Globalization;\n-using System.Linq;\n-using System.Net.Http.Headers;\n-using System.Web.Http;\n-using System.Web.Http.Description;\n-using DemoApp.Areas.HelpPage.Models;\n-\n-namespace DemoApp.Areas.HelpPage\n-{\n-    public static class HelpPageConfigurationExtensions\n-    {\n-        private const string ApiModelPrefix = "MS_HelpPageApiModel_";\n-\n-        /// <summary>\n-        /// Sets the documentation provider for help page.\n-        /// <\/summary>\n-        /// <param name="config">The <see cref="HttpConfiguration"/>.<\/param>\n-        /// <param name="documentationProvider">The documentation provider.<\/param>\n-        public static void SetDocumentationProvider(this HttpConfiguration config, IDocumentationProvider documentationProvider)\n-        {\n-            config.Services.Replace(typeof(IDocumentationProvider), documentationProvider);\n-        }\n-\n-        /// <summary>\n-        /// Sets the objects that will be used by the formatters to produce sample requests/responses.\n-        /// <\/summary>\n-        /// <param name="config">The <see cref="HttpConfiguration"/>.<\/param>\n-        /// <param name="sampleObjects">The sample objects.<\/param>\n-        public static void SetSampleObjects(this HttpConfiguration config, IDictionary<Type, object> sampleObjects)\n-        {\n-            config.GetHelpPageSampleGenerator().SampleObjects = sampleObjects;\n-        }\n-\n-        /// <summary>\n-        /// Sets the sample request directly for the specified media type and action.\n-        /// <\/summary>\n-        /// <param name="config">The <see cref="HttpConfiguration"/>.<\/param>\n-        /// <param name="sample">The sample request.<\/param>\n-        /// <param name="mediaType">The media type.<\/param>\n-        /// <param name="controllerName">Name of the controller.<\/param>\n-        /// <param name="actionName">Name of the action.<\/param>\n-        public static void SetSampleRequest(this HttpConfiguration config, object sample, MediaTypeHeaderValue mediaType, string controllerName, string actionName)\n-        {\n-            config.GetHelpPageSampleGenerator().ActionSamples.Add(new HelpPageSampleKey(mediaType, SampleDirection.Request, controllerName, actionName, new[] { "*" }), sample);\n-        }\n-\n-        /// <summary>\n-        /// Sets the sample request directly for the specified media type and action with parameters.\n-        /// <\/summary>\n-        /// <param name="config">The <see cref="HttpConfiguration"/>.<\/param>\n-        /// <param name="sample">The sample request.<\/param>\n-        /// <param name="mediaType">The media type.<\/param>\n-        /// <param name="controllerName">Name of the controller.<\/param>\n-        /// <param name="actionName">Name of the action.<\/param>\n-        /// <param name="parameterNames">The parameter names.<\/param>\n-        public static void SetSampleRequest(this HttpConfiguration config, object sample, MediaTypeHeaderValue mediaType, string controllerName, string actionName, params string[] parameterNames)\n-        {\n-            config.GetHelpPageSampleGenerator().ActionSamples.Add(new HelpPageSampleKey(mediaType, SampleDirection.Request, controllerName, actionName, parameterNames), sample);\n-        }\n-\n-        /// <summary>\n-        /// Sets the sample request directly for the specified media type of the action.\n-        /// <\/summary>\n-        /// <param name="config">The <see cref="HttpConfiguration"/>.<\/param>\n-        /// <param name="sample">The sample response.<\/param>\n-        /// <param name="mediaType">The media type.<\/param>\n-        /// <param name="controllerName">Name of the controller.<\/param>\n-        /// <param name="actionName">Name of the action.<\/param>\n-        public static void SetSampleResponse(this HttpConfiguration config, object sample, MediaTypeHeaderValue mediaType, string controllerName, string actionName)\n-        {\n-            config.GetHelpPageSampleGenerator().ActionSamples.Add(new HelpPageSampleKey(mediaType, SampleDirection.Response, controllerName, actionName, new[] { "*" }), sample);\n-        }\n-\n-        /// <summary>\n-        /// Sets the sample response directly for the specified media type of the action with specific parameters.\n-        /// <\/summary>\n-        /// <param name="config">The <see cref="HttpConfiguration"/>.<\/param>\n-        /// <param name="sample">The sample response.<\/param>\n-        /// <param name="mediaType">The media type.<\/param>\n-        /// <param name="controllerName">Name of the controller.<\/param>\n-        /// <param name="actionName">Name of the action.<\/param>\n-        /// <param name="parameterNames">The parameter names.<\/param>\n-        public static void SetSampleResponse(this HttpConfiguration config, object sample, MediaTypeHeaderValue mediaType, string controllerName, string actionName, params string[] parameterNames)\n-        {\n-            config.GetHelpPageSampleGenerator().ActionSamples.Add(new HelpPageSampleKey(mediaType, SampleDirection.Response, controllerName, actionName, parameterNames), sample);\n-        }\n-\n-        /// <summary>\n-        /// Sets the sample directly for all actions with the specified type and media type.\n-        /// <\/summary>\n-        /// <param name="config">The <see cref="HttpConfiguration"/>.<\/param>\n-        /// <param name="sample">The sample.<\/param>\n-        /// <param name="mediaType">The media type.<\/param>\n-        /// <param name="type">The parameter type or return type of an action.<\/param>\n-        public static void SetSampleForType(this HttpConfiguration config, object sample, MediaTypeHeaderValue mediaType, Type type)\n-        {\n-            config.GetHelpPageSampleGenerator().ActionSamples.Add(new HelpPageSampleKey(mediaType, type), sample);\n-        }\n-\n-        /// <summary>\n-        /// Specifies the actual type of <see cref="System.Net.Http.ObjectContent{T}"/> passed to the <see cref="System.Net.Http.HttpRequestMessage"/> in an action. \n-        /// The help page will use this information to produce more accurate request samples.\n-        /// <\/summary>\n-        /// <param name="config">The <see cref="HttpConfiguration"/>.<\/param>\n-        /// <param name="type">The type.<\/param>\n-        /// <param name="controllerName">Name of the controller.<\/param>\n-        /// <param name="actionName">Name of the action.<\/param>\n-        public static void SetActualRequestType(this HttpConfiguration config, Type type, string controllerName, string actionName)\n-        {\n-            config.GetHelpPageSampleGenerator().ActualHttpMessageTypes.Add(new HelpPageSampleKey(SampleDirection.Request, controllerName, actionName, new[] { "*" }), type);\n-        }\n-\n-        /// <summary>\n-        /// Specifies the actual type of <see cref="System.Net.Http.ObjectContent{T}"/> passed to the <see cref="System.Net.Http.HttpRequestMessage"/> in an action. \n-        /// The help page will use this information to produce more accurate request samples.\n-        /// <\/summary>\n-        /// <param name="config">The <see cref="HttpConfiguration"/>.<\/param>\n-        /// <param name="type">The type.<\/param>\n-        /// <param name="controllerName">Name of the controller.<\/param>\n-        /// <param name="actionName">Name of the action.<\/param>\n-        /// <param name="parameterNames">The parameter names.<\/param>\n-        public static void SetActualRequestType(this HttpConfiguration config, Type type, string controllerName, string actionName, params string[] parameterNames)\n-        {\n-            config.GetHelpPageSampleGenerator().ActualHttpMessageTypes.Add(new HelpPageSampleKey(SampleDirection.Request, controllerName, actionName, parameterNames), type);\n-        }\n-\n-        /// <summary>\n-        /// Specifies the actual type of <see cref="System.Net.Http.ObjectContent{T}"/> returned as part of the <see cref="System.Net.Http.HttpRequestMessage"/> in an action. \n-        /// The help page will use this information to produce more accurate response samples.\n-        /// <\/summary>\n-        /// <param name="config">The <see cref="HttpConfiguration"/>.<\/param>\n-        /// <param name="type">The type.<\/param>\n-        /// <param name="controllerName">Name of the controller.<\/param>\n-        /// <param name="actionName">Name of the action.<\/param>\n-        public static void SetActualResponseType(this HttpConfiguration config, Type type, string controllerName, string actionName)\n-        {\n-            config.GetHelpPageSampleGenerator().ActualHttpMessageTypes.Add(new HelpPageSampleKey(SampleDirection.Response, controllerName, actionName, new[] { "*" }), type);\n-        }\n-\n-        /// <summary>\n-        /// Specifies the actual type of <see cref="System.Net.Http.ObjectContent{T}"/> returned as part of the <see cref="System.Net.Http.HttpRequestMessage"/> in an action. \n-        /// The help page will use this information to produce more accurate response samples.\n-        /// <\/summary>\n-        /// <param name="config">The <see cref="HttpConfiguration"/>.<\/param>\n-        /// <param name="type">The type.<\/param>\n-        /// <param name="controllerName">Name of the controller.<\/param>\n-        /// <param name="actionName">Name of the action.<\/param>\n-        /// <param name="parameterNames">The parameter names.<\/param>\n-        public static void SetActualResponseType(this HttpConfiguration config, Type type, string controllerName, string actionName, params string[] parameterNames)\n-        {\n-            config.GetHelpPageSampleGenerator().ActualHttpMessageTypes.Add(new HelpPageSampleKey(SampleDirection.Response, controllerName, actionName, parameterNames), type);\n-        }\n-\n-        /// <summary>\n-        /// Gets the help page sample generator.\n-        /// <\/summary>\n-        /// <param name="config">The <see cref="HttpConfiguration"/>.<\/param>\n-        /// <returns>The help page sample generator.<\/returns>\n-        public static HelpPageSampleGenerator GetHelpPageSampleGenerator(this HttpConfiguration config)\n-        {\n-            return (HelpPageSampleGenerator)config.Properties.GetOrAdd(\n-                typeof(HelpPageSampleGenerator),\n-                k => new HelpPageSampleGenerator());\n-        }\n-\n-        /// <summary>\n-        /// Sets the help page sample generator.\n-        /// <\/summary>\n-        /// <param name="config">The <see cref="HttpConfiguration"/>.<\/param>\n-        /// <param name="sampleGenerator">The help page sample generator.<\/param>\n-        public static void SetHelpPageSampleGenerator(this HttpConfiguration config, HelpPageSampleGenerator sampleGenerator)\n-        {\n-            config.Properties.AddOrUpdate(\n-                typeof(HelpPageSampleGenerator),\n-                k => sampleGenerator,\n-                (k, o) => sampleGenerator);\n-        }\n-\n-        /// <summary>\n-        /// Gets the model that represents an API displayed on the help page. The model is initialized on the first call and cached for subsequent calls.\n-        /// <\/summary>\n-        /// <param name="config">The <see cref="HttpConfiguration"/>.<\/param>\n-        /// <param name="apiDescriptionId">The <see cref="ApiDescription"/> ID.<\/param>\n-        /// <returns>\n-        /// An <see cref="HelpPageApiModel"/>\n-        /// <\/returns>\n-        public static HelpPageApiModel GetHelpPageApiModel(this HttpConfiguration config, string apiDescriptionId)\n-        {\n-            object model;\n-            string modelId = ApiModelPrefix + apiDescriptionId;\n-            if (!config.Properties.TryGetValue(modelId, out model))\n-            {\n-                Collection<ApiDescription> apiDescriptions = config.Services.GetApiExplorer().ApiDescriptions;\n-                ApiDescription apiDescription = apiDescriptions.FirstOrDefault(api => String.Equals(api.GetFriendlyId(), apiDescriptionId, StringComparison.OrdinalIgnoreCase));\n-                if (apiDescription != null)\n-                {\n-                    HelpPageSampleGenerator sampleGenerator = config.GetHelpPageSampleGenerator();\n-                    model = GenerateApiModel(apiDescription, sampleGenerator);\n-                    config.Properties.TryAdd(modelId, model);\n-                }\n-            }\n-\n-            return (HelpPageApiModel)model;\n-        }\n-\n-        [SuppressMessage("Microsoft.Design", "CA1031:DoNotCatchGeneralExceptionTypes", Justification = "The exception is recorded as ErrorMessages.")]\n-        private static HelpPageApiModel GenerateApiModel(ApiDescription apiDescription, HelpPageSampleGenerator sampleGenerator)\n-        {\n-            HelpPageApiModel apiModel = new HelpPageApiModel();\n-            apiModel.ApiDescription = apiDescription;\n-\n-            try\n-            {\n-                foreach (var item in sampleGenerator.GetSampleRequests(apiDescription))\n-                {\n-                    apiModel.SampleRequests.Add(item.Key, item.Value);\n-                    LogInvalidSampleAsError(apiModel, item.Value);\n-                }\n-\n-                foreach (var item in sampleGenerator.GetSampleResponses(apiDescription))\n-                {\n-                    apiModel.SampleResponses.Add(item.Key, item.Value);\n-                    LogInvalidSampleAsError(apiModel, item.Value);\n-                }\n-            }\n-            catch (Exception e)\n-            {\n-                apiModel.ErrorMessages.Add(String.Format(CultureInfo.CurrentCulture, "An exception has occurred while generating the sample. Exception Message: {0}", e.Message));\n-            }\n-\n-            return apiModel;\n-        }\n-\n-        private static void LogInvalidSampleAsError(HelpPageApiModel apiModel, object sample)\n-        {\n-            InvalidSample invalidSample = sample as InvalidSample;\n-            if (invalidSample != null)\n-            {\n-                apiModel.ErrorMessages.Add(invalidSample.ErrorMessage);\n-            }\n-        }\n-    }\n-}'},{sha:"c00522aad0b644675f3437aa397eb12efc322996",filename:"DemoApp/Areas/HelpPage/Models/HelpPageApiModel.cs",status:"removed",additions:0,deletions:43,changes:43,blob_url:"https://github.com/llaughlin/DemoApp/blob/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Areas/HelpPage/Models/HelpPageApiModel.cs",raw_url:"https://github.com/llaughlin/DemoApp/raw/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Areas/HelpPage/Models/HelpPageApiModel.cs",contents_url:"https://api.github.com/repos/llaughlin/DemoApp/contents/DemoApp/Areas/HelpPage/Models/HelpPageApiModel.cs?ref=5064770c5c97742041a767d527b33ea8c4295e52",patch:'@@ -1,43 +0,0 @@\n-using System.Collections.Generic;\n-using System.Collections.ObjectModel;\n-using System.Net.Http.Headers;\n-using System.Web.Http.Description;\n-\n-namespace DemoApp.Areas.HelpPage.Models\n-{\n-    /// <summary>\n-    /// The model that represents an API displayed on the help page.\n-    /// <\/summary>\n-    public class HelpPageApiModel\n-    {\n-        /// <summary>\n-        /// Initializes a new instance of the <see cref="HelpPageApiModel"/> class.\n-        /// <\/summary>\n-        public HelpPageApiModel()\n-        {\n-            SampleRequests = new Dictionary<MediaTypeHeaderValue, object>();\n-            SampleResponses = new Dictionary<MediaTypeHeaderValue, object>();\n-            ErrorMessages = new Collection<string>();\n-        }\n-\n-        /// <summary>\n-        /// Gets or sets the <see cref="ApiDescription"/> that describes the API.\n-        /// <\/summary>\n-        public ApiDescription ApiDescription { get; set; }\n-\n-        /// <summary>\n-        /// Gets the sample requests associated with the API.\n-        /// <\/summary>\n-        public IDictionary<MediaTypeHeaderValue, object> SampleRequests { get; private set; }\n-\n-        /// <summary>\n-        /// Gets the sample responses associated with the API.\n-        /// <\/summary>\n-        public IDictionary<MediaTypeHeaderValue, object> SampleResponses { get; private set; }\n-\n-        /// <summary>\n-        /// Gets the error messages associated with this model.\n-        /// <\/summary>\n-        public Collection<string> ErrorMessages { get; private set; }\n-    }\n-}\n\\ No newline at end of file'},{sha:"b41b4f2f2d97bed04928f3cd1c9dc82c33664e3b",filename:"DemoApp/Areas/HelpPage/SampleGeneration/HelpPageSampleGenerator.cs",status:"removed",additions:0,deletions:372,changes:372,blob_url:"https://github.com/llaughlin/DemoApp/blob/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Areas/HelpPage/SampleGeneration/HelpPageSampleGenerator.cs",raw_url:"https://github.com/llaughlin/DemoApp/raw/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Areas/HelpPage/SampleGeneration/HelpPageSampleGenerator.cs",contents_url:"https://api.github.com/repos/llaughlin/DemoApp/contents/DemoApp/Areas/HelpPage/SampleGeneration/HelpPageSampleGenerator.cs?ref=5064770c5c97742041a767d527b33ea8c4295e52",patch:'@@ -1,372 +0,0 @@\n-using System;\n-using System.Collections.Generic;\n-using System.Collections.ObjectModel;\n-using System.ComponentModel;\n-using System.Diagnostics.CodeAnalysis;\n-using System.Globalization;\n-using System.IO;\n-using System.Linq;\n-using System.Net.Http;\n-using System.Net.Http.Formatting;\n-using System.Net.Http.Headers;\n-using System.Web.Http.Description;\n-using System.Xml.Linq;\n-using Newtonsoft.Json;\n-\n-namespace DemoApp.Areas.HelpPage\n-{\n-    /// <summary>\n-    /// This class will generate the samples for the help page.\n-    /// <\/summary>\n-    public class HelpPageSampleGenerator\n-    {\n-        /// <summary>\n-        /// Initializes a new instance of the <see cref="HelpPageSampleGenerator"/> class.\n-        /// <\/summary>\n-        public HelpPageSampleGenerator()\n-        {\n-            ActualHttpMessageTypes = new Dictionary<HelpPageSampleKey, Type>();\n-            ActionSamples = new Dictionary<HelpPageSampleKey, object>();\n-            SampleObjects = new Dictionary<Type, object>();\n-        }\n-\n-        /// <summary>\n-        /// Gets CLR types that are used as the content of <see cref="HttpRequestMessage"/> or <see cref="HttpResponseMessage"/>.\n-        /// <\/summary>\n-        public IDictionary<HelpPageSampleKey, Type> ActualHttpMessageTypes { get; internal set; }\n-\n-        /// <summary>\n-        /// Gets the objects that are used directly as samples for certain actions.\n-        /// <\/summary>\n-        public IDictionary<HelpPageSampleKey, object> ActionSamples { get; internal set; }\n-\n-        /// <summary>\n-        /// Gets the objects that are serialized as samples by the supported formatters.\n-        /// <\/summary>\n-        public IDictionary<Type, object> SampleObjects { get; internal set; }\n-\n-        /// <summary>\n-        /// Gets the request body samples for a given <see cref="ApiDescription"/>.\n-        /// <\/summary>\n-        /// <param name="api">The <see cref="ApiDescription"/>.<\/param>\n-        /// <returns>The samples keyed by media type.<\/returns>\n-        public IDictionary<MediaTypeHeaderValue, object> GetSampleRequests(ApiDescription api)\n-        {\n-            return GetSample(api, SampleDirection.Request);\n-        }\n-\n-        /// <summary>\n-        /// Gets the response body samples for a given <see cref="ApiDescription"/>.\n-        /// <\/summary>\n-        /// <param name="api">The <see cref="ApiDescription"/>.<\/param>\n-        /// <returns>The samples keyed by media type.<\/returns>\n-        public IDictionary<MediaTypeHeaderValue, object> GetSampleResponses(ApiDescription api)\n-        {\n-            return GetSample(api, SampleDirection.Response);\n-        }\n-\n-        /// <summary>\n-        /// Gets the request or response body samples.\n-        /// <\/summary>\n-        /// <param name="api">The <see cref="ApiDescription"/>.<\/param>\n-        /// <param name="sampleDirection">The value indicating whether the sample is for a request or for a response.<\/param>\n-        /// <returns>The samples keyed by media type.<\/returns>\n-        public virtual IDictionary<MediaTypeHeaderValue, object> GetSample(ApiDescription api, SampleDirection sampleDirection)\n-        {\n-            if (api == null)\n-            {\n-                throw new ArgumentNullException("api");\n-            }\n-            string controllerName = api.ActionDescriptor.ControllerDescriptor.ControllerName;\n-            string actionName = api.ActionDescriptor.ActionName;\n-            IEnumerable<string> parameterNames = api.ParameterDescriptions.Select(p => p.Name);\n-            Collection<MediaTypeFormatter> formatters;\n-            Type type = ResolveType(api, controllerName, actionName, parameterNames, sampleDirection, out formatters);\n-            var samples = new Dictionary<MediaTypeHeaderValue, object>();\n-\n-            // Use the samples provided directly for actions\n-            var actionSamples = GetAllActionSamples(controllerName, actionName, parameterNames, sampleDirection);\n-            foreach (var actionSample in actionSamples)\n-            {\n-                samples.Add(actionSample.Key.MediaType, WrapSampleIfString(actionSample.Value));\n-            }\n-\n-            // Do the sample generation based on formatters only if an action doesn\'t return an HttpResponseMessage.\n-            // Here we cannot rely on formatters because we don\'t know what\'s in the HttpResponseMessage, it might not even use formatters.\n-            if (type != null && !typeof(HttpResponseMessage).IsAssignableFrom(type))\n-            {\n-                object sampleObject = GetSampleObject(type);\n-                foreach (var formatter in formatters)\n-                {\n-                    foreach (MediaTypeHeaderValue mediaType in formatter.SupportedMediaTypes)\n-                    {\n-                        if (!samples.ContainsKey(mediaType))\n-                        {\n-                            object sample = GetActionSample(controllerName, actionName, parameterNames, type, formatter, mediaType, sampleDirection);\n-\n-                            // If no sample found, try generate sample using formatter and sample object\n-                            if (sample == null && sampleObject != null)\n-                            {\n-                                sample = WriteSampleObjectUsingFormatter(formatter, sampleObject, type, mediaType);\n-                            }\n-\n-                            samples.Add(mediaType, WrapSampleIfString(sample));\n-                        }\n-                    }\n-                }\n-            }\n-\n-            return samples;\n-        }\n-\n-        /// <summary>\n-        /// Search for samples that are provided directly through <see cref="ActionSamples"/>.\n-        /// <\/summary>\n-        /// <param name="controllerName">Name of the controller.<\/param>\n-        /// <param name="actionName">Name of the action.<\/param>\n-        /// <param name="parameterNames">The parameter names.<\/param>\n-        /// <param name="type">The CLR type.<\/param>\n-        /// <param name="formatter">The formatter.<\/param>\n-        /// <param name="mediaType">The media type.<\/param>\n-        /// <param name="sampleDirection">The value indicating whether the sample is for a request or for a response.<\/param>\n-        /// <returns>The sample that matches the parameters.<\/returns>\n-        public virtual object GetActionSample(string controllerName, string actionName, IEnumerable<string> parameterNames, Type type, MediaTypeFormatter formatter, MediaTypeHeaderValue mediaType, SampleDirection sampleDirection)\n-        {\n-            object sample;\n-\n-            // First, try get sample provided for a specific mediaType, controllerName, actionName and parameterNames.\n-            // If not found, try get the sample provided for a specific mediaType, controllerName and actionName regardless of the parameterNames\n-            // If still not found, try get the sample provided for a specific type and mediaType \n-            if (ActionSamples.TryGetValue(new HelpPageSampleKey(mediaType, sampleDirection, controllerName, actionName, parameterNames), out sample) ||\n-                ActionSamples.TryGetValue(new HelpPageSampleKey(mediaType, sampleDirection, controllerName, actionName, new[] { "*" }), out sample) ||\n-                ActionSamples.TryGetValue(new HelpPageSampleKey(mediaType, type), out sample))\n-            {\n-                return sample;\n-            }\n-\n-            return null;\n-        }\n-\n-        /// <summary>\n-        /// Gets the sample object that will be serialized by the formatters. \n-        /// First, it will look at the <see cref="SampleObjects"/>. If no sample object is found, it will try to create one using <see cref="ObjectGenerator"/>.\n-        /// <\/summary>\n-        /// <param name="type">The type.<\/param>\n-        /// <returns>The sample object.<\/returns>\n-        public virtual object GetSampleObject(Type type)\n-        {\n-            object sampleObject;\n-\n-            if (!SampleObjects.TryGetValue(type, out sampleObject))\n-            {\n-                // Try create a default sample object\n-                ObjectGenerator objectGenerator = new ObjectGenerator();\n-                sampleObject = objectGenerator.GenerateObject(type);\n-            }\n-\n-            return sampleObject;\n-        }\n-\n-        /// <summary>\n-        /// Resolves the type of the action parameter or return value when <see cref="HttpRequestMessage"/> or <see cref="HttpResponseMessage"/> is used.\n-        /// <\/summary>\n-        /// <param name="api">The <see cref="ApiDescription"/>.<\/param>\n-        /// <param name="controllerName">Name of the controller.<\/param>\n-        /// <param name="actionName">Name of the action.<\/param>\n-        /// <param name="parameterNames">The parameter names.<\/param>\n-        /// <param name="sampleDirection">The value indicating whether the sample is for a request or a response.<\/param>\n-        /// <param name="formatters">The formatters.<\/param>\n-        [SuppressMessage("Microsoft.Design", "CA1021:AvoidOutParameters", Justification = "This is only used in advanced scenarios.")]\n-        public virtual Type ResolveType(ApiDescription api, string controllerName, string actionName, IEnumerable<string> parameterNames, SampleDirection sampleDirection, out Collection<MediaTypeFormatter> formatters)\n-        {\n-            if (!Enum.IsDefined(typeof(SampleDirection), sampleDirection))\n-            {\n-                throw new InvalidEnumArgumentException("sampleDirection", (int)sampleDirection, typeof(SampleDirection));\n-            }\n-            if (api == null)\n-            {\n-                throw new ArgumentNullException("api");\n-            }\n-            Type type;\n-            if (ActualHttpMessageTypes.TryGetValue(new HelpPageSampleKey(sampleDirection, controllerName, actionName, parameterNames), out type) ||\n-                ActualHttpMessageTypes.TryGetValue(new HelpPageSampleKey(sampleDirection, controllerName, actionName, new[] { "*" }), out type))\n-            {\n-                // Re-compute the supported formatters based on type\n-                Collection<MediaTypeFormatter> newFormatters = new Collection<MediaTypeFormatter>();\n-                foreach (var formatter in api.ActionDescriptor.Configuration.Formatters)\n-                {\n-                    if (IsFormatSupported(sampleDirection, formatter, type))\n-                    {\n-                        newFormatters.Add(formatter);\n-                    }\n-                }\n-                formatters = newFormatters;\n-            }\n-            else\n-            {\n-                switch (sampleDirection)\n-                {\n-                    case SampleDirection.Request:\n-                        ApiParameterDescription requestBodyParameter = api.ParameterDescriptions.FirstOrDefault(p => p.Source == ApiParameterSource.FromBody);\n-                        type = requestBodyParameter == null ? null : requestBodyParameter.ParameterDescriptor.ParameterType;\n-                        formatters = api.SupportedRequestBodyFormatters;\n-                        break;\n-                    case SampleDirection.Response:\n-                    default:\n-                        type = api.ActionDescriptor.ReturnType;\n-                        formatters = api.SupportedResponseFormatters;\n-                        break;\n-                }\n-            }\n-\n-            return type;\n-        }\n-\n-        /// <summary>\n-        /// Writes the sample object using formatter.\n-        /// <\/summary>\n-        /// <param name="formatter">The formatter.<\/param>\n-        /// <param name="value">The value.<\/param>\n-        /// <param name="type">The type.<\/param>\n-        /// <param name="mediaType">Type of the media.<\/param>\n-        /// <returns><\/returns>\n-        [SuppressMessage("Microsoft.Design", "CA1031:DoNotCatchGeneralExceptionTypes", Justification = "The exception is recorded as InvalidSample.")]\n-        public virtual object WriteSampleObjectUsingFormatter(MediaTypeFormatter formatter, object value, Type type, MediaTypeHeaderValue mediaType)\n-        {\n-            if (formatter == null)\n-            {\n-                throw new ArgumentNullException("formatter");\n-            }\n-            if (mediaType == null)\n-            {\n-                throw new ArgumentNullException("mediaType");\n-            }\n-\n-            object sample = String.Empty;\n-            MemoryStream ms = null;\n-            HttpContent content = null;\n-            try\n-            {\n-                if (formatter.CanWriteType(type))\n-                {\n-                    ms = new MemoryStream();\n-                    content = new ObjectContent(type, value, formatter, mediaType);\n-                    formatter.WriteToStreamAsync(type, value, ms, content, null).Wait();\n-                    ms.Position = 0;\n-                    StreamReader reader = new StreamReader(ms);\n-                    string serializedSampleString = reader.ReadToEnd();\n-                    if (mediaType.MediaType.ToUpperInvariant().Contains("XML"))\n-                    {\n-                        serializedSampleString = TryFormatXml(serializedSampleString);\n-                    }\n-                    else if (mediaType.MediaType.ToUpperInvariant().Contains("JSON"))\n-                    {\n-                        serializedSampleString = TryFormatJson(serializedSampleString);\n-                    }\n-\n-                    sample = new TextSample(serializedSampleString);\n-                }\n-                else\n-                {\n-                    sample = new InvalidSample(String.Format(\n-                        CultureInfo.CurrentCulture,\n-                        "Failed to generate the sample for media type \'{0}\'. Cannot use formatter \'{1}\' to write type \'{2}\'.",\n-                        mediaType,\n-                        formatter.GetType().Name,\n-                        type.Name));\n-                }\n-            }\n-            catch (Exception e)\n-            {\n-                sample = new InvalidSample(String.Format(\n-                    CultureInfo.CurrentCulture,\n-                    "An exception has occurred while using the formatter \'{0}\' to generate sample for media type \'{1}\'. Exception message: {2}",\n-                    formatter.GetType().Name,\n-                    mediaType.MediaType,\n-                    e.Message));\n-            }\n-            finally\n-            {\n-                if (ms != null)\n-                {\n-                    ms.Dispose();\n-                }\n-                if (content != null)\n-                {\n-                    content.Dispose();\n-                }\n-            }\n-\n-            return sample;\n-        }\n-\n-        [SuppressMessage("Microsoft.Design", "CA1031:DoNotCatchGeneralExceptionTypes", Justification = "Handling the failure by returning the original string.")]\n-        private static string TryFormatJson(string str)\n-        {\n-            try\n-            {\n-                object parsedJson = JsonConvert.DeserializeObject(str);\n-                return JsonConvert.SerializeObject(parsedJson, Formatting.Indented);\n-            }\n-            catch\n-            {\n-                // can\'t parse JSON, return the original string\n-                return str;\n-            }\n-        }\n-\n-        [SuppressMessage("Microsoft.Design", "CA1031:DoNotCatchGeneralExceptionTypes", Justification = "Handling the failure by returning the original string.")]\n-        private static string TryFormatXml(string str)\n-        {\n-            try\n-            {\n-                XDocument xml = XDocument.Parse(str);\n-                return xml.ToString();\n-            }\n-            catch\n-            {\n-                // can\'t parse XML, return the original string\n-                return str;\n-            }\n-        }\n-\n-        private static bool IsFormatSupported(SampleDirection sampleDirection, MediaTypeFormatter formatter, Type type)\n-        {\n-            switch (sampleDirection)\n-            {\n-                case SampleDirection.Request:\n-                    return formatter.CanReadType(type);\n-                case SampleDirection.Response:\n-                    return formatter.CanWriteType(type);\n-            }\n-            return false;\n-        }\n-\n-        private IEnumerable<KeyValuePair<HelpPageSampleKey, object>> GetAllActionSamples(string controllerName, string actionName, IEnumerable<string> parameterNames, SampleDirection sampleDirection)\n-        {\n-            HashSet<string> parameterNamesSet = new HashSet<string>(parameterNames, StringComparer.OrdinalIgnoreCase);\n-            foreach (var sample in ActionSamples)\n-            {\n-                HelpPageSampleKey sampleKey = sample.Key;\n-                if (String.Equals(controllerName, sampleKey.ControllerName, StringComparison.OrdinalIgnoreCase) &&\n-                    String.Equals(actionName, sampleKey.ActionName, StringComparison.OrdinalIgnoreCase) &&\n-                    (sampleKey.ParameterNames.SetEquals(new[] { "*" }) || parameterNamesSet.SetEquals(sampleKey.ParameterNames)) &&\n-                    sampleDirection == sampleKey.SampleDirection)\n-                {\n-                    yield return sample;\n-                }\n-            }\n-        }\n-\n-        private static object WrapSampleIfString(object sample)\n-        {\n-            string stringSample = sample as string;\n-            if (stringSample != null)\n-            {\n-                return new TextSample(stringSample);\n-            }\n-\n-            return sample;\n-        }\n-    }\n-}\n\\ No newline at end of file'},{sha:"95266dfb960b2b71af6e865c8d4e7d6e8cfc5667",filename:"DemoApp/Areas/HelpPage/SampleGeneration/HelpPageSampleKey.cs",status:"removed",additions:0,deletions:178,changes:178,blob_url:"https://github.com/llaughlin/DemoApp/blob/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Areas/HelpPage/SampleGeneration/HelpPageSampleKey.cs",raw_url:"https://github.com/llaughlin/DemoApp/raw/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Areas/HelpPage/SampleGeneration/HelpPageSampleKey.cs",contents_url:"https://api.github.com/repos/llaughlin/DemoApp/contents/DemoApp/Areas/HelpPage/SampleGeneration/HelpPageSampleKey.cs?ref=5064770c5c97742041a767d527b33ea8c4295e52",patch:'@@ -1,178 +0,0 @@\n-using System;\n-using System.Collections.Generic;\n-using System.ComponentModel;\n-using System.Net.Http.Headers;\n-\n-namespace DemoApp.Areas.HelpPage\n-{\n-    /// <summary>\n-    /// This is used to identify the place where the sample should be applied.\n-    /// <\/summary>\n-    public class HelpPageSampleKey\n-    {\n-        /// <summary>\n-        /// Creates a new <see cref="HelpPageSampleKey"/> based on media type and CLR type.\n-        /// <\/summary>\n-        /// <param name="mediaType">The media type.<\/param>\n-        /// <param name="type">The CLR type.<\/param>\n-        public HelpPageSampleKey(MediaTypeHeaderValue mediaType, Type type)\n-        {\n-            if (mediaType == null)\n-            {\n-                throw new ArgumentNullException("mediaType");\n-            }\n-            if (type == null)\n-            {\n-                throw new ArgumentNullException("type");\n-            }\n-            ControllerName = String.Empty;\n-            ActionName = String.Empty;\n-            ParameterNames = new HashSet<string>(StringComparer.OrdinalIgnoreCase);\n-            ParameterType = type;\n-            MediaType = mediaType;\n-        }\n-\n-        /// <summary>\n-        /// Creates a new <see cref="HelpPageSampleKey"/> based on <see cref="SampleDirection"/>, controller name, action name and parameter names.\n-        /// <\/summary>\n-        /// <param name="sampleDirection">The <see cref="SampleDirection"/>.<\/param>\n-        /// <param name="controllerName">Name of the controller.<\/param>\n-        /// <param name="actionName">Name of the action.<\/param>\n-        /// <param name="parameterNames">The parameter names.<\/param>\n-        public HelpPageSampleKey(SampleDirection sampleDirection, string controllerName, string actionName, IEnumerable<string> parameterNames)\n-        {\n-            if (!Enum.IsDefined(typeof(SampleDirection), sampleDirection))\n-            {\n-                throw new InvalidEnumArgumentException("sampleDirection", (int)sampleDirection, typeof(SampleDirection));\n-            }\n-            if (controllerName == null)\n-            {\n-                throw new ArgumentNullException("controllerName");\n-            }\n-            if (actionName == null)\n-            {\n-                throw new ArgumentNullException("actionName");\n-            }\n-            if (parameterNames == null)\n-            {\n-                throw new ArgumentNullException("parameterNames");\n-            }\n-            ControllerName = controllerName;\n-            ActionName = actionName;\n-            ParameterNames = new HashSet<string>(parameterNames, StringComparer.OrdinalIgnoreCase);\n-            SampleDirection = sampleDirection;\n-        }\n-\n-        /// <summary>\n-        /// Creates a new <see cref="HelpPageSampleKey"/> based on media type, <see cref="SampleDirection"/>, controller name, action name and parameter names.\n-        /// <\/summary>\n-        /// <param name="mediaType">The media type.<\/param>\n-        /// <param name="sampleDirection">The <see cref="SampleDirection"/>.<\/param>\n-        /// <param name="controllerName">Name of the controller.<\/param>\n-        /// <param name="actionName">Name of the action.<\/param>\n-        /// <param name="parameterNames">The parameter names.<\/param>\n-        public HelpPageSampleKey(MediaTypeHeaderValue mediaType, SampleDirection sampleDirection, string controllerName, string actionName, IEnumerable<string> parameterNames)\n-        {\n-            if (mediaType == null)\n-            {\n-                throw new ArgumentNullException("mediaType");\n-            }\n-            if (!Enum.IsDefined(typeof(SampleDirection), sampleDirection))\n-            {\n-                throw new InvalidEnumArgumentException("sampleDirection", (int)sampleDirection, typeof(SampleDirection));\n-            }\n-            if (controllerName == null)\n-            {\n-                throw new ArgumentNullException("controllerName");\n-            }\n-            if (actionName == null)\n-            {\n-                throw new ArgumentNullException("actionName");\n-            }\n-            if (parameterNames == null)\n-            {\n-                throw new ArgumentNullException("parameterNames");\n-            }\n-            ControllerName = controllerName;\n-            ActionName = actionName;\n-            MediaType = mediaType;\n-            ParameterNames = new HashSet<string>(parameterNames, StringComparer.OrdinalIgnoreCase);\n-            SampleDirection = sampleDirection;\n-        }\n-\n-        /// <summary>\n-        /// Gets the name of the controller.\n-        /// <\/summary>\n-        /// <value>\n-        /// The name of the controller.\n-        /// <\/value>\n-        public string ControllerName { get; private set; }\n-\n-        /// <summary>\n-        /// Gets the name of the action.\n-        /// <\/summary>\n-        /// <value>\n-        /// The name of the action.\n-        /// <\/value>\n-        public string ActionName { get; private set; }\n-\n-        /// <summary>\n-        /// Gets the media type.\n-        /// <\/summary>\n-        /// <value>\n-        /// The media type.\n-        /// <\/value>\n-        public MediaTypeHeaderValue MediaType { get; private set; }\n-\n-        /// <summary>\n-        /// Gets the parameter names.\n-        /// <\/summary>\n-        public HashSet<string> ParameterNames { get; private set; }\n-\n-        public Type ParameterType { get; private set; }\n-\n-        /// <summary>\n-        /// Gets the <see cref="SampleDirection"/>.\n-        /// <\/summary>\n-        public SampleDirection? SampleDirection { get; private set; }\n-\n-        public override bool Equals(object obj)\n-        {\n-            HelpPageSampleKey otherKey = obj as HelpPageSampleKey;\n-            if (otherKey == null)\n-            {\n-                return false;\n-            }\n-\n-            return String.Equals(ControllerName, otherKey.ControllerName, StringComparison.OrdinalIgnoreCase) &&\n-                String.Equals(ActionName, otherKey.ActionName, StringComparison.OrdinalIgnoreCase) &&\n-                (MediaType == otherKey.MediaType || (MediaType != null && MediaType.Equals(otherKey.MediaType))) &&\n-                ParameterType == otherKey.ParameterType &&\n-                SampleDirection == otherKey.SampleDirection &&\n-                ParameterNames.SetEquals(otherKey.ParameterNames);\n-        }\n-\n-        public override int GetHashCode()\n-        {\n-            int hashCode = ControllerName.ToUpperInvariant().GetHashCode() ^ ActionName.ToUpperInvariant().GetHashCode();\n-            if (MediaType != null)\n-            {\n-                hashCode ^= MediaType.GetHashCode();\n-            }\n-            if (SampleDirection != null)\n-            {\n-                hashCode ^= SampleDirection.GetHashCode();\n-            }\n-            if (ParameterType != null)\n-            {\n-                hashCode ^= ParameterType.GetHashCode();\n-            }\n-            foreach (string parameterName in ParameterNames)\n-            {\n-                hashCode ^= parameterName.ToUpperInvariant().GetHashCode();\n-            }\n-\n-            return hashCode;\n-        }\n-    }\n-}'},{sha:"2befff74e0df5d288d3c207b1b4389ee8f726ae2",filename:"DemoApp/Areas/HelpPage/SampleGeneration/ImageSample.cs",status:"removed",additions:0,deletions:41,changes:41,blob_url:"https://github.com/llaughlin/DemoApp/blob/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Areas/HelpPage/SampleGeneration/ImageSample.cs",raw_url:"https://github.com/llaughlin/DemoApp/raw/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Areas/HelpPage/SampleGeneration/ImageSample.cs",contents_url:"https://api.github.com/repos/llaughlin/DemoApp/contents/DemoApp/Areas/HelpPage/SampleGeneration/ImageSample.cs?ref=5064770c5c97742041a767d527b33ea8c4295e52",patch:'@@ -1,41 +0,0 @@\n-using System;\n-\n-namespace DemoApp.Areas.HelpPage\n-{\n-    /// <summary>\n-    /// This represents an image sample on the help page. There\'s a display template named ImageSample associated with this class.\n-    /// <\/summary>\n-    public class ImageSample\n-    {\n-        /// <summary>\n-        /// Initializes a new instance of the <see cref="ImageSample"/> class.\n-        /// <\/summary>\n-        /// <param name="src">The URL of an image.<\/param>\n-        public ImageSample(string src)\n-        {\n-            if (src == null)\n-            {\n-                throw new ArgumentNullException("src");\n-            }\n-            Src = src;\n-        }\n-\n-        public string Src { get; private set; }\n-\n-        public override bool Equals(object obj)\n-        {\n-            ImageSample other = obj as ImageSample;\n-            return other != null && Src == other.Src;\n-        }\n-\n-        public override int GetHashCode()\n-        {\n-            return Src.GetHashCode();\n-        }\n-\n-        public override string ToString()\n-        {\n-            return Src;\n-        }\n-    }\n-}\n\\ No newline at end of file'},{sha:"4d724e7d42542279f76a76dfd86a0c1c6e5e03a7",filename:"DemoApp/Areas/HelpPage/SampleGeneration/InvalidSample.cs",status:"removed",additions:0,deletions:37,changes:37,blob_url:"https://github.com/llaughlin/DemoApp/blob/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Areas/HelpPage/SampleGeneration/InvalidSample.cs",raw_url:"https://github.com/llaughlin/DemoApp/raw/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Areas/HelpPage/SampleGeneration/InvalidSample.cs",contents_url:"https://api.github.com/repos/llaughlin/DemoApp/contents/DemoApp/Areas/HelpPage/SampleGeneration/InvalidSample.cs?ref=5064770c5c97742041a767d527b33ea8c4295e52",patch:'@@ -1,37 +0,0 @@\n-using System;\n-\n-namespace DemoApp.Areas.HelpPage\n-{\n-    /// <summary>\n-    /// This represents an invalid sample on the help page. There\'s a display template named InvalidSample associated with this class.\n-    /// <\/summary>\n-    public class InvalidSample\n-    {\n-        public InvalidSample(string errorMessage)\n-        {\n-            if (errorMessage == null)\n-            {\n-                throw new ArgumentNullException("errorMessage");\n-            }\n-            ErrorMessage = errorMessage;\n-        }\n-\n-        public string ErrorMessage { get; private set; }\n-\n-        public override bool Equals(object obj)\n-        {\n-            InvalidSample other = obj as InvalidSample;\n-            return other != null && ErrorMessage == other.ErrorMessage;\n-        }\n-\n-        public override int GetHashCode()\n-        {\n-            return ErrorMessage.GetHashCode();\n-        }\n-\n-        public override string ToString()\n-        {\n-            return ErrorMessage;\n-        }\n-    }\n-}\n\\ No newline at end of file'},{sha:"14d509777c172d4b1a02dfbb0770d313cf114d87",filename:"DemoApp/Areas/HelpPage/SampleGeneration/ObjectGenerator.cs",status:"removed",additions:0,deletions:456,changes:456,blob_url:"https://github.com/llaughlin/DemoApp/blob/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Areas/HelpPage/SampleGeneration/ObjectGenerator.cs",raw_url:"https://github.com/llaughlin/DemoApp/raw/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Areas/HelpPage/SampleGeneration/ObjectGenerator.cs",contents_url:"https://api.github.com/repos/llaughlin/DemoApp/contents/DemoApp/Areas/HelpPage/SampleGeneration/ObjectGenerator.cs?ref=5064770c5c97742041a767d527b33ea8c4295e52",patch:'@@ -1,456 +0,0 @@\n-using System;\n-using System.Collections;\n-using System.Collections.Generic;\n-using System.Diagnostics.CodeAnalysis;\n-using System.Globalization;\n-using System.Linq;\n-using System.Reflection;\n-\n-namespace DemoApp.Areas.HelpPage\n-{\n-    /// <summary>\n-    /// This class will create an object of a given type and populate it with sample data.\n-    /// <\/summary>\n-    public class ObjectGenerator\n-    {\n-        private const int DefaultCollectionSize = 3;\n-        private readonly SimpleTypeObjectGenerator SimpleObjectGenerator = new SimpleTypeObjectGenerator();\n-\n-        /// <summary>\n-        /// Generates an object for a given type. The type needs to be public, have a public default constructor and settable public properties/fields. Currently it supports the following types:\n-        /// Simple types: <see cref="int"/>, <see cref="string"/>, <see cref="Enum"/>, <see cref="DateTime"/>, <see cref="Uri"/>, etc.\n-        /// Complex types: POCO types.\n-        /// Nullables: <see cref="Nullable{T}"/>.\n-        /// Arrays: arrays of simple types or complex types.\n-        /// Key value pairs: <see cref="KeyValuePair{TKey,TValue}"/>\n-        /// Tuples: <see cref="Tuple{T1}"/>, <see cref="Tuple{T1,T2}"/>, etc\n-        /// Dictionaries: <see cref="IDictionary{TKey,TValue}"/> or anything deriving from <see cref="IDictionary{TKey,TValue}"/>.\n-        /// Collections: <see cref="IList{T}"/>, <see cref="IEnumerable{T}"/>, <see cref="ICollection{T}"/>, <see cref="IList"/>, <see cref="IEnumerable"/>, <see cref="ICollection"/> or anything deriving from <see cref="ICollection{T}"/> or <see cref="IList"/>.\n-        /// Queryables: <see cref="IQueryable"/>, <see cref="IQueryable{T}"/>.\n-        /// <\/summary>\n-        /// <param name="type">The type.<\/param>\n-        /// <returns>An object of the given type.<\/returns>\n-        public object GenerateObject(Type type)\n-        {\n-            return GenerateObject(type, new Dictionary<Type, object>());\n-        }\n-\n-        [SuppressMessage("Microsoft.Design", "CA1031:DoNotCatchGeneralExceptionTypes", Justification = "Here we just want to return null if anything goes wrong.")]\n-        private object GenerateObject(Type type, Dictionary<Type, object> createdObjectReferences)\n-        {\n-            try\n-            {\n-                if (SimpleTypeObjectGenerator.CanGenerateObject(type))\n-                {\n-                    return SimpleObjectGenerator.GenerateObject(type);\n-                }\n-\n-                if (type.IsArray)\n-                {\n-                    return GenerateArray(type, DefaultCollectionSize, createdObjectReferences);\n-                }\n-\n-                if (type.IsGenericType)\n-                {\n-                    return GenerateGenericType(type, DefaultCollectionSize, createdObjectReferences);\n-                }\n-\n-                if (type == typeof(IDictionary))\n-                {\n-                    return GenerateDictionary(typeof(Hashtable), DefaultCollectionSize, createdObjectReferences);\n-                }\n-\n-                if (typeof(IDictionary).IsAssignableFrom(type))\n-                {\n-                    return GenerateDictionary(type, DefaultCollectionSize, createdObjectReferences);\n-                }\n-\n-                if (type == typeof(IList) ||\n-                    type == typeof(IEnumerable) ||\n-                    type == typeof(ICollection))\n-                {\n-                    return GenerateCollection(typeof(ArrayList), DefaultCollectionSize, createdObjectReferences);\n-                }\n-\n-                if (typeof(IList).IsAssignableFrom(type))\n-                {\n-                    return GenerateCollection(type, DefaultCollectionSize, createdObjectReferences);\n-                }\n-\n-                if (type == typeof(IQueryable))\n-                {\n-                    return GenerateQueryable(type, DefaultCollectionSize, createdObjectReferences);\n-                }\n-\n-                if (type.IsEnum)\n-                {\n-                    return GenerateEnum(type);\n-                }\n-\n-                if (type.IsPublic || type.IsNestedPublic)\n-                {\n-                    return GenerateComplexObject(type, createdObjectReferences);\n-                }\n-            }\n-            catch\n-            {\n-                // Returns null if anything fails\n-                return null;\n-            }\n-\n-            return null;\n-        }\n-\n-        private static object GenerateGenericType(Type type, int collectionSize, Dictionary<Type, object> createdObjectReferences)\n-        {\n-            Type genericTypeDefinition = type.GetGenericTypeDefinition();\n-            if (genericTypeDefinition == typeof(Nullable<>))\n-            {\n-                return GenerateNullable(type, createdObjectReferences);\n-            }\n-\n-            if (genericTypeDefinition == typeof(KeyValuePair<,>))\n-            {\n-                return GenerateKeyValuePair(type, createdObjectReferences);\n-            }\n-\n-            if (IsTuple(genericTypeDefinition))\n-            {\n-                return GenerateTuple(type, createdObjectReferences);\n-            }\n-\n-            Type[] genericArguments = type.GetGenericArguments();\n-            if (genericArguments.Length == 1)\n-            {\n-                if (genericTypeDefinition == typeof(IList<>) ||\n-                    genericTypeDefinition == typeof(IEnumerable<>) ||\n-                    genericTypeDefinition == typeof(ICollection<>))\n-                {\n-                    Type collectionType = typeof(List<>).MakeGenericType(genericArguments);\n-                    return GenerateCollection(collectionType, collectionSize, createdObjectReferences);\n-                }\n-\n-                if (genericTypeDefinition == typeof(IQueryable<>))\n-                {\n-                    return GenerateQueryable(type, collectionSize, createdObjectReferences);\n-                }\n-\n-                Type closedCollectionType = typeof(ICollection<>).MakeGenericType(genericArguments[0]);\n-                if (closedCollectionType.IsAssignableFrom(type))\n-                {\n-                    return GenerateCollection(type, collectionSize, createdObjectReferences);\n-                }\n-            }\n-\n-            if (genericArguments.Length == 2)\n-            {\n-                if (genericTypeDefinition == typeof(IDictionary<,>))\n-                {\n-                    Type dictionaryType = typeof(Dictionary<,>).MakeGenericType(genericArguments);\n-                    return GenerateDictionary(dictionaryType, collectionSize, createdObjectReferences);\n-                }\n-\n-                Type closedDictionaryType = typeof(IDictionary<,>).MakeGenericType(genericArguments[0], genericArguments[1]);\n-                if (closedDictionaryType.IsAssignableFrom(type))\n-                {\n-                    return GenerateDictionary(type, collectionSize, createdObjectReferences);\n-                }\n-            }\n-\n-            if (type.IsPublic || type.IsNestedPublic)\n-            {\n-                return GenerateComplexObject(type, createdObjectReferences);\n-            }\n-\n-            return null;\n-        }\n-\n-        private static object GenerateTuple(Type type, Dictionary<Type, object> createdObjectReferences)\n-        {\n-            Type[] genericArgs = type.GetGenericArguments();\n-            object[] parameterValues = new object[genericArgs.Length];\n-            bool failedToCreateTuple = true;\n-            ObjectGenerator objectGenerator = new ObjectGenerator();\n-            for (int i = 0; i < genericArgs.Length; i++)\n-            {\n-                parameterValues[i] = objectGenerator.GenerateObject(genericArgs[i], createdObjectReferences);\n-                failedToCreateTuple &= parameterValues[i] == null;\n-            }\n-            if (failedToCreateTuple)\n-            {\n-                return null;\n-            }\n-            object result = Activator.CreateInstance(type, parameterValues);\n-            return result;\n-        }\n-\n-        private static bool IsTuple(Type genericTypeDefinition)\n-        {\n-            return genericTypeDefinition == typeof(Tuple<>) ||\n-                genericTypeDefinition == typeof(Tuple<,>) ||\n-                genericTypeDefinition == typeof(Tuple<,,>) ||\n-                genericTypeDefinition == typeof(Tuple<,,,>) ||\n-                genericTypeDefinition == typeof(Tuple<,,,,>) ||\n-                genericTypeDefinition == typeof(Tuple<,,,,,>) ||\n-                genericTypeDefinition == typeof(Tuple<,,,,,,>) ||\n-                genericTypeDefinition == typeof(Tuple<,,,,,,,>);\n-        }\n-\n-        private static object GenerateKeyValuePair(Type keyValuePairType, Dictionary<Type, object> createdObjectReferences)\n-        {\n-            Type[] genericArgs = keyValuePairType.GetGenericArguments();\n-            Type typeK = genericArgs[0];\n-            Type typeV = genericArgs[1];\n-            ObjectGenerator objectGenerator = new ObjectGenerator();\n-            object keyObject = objectGenerator.GenerateObject(typeK, createdObjectReferences);\n-            object valueObject = objectGenerator.GenerateObject(typeV, createdObjectReferences);\n-            if (keyObject == null && valueObject == null)\n-            {\n-                // Failed to create key and values\n-                return null;\n-            }\n-            object result = Activator.CreateInstance(keyValuePairType, keyObject, valueObject);\n-            return result;\n-        }\n-\n-        private static object GenerateArray(Type arrayType, int size, Dictionary<Type, object> createdObjectReferences)\n-        {\n-            Type type = arrayType.GetElementType();\n-            Array result = Array.CreateInstance(type, size);\n-            bool areAllElementsNull = true;\n-            ObjectGenerator objectGenerator = new ObjectGenerator();\n-            for (int i = 0; i < size; i++)\n-            {\n-                object element = objectGenerator.GenerateObject(type, createdObjectReferences);\n-                result.SetValue(element, i);\n-                areAllElementsNull &= element == null;\n-            }\n-\n-            if (areAllElementsNull)\n-            {\n-                return null;\n-            }\n-\n-            return result;\n-        }\n-\n-        private static object GenerateDictionary(Type dictionaryType, int size, Dictionary<Type, object> createdObjectReferences)\n-        {\n-            Type typeK = typeof(object);\n-            Type typeV = typeof(object);\n-            if (dictionaryType.IsGenericType)\n-            {\n-                Type[] genericArgs = dictionaryType.GetGenericArguments();\n-                typeK = genericArgs[0];\n-                typeV = genericArgs[1];\n-            }\n-\n-            object result = Activator.CreateInstance(dictionaryType);\n-            MethodInfo addMethod = dictionaryType.GetMethod("Add") ?? dictionaryType.GetMethod("TryAdd");\n-            MethodInfo containsMethod = dictionaryType.GetMethod("Contains") ?? dictionaryType.GetMethod("ContainsKey");\n-            ObjectGenerator objectGenerator = new ObjectGenerator();\n-            for (int i = 0; i < size; i++)\n-            {\n-                object newKey = objectGenerator.GenerateObject(typeK, createdObjectReferences);\n-                if (newKey == null)\n-                {\n-                    // Cannot generate a valid key\n-                    return null;\n-                }\n-\n-                bool containsKey = (bool)containsMethod.Invoke(result, new object[] { newKey });\n-                if (!containsKey)\n-                {\n-                    object newValue = objectGenerator.GenerateObject(typeV, createdObjectReferences);\n-                    addMethod.Invoke(result, new object[] { newKey, newValue });\n-                }\n-            }\n-\n-            return result;\n-        }\n-\n-        private static object GenerateEnum(Type enumType)\n-        {\n-            Array possibleValues = Enum.GetValues(enumType);\n-            if (possibleValues.Length > 0)\n-            {\n-                return possibleValues.GetValue(0);\n-            }\n-            return null;\n-        }\n-\n-        private static object GenerateQueryable(Type queryableType, int size, Dictionary<Type, object> createdObjectReferences)\n-        {\n-            bool isGeneric = queryableType.IsGenericType;\n-            object list;\n-            if (isGeneric)\n-            {\n-                Type listType = typeof(List<>).MakeGenericType(queryableType.GetGenericArguments());\n-                list = GenerateCollection(listType, size, createdObjectReferences);\n-            }\n-            else\n-            {\n-                list = GenerateArray(typeof(object[]), size, createdObjectReferences);\n-            }\n-            if (list == null)\n-            {\n-                return null;\n-            }\n-            if (isGeneric)\n-            {\n-                Type argumentType = typeof(IEnumerable<>).MakeGenericType(queryableType.GetGenericArguments());\n-                MethodInfo asQueryableMethod = typeof(Queryable).GetMethod("AsQueryable", new[] { argumentType });\n-                return asQueryableMethod.Invoke(null, new[] { list });\n-            }\n-\n-            return Queryable.AsQueryable((IEnumerable)list);\n-        }\n-\n-        private static object GenerateCollection(Type collectionType, int size, Dictionary<Type, object> createdObjectReferences)\n-        {\n-            Type type = collectionType.IsGenericType ?\n-                collectionType.GetGenericArguments()[0] :\n-                typeof(object);\n-            object result = Activator.CreateInstance(collectionType);\n-            MethodInfo addMethod = collectionType.GetMethod("Add");\n-            bool areAllElementsNull = true;\n-            ObjectGenerator objectGenerator = new ObjectGenerator();\n-            for (int i = 0; i < size; i++)\n-            {\n-                object element = objectGenerator.GenerateObject(type, createdObjectReferences);\n-                addMethod.Invoke(result, new object[] { element });\n-                areAllElementsNull &= element == null;\n-            }\n-\n-            if (areAllElementsNull)\n-            {\n-                return null;\n-            }\n-\n-            return result;\n-        }\n-\n-        private static object GenerateNullable(Type nullableType, Dictionary<Type, object> createdObjectReferences)\n-        {\n-            Type type = nullableType.GetGenericArguments()[0];\n-            ObjectGenerator objectGenerator = new ObjectGenerator();\n-            return objectGenerator.GenerateObject(type, createdObjectReferences);\n-        }\n-\n-        private static object GenerateComplexObject(Type type, Dictionary<Type, object> createdObjectReferences)\n-        {\n-            object result = null;\n-\n-            if (createdObjectReferences.TryGetValue(type, out result))\n-            {\n-                // The object has been created already, just return it. This will handle the circular reference case.\n-                return result;\n-            }\n-\n-            if (type.IsValueType)\n-            {\n-                result = Activator.CreateInstance(type);\n-            }\n-            else\n-            {\n-                ConstructorInfo defaultCtor = type.GetConstructor(Type.EmptyTypes);\n-                if (defaultCtor == null)\n-                {\n-                    // Cannot instantiate the type because it doesn\'t have a default constructor\n-                    return null;\n-                }\n-\n-                result = defaultCtor.Invoke(new object[0]);\n-            }\n-            createdObjectReferences.Add(type, result);\n-            SetPublicProperties(type, result, createdObjectReferences);\n-            SetPublicFields(type, result, createdObjectReferences);\n-            return result;\n-        }\n-\n-        private static void SetPublicProperties(Type type, object obj, Dictionary<Type, object> createdObjectReferences)\n-        {\n-            PropertyInfo[] properties = type.GetProperties(BindingFlags.Public | BindingFlags.Instance);\n-            ObjectGenerator objectGenerator = new ObjectGenerator();\n-            foreach (PropertyInfo property in properties)\n-            {\n-                if (property.CanWrite)\n-                {\n-                    object propertyValue = objectGenerator.GenerateObject(property.PropertyType, createdObjectReferences);\n-                    property.SetValue(obj, propertyValue, null);\n-                }\n-            }\n-        }\n-\n-        private static void SetPublicFields(Type type, object obj, Dictionary<Type, object> createdObjectReferences)\n-        {\n-            FieldInfo[] fields = type.GetFields(BindingFlags.Public | BindingFlags.Instance);\n-            ObjectGenerator objectGenerator = new ObjectGenerator();\n-            foreach (FieldInfo field in fields)\n-            {\n-                object fieldValue = objectGenerator.GenerateObject(field.FieldType, createdObjectReferences);\n-                field.SetValue(obj, fieldValue);\n-            }\n-        }\n-\n-        private class SimpleTypeObjectGenerator\n-        {\n-            private long _index = 0;\n-            private static readonly Dictionary<Type, Func<long, object>> DefaultGenerators = InitializeGenerators();\n-\n-            [SuppressMessage("Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity", Justification = "These are simple type factories and cannot be split up.")]\n-            private static Dictionary<Type, Func<long, object>> InitializeGenerators()\n-            {\n-                return new Dictionary<Type, Func<long, object>>\n-                {\n-                    { typeof(Boolean), index => true },\n-                    { typeof(Byte), index => (Byte)64 },\n-                    { typeof(Char), index => (Char)65 },\n-                    { typeof(DateTime), index => DateTime.Now },\n-                    { typeof(DateTimeOffset), index => new DateTimeOffset(DateTime.Now) },\n-                    { typeof(DBNull), index => DBNull.Value },\n-                    { typeof(Decimal), index => (Decimal)index },\n-                    { typeof(Double), index => (Double)(index + 0.1) },\n-                    { typeof(Guid), index => Guid.NewGuid() },\n-                    { typeof(Int16), index => (Int16)(index % Int16.MaxValue) },\n-                    { typeof(Int32), index => (Int32)(index % Int32.MaxValue) },\n-                    { typeof(Int64), index => (Int64)index },\n-                    { typeof(Object), index => new object() },\n-                    { typeof(SByte), index => (SByte)64 },\n-                    { typeof(Single), index => (Single)(index + 0.1) },\n-                    { \n-                        typeof(String), index =>\n-                        {\n-                            return String.Format(CultureInfo.CurrentCulture, "sample string {0}", index);\n-                        }\n-                    },\n-                    { \n-                        typeof(TimeSpan), index =>\n-                        {\n-                            return TimeSpan.FromTicks(1234567);\n-                        }\n-                    },\n-                    { typeof(UInt16), index => (UInt16)(index % UInt16.MaxValue) },\n-                    { typeof(UInt32), index => (UInt32)(index % UInt32.MaxValue) },\n-                    { typeof(UInt64), index => (UInt64)index },\n-                    { \n-                        typeof(Uri), index =>\n-                        {\n-                            return new Uri(String.Format(CultureInfo.CurrentCulture, "http://webapihelppage{0}.com", index));\n-                        }\n-                    },\n-                };\n-            }\n-\n-            public static bool CanGenerateObject(Type type)\n-            {\n-                return DefaultGenerators.ContainsKey(type);\n-            }\n-\n-            public object GenerateObject(Type type)\n-            {\n-                return DefaultGenerators[type](++_index);\n-            }\n-        }\n-    }\n-}\n\\ No newline at end of file'},{sha:"5dca8ac2d7fe5aa4ad9c4b95ef937624f1d517e7",filename:"DemoApp/Areas/HelpPage/SampleGeneration/SampleDirection.cs",status:"removed",additions:0,deletions:11,changes:11,blob_url:"https://github.com/llaughlin/DemoApp/blob/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Areas/HelpPage/SampleGeneration/SampleDirection.cs",raw_url:"https://github.com/llaughlin/DemoApp/raw/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Areas/HelpPage/SampleGeneration/SampleDirection.cs",contents_url:"https://api.github.com/repos/llaughlin/DemoApp/contents/DemoApp/Areas/HelpPage/SampleGeneration/SampleDirection.cs?ref=5064770c5c97742041a767d527b33ea8c4295e52",patch:"@@ -1,11 +0,0 @@\n-namespace DemoApp.Areas.HelpPage\n-{\n-    /// <summary>\n-    /// Indicates whether the sample is used for request or response\n-    /// <\/summary>\n-    public enum SampleDirection\n-    {\n-        Request = 0,\n-        Response\n-    }\n-}\n\\ No newline at end of file"},{sha:"2cbc58c671d19a6addebe2200988f70bca77fb8c",filename:"DemoApp/Areas/HelpPage/SampleGeneration/TextSample.cs",status:"removed",additions:0,deletions:37,changes:37,blob_url:"https://github.com/llaughlin/DemoApp/blob/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Areas/HelpPage/SampleGeneration/TextSample.cs",raw_url:"https://github.com/llaughlin/DemoApp/raw/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Areas/HelpPage/SampleGeneration/TextSample.cs",contents_url:"https://api.github.com/repos/llaughlin/DemoApp/contents/DemoApp/Areas/HelpPage/SampleGeneration/TextSample.cs?ref=5064770c5c97742041a767d527b33ea8c4295e52",patch:'@@ -1,37 +0,0 @@\n-using System;\n-\n-namespace DemoApp.Areas.HelpPage\n-{\n-    /// <summary>\n-    /// This represents a preformatted text sample on the help page. There\'s a display template named TextSample associated with this class.\n-    /// <\/summary>\n-    public class TextSample\n-    {\n-        public TextSample(string text)\n-        {\n-            if (text == null)\n-            {\n-                throw new ArgumentNullException("text");\n-            }\n-            Text = text;\n-        }\n-\n-        public string Text { get; private set; }\n-\n-        public override bool Equals(object obj)\n-        {\n-            TextSample other = obj as TextSample;\n-            return other != null && Text == other.Text;\n-        }\n-\n-        public override int GetHashCode()\n-        {\n-            return Text.GetHashCode();\n-        }\n-\n-        public override string ToString()\n-        {\n-            return Text;\n-        }\n-    }\n-}\n\\ No newline at end of file'},{sha:"cfcb97f739e365b3f892ca9372d93beb52e46ca3",filename:"DemoApp/Areas/HelpPage/Views/Help/Api.cshtml",status:"removed",additions:0,deletions:25,changes:25,blob_url:"https://github.com/llaughlin/DemoApp/blob/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Areas/HelpPage/Views/Help/Api.cshtml",raw_url:"https://github.com/llaughlin/DemoApp/raw/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Areas/HelpPage/Views/Help/Api.cshtml",contents_url:"https://api.github.com/repos/llaughlin/DemoApp/contents/DemoApp/Areas/HelpPage/Views/Help/Api.cshtml?ref=5064770c5c97742041a767d527b33ea8c4295e52",patch:'@@ -1,25 +0,0 @@\n-@using System.Web.Http\n-@using DemoApp.Areas.HelpPage.Models\n-@model HelpPageApiModel\n-\n-@{\n-    var description = Model.ApiDescription;\n-    ViewBag.Title = description.HttpMethod.Method + " " + description.RelativePath;\n-}\n-\n-<div id="body">\n-    <section class="featured">\n-        <div class="content-wrapper">\n-            <p>\n-                @Html.ActionLink("Help Page Home", "Index")\n-            <\/p>\n-        <\/div>\n-    <\/section>\n-    <section class="content-wrapper main-content clear-fix">\n-        @Html.DisplayFor(m => Model)\n-    <\/section>\n-<\/div>\n-\n-@section Scripts {\n-    <link type="text/css" href="~/Areas/HelpPage/HelpPage.css" rel="stylesheet" />\n-}\n\\ No newline at end of file'},{sha:"1c2217840e2dc5f5e63d255d0e9a05707f216b0a",filename:"DemoApp/Areas/HelpPage/Views/Help/DisplayTemplates/ApiGroup.cshtml",status:"removed",additions:0,deletions:30,changes:30,blob_url:"https://github.com/llaughlin/DemoApp/blob/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Areas/HelpPage/Views/Help/DisplayTemplates/ApiGroup.cshtml",raw_url:"https://github.com/llaughlin/DemoApp/raw/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Areas/HelpPage/Views/Help/DisplayTemplates/ApiGroup.cshtml",contents_url:"https://api.github.com/repos/llaughlin/DemoApp/contents/DemoApp/Areas/HelpPage/Views/Help/DisplayTemplates/ApiGroup.cshtml?ref=5064770c5c97742041a767d527b33ea8c4295e52",patch:'@@ -1,30 +0,0 @@\n-@using System.Web.Http\n-@using System.Web.Http.Description\n-@using DemoApp.Areas.HelpPage\n-@using DemoApp.Areas.HelpPage.Models\n-@model IGrouping<string, ApiDescription>\n-\n-<h2 id="@Model.Key">@Model.Key<\/h2>\n-<table class="help-page-table">\n-    <thead>\n-        <tr><th>API<\/th><th>Description<\/th><\/tr>\n-    <\/thead>\n-    <tbody>\n-    @foreach (var api in Model)\n-    {\n-        <tr>\n-            <td class="api-name"><a href="@Url.Action("Api", "Help", new { apiId = api.GetFriendlyId() })">@api.HttpMethod.Method @api.RelativePath<\/a><\/td>\n-            <td class="api-documentation">\n-            @if (api.Documentation != null)\n-            {\n-                <p>@api.Documentation<\/p>\n-            }\n-            else\n-            {\n-                <p>No documentation available.<\/p>\n-            }\n-            <\/td>\n-        <\/tr>\n-    }\n-    <\/tbody>\n-<\/table>\n\\ No newline at end of file'},{sha:"c74608bdfcfdf452fde2fdee8d02e598d85814e5",filename:"DemoApp/Areas/HelpPage/Views/Help/DisplayTemplates/HelpPageApiModel.cshtml",status:"removed",additions:0,deletions:43,changes:43,blob_url:"https://github.com/llaughlin/DemoApp/blob/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Areas/HelpPage/Views/Help/DisplayTemplates/HelpPageApiModel.cshtml",raw_url:"https://github.com/llaughlin/DemoApp/raw/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Areas/HelpPage/Views/Help/DisplayTemplates/HelpPageApiModel.cshtml",contents_url:"https://api.github.com/repos/llaughlin/DemoApp/contents/DemoApp/Areas/HelpPage/Views/Help/DisplayTemplates/HelpPageApiModel.cshtml?ref=5064770c5c97742041a767d527b33ea8c4295e52",patch:'@@ -1,43 +0,0 @@\n-@using System.Web.Http\n-@using DemoApp.Areas.HelpPage.Models\n-@model HelpPageApiModel\n-\n-@{ \n-    var description = Model.ApiDescription;\n-    bool hasParameters = description.ParameterDescriptions.Count > 0;\n-    bool hasRequestSamples = Model.SampleRequests.Count > 0;\n-    bool hasResponseSamples = Model.SampleResponses.Count > 0;\n-}\n-<h1>@description.HttpMethod.Method @description.RelativePath<\/h1>\n-<div>\n-    @if (description.Documentation != null)\n-    {\n-        <p>@description.Documentation<\/p>\n-    }\n-    else\n-    {\n-        <p>No documentation available.<\/p>\n-    }\n-\n-    @if (hasParameters || hasRequestSamples)\n-    {\n-        <h2>Request Information<\/h2>\n-        if (hasParameters)\n-        {\n-            <h3>Parameters<\/h3>\n-            @Html.DisplayFor(apiModel => apiModel.ApiDescription.ParameterDescriptions, "Parameters")\n-        }\n-        if (hasRequestSamples)\n-        {\n-            <h3>Request body formats<\/h3>\n-            @Html.DisplayFor(apiModel => apiModel.SampleRequests, "Samples")\n-        }\n-    } \n-\n-    @if (hasResponseSamples)\n-    {\n-        <h2>Response Information<\/h2> \n-        <h3>Response body formats<\/h3>\n-        @Html.DisplayFor(apiModel => apiModel.SampleResponses, "Samples")\n-    }\n-<\/div>\n\\ No newline at end of file'},{sha:"ead6f7eef592ec09b0690d9348b531de1b24cb58",filename:"DemoApp/Areas/HelpPage/Views/Help/DisplayTemplates/ImageSample.cshtml",status:"removed",additions:0,deletions:4,changes:4,blob_url:"https://github.com/llaughlin/DemoApp/blob/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Areas/HelpPage/Views/Help/DisplayTemplates/ImageSample.cshtml",raw_url:"https://github.com/llaughlin/DemoApp/raw/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Areas/HelpPage/Views/Help/DisplayTemplates/ImageSample.cshtml",contents_url:"https://api.github.com/repos/llaughlin/DemoApp/contents/DemoApp/Areas/HelpPage/Views/Help/DisplayTemplates/ImageSample.cshtml?ref=5064770c5c97742041a767d527b33ea8c4295e52",patch:'@@ -1,4 +0,0 @@\n-@using DemoApp.Areas.HelpPage\n-@model ImageSample\n-\n-<img src="@Model.Src" />\n\\ No newline at end of file'},{sha:"859c2194b1e33a6f0d0bb67a822cee3636f70e3a",filename:"DemoApp/Areas/HelpPage/Views/Help/DisplayTemplates/InvalidSample.cshtml",status:"removed",additions:0,deletions:13,changes:13,blob_url:"https://github.com/llaughlin/DemoApp/blob/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Areas/HelpPage/Views/Help/DisplayTemplates/InvalidSample.cshtml",raw_url:"https://github.com/llaughlin/DemoApp/raw/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Areas/HelpPage/Views/Help/DisplayTemplates/InvalidSample.cshtml",contents_url:"https://api.github.com/repos/llaughlin/DemoApp/contents/DemoApp/Areas/HelpPage/Views/Help/DisplayTemplates/InvalidSample.cshtml?ref=5064770c5c97742041a767d527b33ea8c4295e52",patch:'@@ -1,13 +0,0 @@\n-@using DemoApp.Areas.HelpPage\n-@model InvalidSample\n-\n-@if (HttpContext.Current.IsDebuggingEnabled)\n-{\n-    <div class="warning-message-container">\n-        <p>@Model.ErrorMessage<\/p>\n-    <\/div>\n-}\n-else\n-{\n-    <p>Sample not available.<\/p>\n-}\n\\ No newline at end of file'},{sha:"6023df644447cabbdf001e338472c3d349b4cc8c",filename:"DemoApp/Areas/HelpPage/Views/Help/DisplayTemplates/Parameters.cshtml",status:"removed",additions:0,deletions:42,changes:42,blob_url:"https://github.com/llaughlin/DemoApp/blob/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Areas/HelpPage/Views/Help/DisplayTemplates/Parameters.cshtml",raw_url:"https://github.com/llaughlin/DemoApp/raw/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Areas/HelpPage/Views/Help/DisplayTemplates/Parameters.cshtml",contents_url:"https://api.github.com/repos/llaughlin/DemoApp/contents/DemoApp/Areas/HelpPage/Views/Help/DisplayTemplates/Parameters.cshtml?ref=5064770c5c97742041a767d527b33ea8c4295e52",patch:'@@ -1,42 +0,0 @@\n-@using System.Collections.ObjectModel\n-@using System.Web.Http.Description\n-@using System.Threading\n-@model Collection<ApiParameterDescription>\n-\n-<table class="help-page-table">\n-    <thead>\n-    <tr><th>Name<\/th><th>Description<\/th><th>Additional information<\/th><\/tr>\n-    <\/thead>\n-    <tbody>\n-    @foreach (ApiParameterDescription parameter in Model)\n-    {\n-        string parameterDocumentation = parameter.Documentation != null ?\n-            parameter.Documentation :\n-            "No documentation available.";\n-\n-        // Don\'t show CancellationToken because it\'s a special parameter\n-        if (!typeof(CancellationToken).IsAssignableFrom(parameter.ParameterDescriptor.ParameterType))\n-        {\n-            <tr>\n-                <td class="parameter-name"><b>@parameter.Name<\/b><\/td>\n-                <td class="parameter-documentation"><pre>@parameterDocumentation<\/pre><\/td>\n-                <td class="parameter-source">\n-                    @switch (parameter.Source)\n-                    {\n-                        case ApiParameterSource.FromBody:\n-                            <p>Define this parameter in the request <b>body<\/b>.<\/p>\n-                            break;\n-                        case ApiParameterSource.FromUri:\n-                            <p>Define this parameter in the request <b>URI<\/b>.<\/p>\n-                            break;\n-                        case ApiParameterSource.Unknown:\n-                        default:\n-                            <p>None.<\/p>\n-                            break;\n-                    }\n-                <\/td>\n-            <\/tr>\n-        }\n-    }\n-    <\/tbody>\n-<\/table>\n\\ No newline at end of file'},{sha:"c19596fb12f8a1ffac15ca90d5fe2bf66137f3fa",filename:"DemoApp/Areas/HelpPage/Views/Help/DisplayTemplates/Samples.cshtml",status:"removed",additions:0,deletions:30,changes:30,blob_url:"https://github.com/llaughlin/DemoApp/blob/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Areas/HelpPage/Views/Help/DisplayTemplates/Samples.cshtml",raw_url:"https://github.com/llaughlin/DemoApp/raw/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Areas/HelpPage/Views/Help/DisplayTemplates/Samples.cshtml",contents_url:"https://api.github.com/repos/llaughlin/DemoApp/contents/DemoApp/Areas/HelpPage/Views/Help/DisplayTemplates/Samples.cshtml?ref=5064770c5c97742041a767d527b33ea8c4295e52",patch:'@@ -1,30 +0,0 @@\n-@using System.Net.Http.Headers\n-@model Dictionary<MediaTypeHeaderValue, object>\n-\n-@{\n-    // Group the samples into a single tab if they are the same.\n-    Dictionary<string, object> samples = Model.GroupBy(pair => pair.Value).ToDictionary(\n-        pair => String.Join(", ", pair.Select(m => m.Key.ToString()).ToArray()), \n-        pair => pair.Key);\n-    var mediaTypes = samples.Keys;\n-}\n-<div>\n-    @foreach (var mediaType in mediaTypes)\n-    {\n-        <h4 class="sample-header">@mediaType<\/h4>\n-        <div class="sample-content">\n-            <span><b>Sample:<\/b><\/span>\n-            @{\n-                var sample = samples[mediaType];\n-                if (sample == null)\n-                {\n-                    <p>Sample not available.<\/p>\n-                }\n-                else\n-                {\n-                    @Html.DisplayFor(s => sample);\n-                }\n-            }\n-        <\/div>\n-    }\n-<\/div>\n\\ No newline at end of file'},{sha:"0049da0b6bff2202fe51a8d4a0a7bc8af18b99fe",filename:"DemoApp/Areas/HelpPage/Views/Help/DisplayTemplates/TextSample.cshtml",status:"removed",additions:0,deletions:6,changes:6,blob_url:"https://github.com/llaughlin/DemoApp/blob/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Areas/HelpPage/Views/Help/DisplayTemplates/TextSample.cshtml",raw_url:"https://github.com/llaughlin/DemoApp/raw/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Areas/HelpPage/Views/Help/DisplayTemplates/TextSample.cshtml",contents_url:"https://api.github.com/repos/llaughlin/DemoApp/contents/DemoApp/Areas/HelpPage/Views/Help/DisplayTemplates/TextSample.cshtml?ref=5064770c5c97742041a767d527b33ea8c4295e52",patch:'@@ -1,6 +0,0 @@\n-@using DemoApp.Areas.HelpPage\n-@model TextSample\n-\n-<pre class="wrapped">\n-@Model.Text\n-<\/pre>\n\\ No newline at end of file'},{sha:"9133341d79491e5d429b72a64d0be1e7ca86e7d6",filename:"DemoApp/Areas/HelpPage/Views/Help/Index.cshtml",status:"removed",additions:0,deletions:40,changes:40,blob_url:"https://github.com/llaughlin/DemoApp/blob/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Areas/HelpPage/Views/Help/Index.cshtml",raw_url:"https://github.com/llaughlin/DemoApp/raw/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Areas/HelpPage/Views/Help/Index.cshtml",contents_url:"https://api.github.com/repos/llaughlin/DemoApp/contents/DemoApp/Areas/HelpPage/Views/Help/Index.cshtml?ref=5064770c5c97742041a767d527b33ea8c4295e52",patch:'@@ -1,40 +0,0 @@\n-@using System.Web.Http\n-@using System.Web.Http.Description\n-@using System.Collections.ObjectModel\n-@using DemoApp.Areas.HelpPage.Models\n-@model Collection<ApiDescription>\n-\n-@{\n-    ViewBag.Title = "ASP.NET Web API Help Page";\n-\n-    // Group APIs by controller\n-    ILookup<string, ApiDescription> apiGroups = Model.ToLookup(api => api.ActionDescriptor.ControllerDescriptor.ControllerName);\n-}\n-\n-<header>\n-    <div class="content-wrapper">\n-        <div class="float-left">\n-            <h1>@ViewBag.Title<\/h1>\n-        <\/div>\n-    <\/div>\n-<\/header>\n-<div id="body">\n-    <section class="featured">\n-        <div class="content-wrapper">\n-            <h2>Introduction<\/h2>\n-            <p>\n-                Provide a general description of your APIs here.\n-            <\/p>\n-        <\/div>\n-    <\/section>\n-    <section class="content-wrapper main-content clear-fix">\n-        @foreach (var group in apiGroups)\n-        {\n-            @Html.DisplayFor(m => group, "ApiGroup")\n-        }\n-    <\/section>\n-<\/div>\n-\n-@section Scripts {\n-    <link type="text/css" href="~/Areas/HelpPage/HelpPage.css" rel="stylesheet" />\n-}\n\\ No newline at end of file'},{sha:"bc2e96f9bce8ff9f301b94841a14c4f0b2c05581",filename:"DemoApp/Areas/HelpPage/Views/Shared/_Layout.cshtml",status:"removed",additions:0,deletions:12,changes:12,blob_url:"https://github.com/llaughlin/DemoApp/blob/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Areas/HelpPage/Views/Shared/_Layout.cshtml",raw_url:"https://github.com/llaughlin/DemoApp/raw/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Areas/HelpPage/Views/Shared/_Layout.cshtml",contents_url:"https://api.github.com/repos/llaughlin/DemoApp/contents/DemoApp/Areas/HelpPage/Views/Shared/_Layout.cshtml?ref=5064770c5c97742041a767d527b33ea8c4295e52",patch:'@@ -1,12 +0,0 @@\n-<!DOCTYPE html>\n-<html>\n-<head>\n-    <meta charset="utf-8" />\n-    <meta name="viewport" content="width=device-width" />\n-    <title>@ViewBag.Title<\/title>\n-    @RenderSection("scripts", required: false)\n-<\/head>\n-<body>\n-    @RenderBody()\n-<\/body>\n-<\/html>\n\\ No newline at end of file'},{sha:"4794f5cff6edce00b13529aedfa87ab2dd656b61",filename:"DemoApp/Areas/HelpPage/Views/Web.config",status:"removed",additions:0,deletions:62,changes:62,blob_url:"https://github.com/llaughlin/DemoApp/blob/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Areas/HelpPage/Views/Web.config",raw_url:"https://github.com/llaughlin/DemoApp/raw/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Areas/HelpPage/Views/Web.config",contents_url:"https://api.github.com/repos/llaughlin/DemoApp/contents/DemoApp/Areas/HelpPage/Views/Web.config?ref=5064770c5c97742041a767d527b33ea8c4295e52",patch:'@@ -1,62 +0,0 @@\n-<?xml version="1.0"?>\n-\n-<configuration>\n-  <configSections>\n-    <sectionGroup name="system.web.webPages.razor" type="System.Web.WebPages.Razor.Configuration.RazorWebSectionGroup, System.Web.WebPages.Razor, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35">\n-      <section name="host" type="System.Web.WebPages.Razor.Configuration.HostSection, System.Web.WebPages.Razor, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" requirePermission="false" />\n-      <section name="pages" type="System.Web.WebPages.Razor.Configuration.RazorPagesSection, System.Web.WebPages.Razor, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" requirePermission="false" />\n-    <\/sectionGroup>\n-  <\/configSections>\n-\n-  <system.web.webPages.razor>\n-    <host factoryType="System.Web.Mvc.MvcWebRazorHostFactory, System.Web.Mvc, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" />\n-    <pages pageBaseType="System.Web.Mvc.WebViewPage">\n-      <namespaces>\n-        <add namespace="System.Web.Mvc" />\n-        <add namespace="System.Web.Mvc.Ajax" />\n-        <add namespace="System.Web.Mvc.Html" />\n-        <add namespace="System.Web.Routing" />\n-      <\/namespaces>\n-    <\/pages>\n-  <\/system.web.webPages.razor>\n-\n-  <appSettings>\n-    <add key="webpages:Enabled" value="false" />\n-  <\/appSettings>\n-\n-  <system.web>\n-    <httpHandlers>\n-      <add path="*" verb="*" type="System.Web.HttpNotFoundHandler"/>\n-    <\/httpHandlers>\n-    <compilation debug="true">\n-      <assemblies>\n-        <add assembly="System.Net.Http, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />\n-      <\/assemblies>\n-    <\/compilation>\n-    <!--\n-        Enabling request validation in view pages would cause validation to occur\n-        after the input has already been processed by the controller. By default\n-        MVC performs request validation before a controller processes the input.\n-        To change this behavior apply the ValidateInputAttribute to a\n-        controller or action.\n-    -->\n-    <pages\n-        validateRequest="false"\n-        pageParserFilterType="System.Web.Mvc.ViewTypeParserFilter, System.Web.Mvc, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"\n-        pageBaseType="System.Web.Mvc.ViewPage, System.Web.Mvc, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"\n-        userControlBaseType="System.Web.Mvc.ViewUserControl, System.Web.Mvc, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35">\n-      <controls>\n-        <add assembly="System.Web.Mvc, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35" namespace="System.Web.Mvc" tagPrefix="mvc" />\n-      <\/controls>\n-    <\/pages>\n-  <\/system.web>\n-\n-  <system.webServer>\n-    <validation validateIntegratedModeConfiguration="false" />\n-\n-    <handlers>\n-      <remove name="BlockViewHandler"/>\n-      <add name="BlockViewHandler" path="*" verb="*" preCondition="integratedMode" type="System.Web.HttpNotFoundHandler" />\n-    <\/handlers>\n-  <\/system.webServer>\n-<\/configuration>'},{sha:"7184d348dad67d53192b4f755fa6e94db0c80b39",filename:"DemoApp/Areas/HelpPage/Views/_ViewStart.cshtml",status:"removed",additions:0,deletions:4,changes:4,blob_url:"https://github.com/llaughlin/DemoApp/blob/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Areas/HelpPage/Views/_ViewStart.cshtml",raw_url:"https://github.com/llaughlin/DemoApp/raw/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Areas/HelpPage/Views/_ViewStart.cshtml",contents_url:"https://api.github.com/repos/llaughlin/DemoApp/contents/DemoApp/Areas/HelpPage/Views/_ViewStart.cshtml?ref=5064770c5c97742041a767d527b33ea8c4295e52",patch:'@@ -1,4 +0,0 @@\n-@{\n-    // Change the Layout path below to blend the look and feel of the help page with your existing web pages.\n-    Layout = "~/Views/Shared/_Layout.cshtml";\n-}'},{sha:"af3c9da5e52fbe2dfca0b01cac546e10da9cc4e8",filename:"DemoApp/Areas/HelpPage/XmlDocumentationProvider.cs",status:"removed",additions:0,deletions:112,changes:112,blob_url:"https://github.com/llaughlin/DemoApp/blob/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Areas/HelpPage/XmlDocumentationProvider.cs",raw_url:"https://github.com/llaughlin/DemoApp/raw/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Areas/HelpPage/XmlDocumentationProvider.cs",contents_url:"https://api.github.com/repos/llaughlin/DemoApp/contents/DemoApp/Areas/HelpPage/XmlDocumentationProvider.cs?ref=5064770c5c97742041a767d527b33ea8c4295e52",patch:'@@ -1,112 +0,0 @@\n-using System;\n-using System.Globalization;\n-using System.Linq;\n-using System.Reflection;\n-using System.Web.Http.Controllers;\n-using System.Web.Http.Description;\n-using System.Xml.XPath;\n-\n-namespace DemoApp.Areas.HelpPage\n-{\n-    /// <summary>\n-    /// A custom <see cref="IDocumentationProvider"/> that reads the API documentation from an XML documentation file.\n-    /// <\/summary>\n-    public class XmlDocumentationProvider : IDocumentationProvider\n-    {\n-        private XPathNavigator _documentNavigator;\n-        private const string MethodExpression = "/doc/members/member[@name=\'M:{0}\']";\n-        private const string ParameterExpression = "param[@name=\'{0}\']";\n-\n-        /// <summary>\n-        /// Initializes a new instance of the <see cref="XmlDocumentationProvider"/> class.\n-        /// <\/summary>\n-        /// <param name="documentPath">The physical path to XML document.<\/param>\n-        public XmlDocumentationProvider(string documentPath)\n-        {\n-            if (documentPath == null)\n-            {\n-                throw new ArgumentNullException("documentPath");\n-            }\n-            XPathDocument xpath = new XPathDocument(documentPath);\n-            _documentNavigator = xpath.CreateNavigator();\n-        }\n-\n-        public virtual string GetDocumentation(HttpActionDescriptor actionDescriptor)\n-        {\n-            XPathNavigator methodNode = GetMethodNode(actionDescriptor);\n-            if (methodNode != null)\n-            {\n-                XPathNavigator summaryNode = methodNode.SelectSingleNode("summary");\n-                if (summaryNode != null)\n-                {\n-                    return summaryNode.Value.Trim();\n-                }\n-            }\n-\n-            return null;\n-        }\n-\n-        public virtual string GetDocumentation(HttpParameterDescriptor parameterDescriptor)\n-        {\n-            ReflectedHttpParameterDescriptor reflectedParameterDescriptor = parameterDescriptor as ReflectedHttpParameterDescriptor;\n-            if (reflectedParameterDescriptor != null)\n-            {\n-                XPathNavigator methodNode = GetMethodNode(reflectedParameterDescriptor.ActionDescriptor);\n-                if (methodNode != null)\n-                {\n-                    string parameterName = reflectedParameterDescriptor.ParameterInfo.Name;\n-                    XPathNavigator parameterNode = methodNode.SelectSingleNode(String.Format(CultureInfo.InvariantCulture, ParameterExpression, parameterName));\n-                    if (parameterNode != null)\n-                    {\n-                        return parameterNode.Value.Trim();\n-                    }\n-                }\n-            }\n-\n-            return null;\n-        }\n-\n-        private XPathNavigator GetMethodNode(HttpActionDescriptor actionDescriptor)\n-        {\n-            ReflectedHttpActionDescriptor reflectedActionDescriptor = actionDescriptor as ReflectedHttpActionDescriptor;\n-            if (reflectedActionDescriptor != null)\n-            {\n-                string selectExpression = String.Format(CultureInfo.InvariantCulture, MethodExpression, GetMemberName(reflectedActionDescriptor.MethodInfo));\n-                return _documentNavigator.SelectSingleNode(selectExpression);\n-            }\n-\n-            return null;\n-        }\n-\n-        private static string GetMemberName(MethodInfo method)\n-        {\n-            string name = String.Format(CultureInfo.InvariantCulture, "{0}.{1}", method.DeclaringType.FullName, method.Name);\n-            ParameterInfo[] parameters = method.GetParameters();\n-            if (parameters.Length != 0)\n-            {\n-                string[] parameterTypeNames = parameters.Select(param => GetTypeName(param.ParameterType)).ToArray();\n-                name += String.Format(CultureInfo.InvariantCulture, "({0})", String.Join(",", parameterTypeNames));\n-            }\n-\n-            return name;\n-        }\n-\n-        private static string GetTypeName(Type type)\n-        {\n-            if (type.IsGenericType)\n-            {\n-                // Format the generic type name to something like: Generic{System.Int32,System.String}\n-                Type genericType = type.GetGenericTypeDefinition();\n-                Type[] genericArguments = type.GetGenericArguments();\n-                string typeName = genericType.FullName;\n-\n-                // Trim the generic parameter counts from the name\n-                typeName = typeName.Substring(0, typeName.IndexOf(\'`\'));\n-                string[] argumentTypeNames = genericArguments.Select(t => GetTypeName(t)).ToArray();\n-                return String.Format(CultureInfo.InvariantCulture, "{0}{{{1}}}", typeName, String.Join(",", argumentTypeNames));\n-            }\n-\n-            return type.FullName;\n-        }\n-    }\n-}'},{sha:"0e9faf95c4535d9251f07ccaeb9647bfd2b410a4",filename:"DemoApp/Content/TodoList.css",status:"removed",additions:0,deletions:92,changes:92,blob_url:"https://github.com/llaughlin/DemoApp/blob/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Content/TodoList.css",raw_url:"https://github.com/llaughlin/DemoApp/raw/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Content/TodoList.css",contents_url:"https://api.github.com/repos/llaughlin/DemoApp/contents/DemoApp/Content/TodoList.css?ref=5064770c5c97742041a767d527b33ea8c4295e52",patch:"@@ -1,92 +0,0 @@\n-.todoList {\n-    position: relative;\n-    width: 280px;\n-    min-height: 280px;\n-    display: inline-block;\n-    margin: 1em;\n-    padding-top: 8px;\n-    text-align: center;\n-    -moz-box-shadow: 10px 10px 9px rgba(0, 0, 0, 0.22);\n-    -webkit-box-shadow: 10px 10px 9px rgba(0, 0, 0, 0.22);\n-    box-shadow: 10px 10px 9px rgba(0, 0, 0, 0.22);\n-    background-color: #ffc;\n-    vertical-align: top;\n-}\n-\n-    .todoList:before {\n-        content: \"\";\n-        position: absolute;\n-        top: 0;\n-        left: 0;\n-        border-width: 0 0 24px 24px;\n-        border-style: solid;\n-        border-color: #f6f6c7 #fff;\n-    }\n-\n-    .todoList header {\n-        z-index: auto;\n-    }\n-\n-    .todoList header input, .todoList header input:focus,\n-    .todoList ul input, .todoList ul input:focus, .addTodo {\n-        font-family: 'Bradley Hand ITC';\n-        outline: none;\n-    }\n-\n-    .todoList header input {\n-        border: none;\n-        background: none;\n-        text-align: center;\n-        width: 95%;\n-        font-size: 1.8em;\n-    }\n-\n-    .todoList ul {\n-        list-style: none;\n-        padding: 0 0 0 12px;\n-        margin: 0;\n-    }\n-\n-    .addTodo {\n-        padding: 0;\n-        margin-left: 25px;\n-        display: block;\n-        color: #999;\n-    }\n-\n-    .todoList input[type=text], .addTodo {\n-        width: 200px;\n-        border: none;\n-        background: none;\n-    }\n-\n-    .todoList input[disabled] {\n-        color: #666;\n-        text-decoration: line-through;\n-    }\n-\n-    .todoList a {\n-        color: silver;\n-        text-decoration: none;\n-        font: .8em verdana;\n-    }\n-\n-        .todoList a.deletelist {\n-            position: absolute;\n-            top: -5px;\n-            right: -10px;\n-            background: silver;\n-            color: white;\n-            -moz-border-radius: 20px;\n-            -webkit-border-radius: 20px;\n-            border-radius: 20px;\n-            text-decoration: none;\n-            font-weight: bold;\n-            width: 20px;\n-            height: 20px;\n-            display: inline-block;\n-        }\n-\n-.todoItemInput::-ms-clear {\n-    display: none;\n-}\n\\ No newline at end of file"},{sha:"46f4402ac34f1dba54eaef0d307d42c43d33f9ab",filename:"DemoApp/Controllers/AccountController.cs",status:"removed",additions:0,deletions:417,changes:417,blob_url:"https://github.com/llaughlin/DemoApp/blob/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Controllers/AccountController.cs",raw_url:"https://github.com/llaughlin/DemoApp/raw/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Controllers/AccountController.cs",contents_url:"https://api.github.com/repos/llaughlin/DemoApp/contents/DemoApp/Controllers/AccountController.cs?ref=5064770c5c97742041a767d527b33ea8c4295e52",patch:'@@ -1,417 +0,0 @@\n-﻿using System;\n-using System.Collections.Generic;\n-using System.Linq;\n-using System.Transactions;\n-using System.Web.Mvc;\n-using System.Web.Security;\n-using DotNetOpenAuth.AspNet;\n-using Microsoft.Web.WebPages.OAuth;\n-using WebMatrix.WebData;\n-using DemoApp.Filters;\n-using DemoApp.Models;\n-\n-namespace DemoApp.Controllers\n-{\n-    [Authorize]\n-    [InitializeSimpleMembership]\n-    public class AccountController : Controller\n-    {\n-        //\n-        // POST: /Account/JsonLogin\n-\n-        [AllowAnonymous]\n-        [HttpPost]\n-        public JsonResult JsonLogin(LoginModel model, string returnUrl)\n-        {\n-            if(ModelState.IsValid)\n-            {\n-                if(WebSecurity.Login(model.UserName, model.Password, persistCookie: model.RememberMe))\n-                {\n-                    FormsAuthentication.SetAuthCookie(model.UserName, model.RememberMe);\n-                    return Json(new { success = true, redirect = returnUrl });\n-                }\n-                else\n-                {\n-                    ModelState.AddModelError("", "The user name or password provided is incorrect.");\n-                }\n-            }\n-\n-            // If we got this far, something failed\n-            return Json(new { errors = ModelState.GetErrorMessages() });\n-        }\n-\n-        //\n-        // POST: /Account/LogOff\n-\n-        [HttpPost]\n-        [ValidateAntiForgeryToken]\n-        public ActionResult LogOff()\n-        {\n-            WebSecurity.Logout();\n-\n-            return RedirectToAction("Index", "Home");\n-        }\n-\n-        //\n-        // POST: /Account/JsonRegister\n-        [HttpPost]\n-        [AllowAnonymous]\n-        [ValidateAntiForgeryToken]\n-        public ActionResult JsonRegister(RegisterModel model, string returnUrl)\n-        {\n-            if(ModelState.IsValid)\n-            {\n-                // Attempt to register the user\n-                try\n-                {\n-                    WebSecurity.CreateUserAndAccount(model.UserName, model.Password);\n-                    WebSecurity.Login(model.UserName, model.Password);\n-\n-                    InitiateDatabaseForNewUser(model.UserName);\n-\n-                    FormsAuthentication.SetAuthCookie(model.UserName, createPersistentCookie: false);\n-                    return Json(new { success = true, redirect = returnUrl });\n-                }\n-                catch(MembershipCreateUserException e)\n-                {\n-                    ModelState.AddModelError("", ErrorCodeToString(e.StatusCode));\n-                }\n-            }\n-\n-            // If we got this far, something failed\n-            return Json(new { errors = ModelState.GetErrorMessages() });\n-        }\n-\n-        /// <summary>\n-        /// Initiate a new todo list for new user\n-        /// <\/summary>\n-        /// <param name="userName"><\/param>\n-        private static void InitiateDatabaseForNewUser(string userName)\n-        {\n-            TodoItemContext db = new TodoItemContext();\n-            TodoList todoList = new TodoList();\n-            todoList.UserId = userName;\n-            todoList.Title = "My Todo List #1";\n-            todoList.Todos = new List<TodoItem>();\n-            db.TodoLists.Add(todoList);\n-            db.SaveChanges();\n-\n-            todoList.Todos.Add(new TodoItem() { Title = "Todo item #1", TodoListId = todoList.TodoListId, IsDone = false });\n-            todoList.Todos.Add(new TodoItem() { Title = "Todo item #2", TodoListId = todoList.TodoListId, IsDone = false });\n-            db.SaveChanges();\n-        }\n-\n-        //\n-        // POST: /Account/Disassociate\n-\n-        [HttpPost]\n-        [ValidateAntiForgeryToken]\n-        public ActionResult Disassociate(string provider, string providerUserId)\n-        {\n-            string ownerAccount = OAuthWebSecurity.GetUserName(provider, providerUserId);\n-            ManageMessageId? message = null;\n-\n-            // Only disassociate the account if the currently logged in user is the owner\n-            if(ownerAccount == User.Identity.Name)\n-            {\n-                // Use a transaction to prevent the user from deleting their last login credential\n-                using(var scope = new TransactionScope(TransactionScopeOption.Required, new TransactionOptions { IsolationLevel = IsolationLevel.Serializable }))\n-                {\n-                    bool hasLocalAccount = OAuthWebSecurity.HasLocalAccount(WebSecurity.GetUserId(User.Identity.Name));\n-                    if(hasLocalAccount || OAuthWebSecurity.GetAccountsFromUserName(User.Identity.Name).Count > 1)\n-                    {\n-                        OAuthWebSecurity.DeleteAccount(provider, providerUserId);\n-                        scope.Complete();\n-                        message = ManageMessageId.RemoveLoginSuccess;\n-                    }\n-                }\n-            }\n-\n-            return RedirectToAction("Manage", new { Message = message });\n-        }\n-\n-        //\n-        // GET: /Account/Manage\n-\n-        public ActionResult Manage(ManageMessageId? message)\n-        {\n-            ViewBag.StatusMessage =\n-                message == ManageMessageId.ChangePasswordSuccess ? "Your password has been changed."\n-                : message == ManageMessageId.SetPasswordSuccess ? "Your password has been set."\n-                : message == ManageMessageId.RemoveLoginSuccess ? "The external login was removed."\n-                : "";\n-            ViewBag.HasLocalPassword = OAuthWebSecurity.HasLocalAccount(WebSecurity.GetUserId(User.Identity.Name));\n-            ViewBag.ReturnUrl = Url.Action("Manage");\n-            return View();\n-        }\n-\n-        //\n-        // POST: /Account/Manage\n-\n-        [HttpPost]\n-        [ValidateAntiForgeryToken]\n-        public ActionResult Manage(LocalPasswordModel model)\n-        {\n-            bool hasLocalAccount = OAuthWebSecurity.HasLocalAccount(WebSecurity.GetUserId(User.Identity.Name));\n-            ViewBag.HasLocalPassword = hasLocalAccount;\n-            ViewBag.ReturnUrl = Url.Action("Manage");\n-            if(hasLocalAccount)\n-            {\n-                if(ModelState.IsValid)\n-                {\n-                    // ChangePassword will throw an exception rather than return false in certain failure scenarios.\n-                    bool changePasswordSucceeded;\n-                    try\n-                    {\n-                        changePasswordSucceeded = WebSecurity.ChangePassword(User.Identity.Name, model.OldPassword, model.NewPassword);\n-                    }\n-                    catch(Exception)\n-                    {\n-                        changePasswordSucceeded = false;\n-                    }\n-\n-                    if(changePasswordSucceeded)\n-                    {\n-                        return RedirectToAction("Manage", new { Message = ManageMessageId.ChangePasswordSuccess });\n-                    }\n-                    else\n-                    {\n-                        ModelState.AddModelError("", "The current password is incorrect or the new password is invalid.");\n-                    }\n-                }\n-            }\n-            else\n-            {\n-                // User does not have a local password so remove any validation errors caused by a missing\n-                // OldPassword field\n-                ModelState state = ModelState["OldPassword"];\n-                if(state != null)\n-                {\n-                    state.Errors.Clear();\n-                }\n-\n-                if(ModelState.IsValid)\n-                {\n-                    try\n-                    {\n-                        WebSecurity.CreateAccount(User.Identity.Name, model.NewPassword);\n-                        return RedirectToAction("Manage", new { Message = ManageMessageId.SetPasswordSuccess });\n-                    }\n-                    catch(Exception e)\n-                    {\n-                        ModelState.AddModelError("", e);\n-                    }\n-                }\n-            }\n-\n-            // If we got this far, something failed, redisplay form\n-            return View(model);\n-        }\n-\n-        //\n-        // POST: /Account/ExternalLogin\n-\n-        [HttpPost]\n-        [AllowAnonymous]\n-        [ValidateAntiForgeryToken]\n-        public ActionResult ExternalLogin(string provider, string returnUrl)\n-        {\n-            return new AccountController.ExternalLoginResult(provider, Url.Action("ExternalLoginCallback", new { ReturnUrl = returnUrl }));\n-        }\n-\n-        //\n-        // GET: /Account/ExternalLoginCallback\n-\n-        [AllowAnonymous]\n-        public ActionResult ExternalLoginCallback(string returnUrl)\n-        {\n-            AuthenticationResult result = OAuthWebSecurity.VerifyAuthentication(Url.Action("ExternalLoginCallback", new { ReturnUrl = returnUrl }));\n-            if(!result.IsSuccessful)\n-            {\n-                return RedirectToAction("ExternalLoginFailure");\n-            }\n-\n-            if(OAuthWebSecurity.Login(result.Provider, result.ProviderUserId, createPersistentCookie: false))\n-            {\n-                return RedirectToLocal(returnUrl);\n-            }\n-\n-            if(User.Identity.IsAuthenticated)\n-            {\n-                // If the current user is logged in add the new account\n-                OAuthWebSecurity.CreateOrUpdateAccount(result.Provider, result.ProviderUserId, User.Identity.Name);\n-                return RedirectToLocal(returnUrl);\n-            }\n-            else\n-            {\n-                // User is new, ask for their desired membership name\n-                string loginData = OAuthWebSecurity.SerializeProviderUserId(result.Provider, result.ProviderUserId);\n-                ViewBag.ProviderDisplayName = OAuthWebSecurity.GetOAuthClientData(result.Provider).DisplayName;\n-                ViewBag.ReturnUrl = returnUrl;\n-                return View("ExternalLoginConfirmation", new RegisterExternalLoginModel { UserName = result.UserName, ExternalLoginData = loginData });\n-            }\n-        }\n-\n-        //\n-        // POST: /Account/ExternalLoginConfirmation\n-\n-        [HttpPost]\n-        [AllowAnonymous]\n-        [ValidateAntiForgeryToken]\n-        public ActionResult ExternalLoginConfirmation(RegisterExternalLoginModel model, string returnUrl)\n-        {\n-            string provider = null;\n-            string providerUserId = null;\n-\n-            if(User.Identity.IsAuthenticated || !OAuthWebSecurity.TryDeserializeProviderUserId(model.ExternalLoginData, out provider, out providerUserId))\n-            {\n-                return RedirectToAction("Manage");\n-            }\n-\n-            if(ModelState.IsValid)\n-            {\n-                // Insert a new user into the database\n-                using(UsersContext db = new UsersContext())\n-                {\n-                    UserProfile user = db.UserProfiles.FirstOrDefault(u => u.UserName.ToLower() == model.UserName.ToLower());\n-                    // Check if user already exists\n-                    if(user == null)\n-                    {\n-                        // Insert name into the profile table\n-                        db.UserProfiles.Add(new UserProfile { UserName = model.UserName });\n-                        db.SaveChanges();\n-\n-                        InitiateDatabaseForNewUser(model.UserName);\n-\n-                        OAuthWebSecurity.CreateOrUpdateAccount(provider, providerUserId, model.UserName);\n-                        OAuthWebSecurity.Login(provider, providerUserId, createPersistentCookie: false);\n-\n-                        return RedirectToLocal(returnUrl);\n-                    }\n-                    else\n-                    {\n-                        ModelState.AddModelError("UserName", "User name already exists. Please enter a different user name.");\n-                    }\n-                }\n-            }\n-\n-            ViewBag.ProviderDisplayName = OAuthWebSecurity.GetOAuthClientData(provider).DisplayName;\n-            ViewBag.ReturnUrl = returnUrl;\n-            return View(model);\n-        }\n-\n-        //\n-        // GET: /Account/ExternalLoginFailure\n-\n-        [AllowAnonymous]\n-        public ActionResult ExternalLoginFailure()\n-        {\n-            return View();\n-        }\n-\n-        [AllowAnonymous]\n-        [ChildActionOnly]\n-        public ActionResult ExternalLoginsList(string returnUrl)\n-        {\n-            ViewBag.ReturnUrl = returnUrl;\n-            return PartialView("_ExternalLoginsListPartial", OAuthWebSecurity.RegisteredClientData);\n-        }\n-\n-        [ChildActionOnly]\n-        public ActionResult RemoveExternalLogins()\n-        {\n-            ICollection<OAuthAccount> accounts = OAuthWebSecurity.GetAccountsFromUserName(User.Identity.Name);\n-            List<ExternalLogin> externalLogins = new List<ExternalLogin>();\n-            foreach(OAuthAccount account in accounts)\n-            {\n-                AuthenticationClientData clientData = OAuthWebSecurity.GetOAuthClientData(account.Provider);\n-\n-                externalLogins.Add(new ExternalLogin\n-                {\n-                    Provider = account.Provider,\n-                    ProviderDisplayName = clientData.DisplayName,\n-                    ProviderUserId = account.ProviderUserId,\n-                });\n-            }\n-\n-            ViewBag.ShowRemoveButton = externalLogins.Count > 1 || OAuthWebSecurity.HasLocalAccount(WebSecurity.GetUserId(User.Identity.Name));\n-            return PartialView("_RemoveExternalLoginsPartial", externalLogins);\n-        }\n-\n-        #region Helpers\n-        private ActionResult RedirectToLocal(string returnUrl)\n-        {\n-            if(Url.IsLocalUrl(returnUrl))\n-            {\n-                return Redirect(returnUrl);\n-            }\n-            else\n-            {\n-                return RedirectToAction("Index", "Home");\n-            }\n-        }\n-\n-        public enum ManageMessageId\n-        {\n-            ChangePasswordSuccess,\n-            SetPasswordSuccess,\n-            RemoveLoginSuccess,\n-        }\n-\n-        internal class ExternalLoginResult : ActionResult\n-        {\n-            public ExternalLoginResult(string provider, string returnUrl)\n-            {\n-                Provider = provider;\n-                ReturnUrl = returnUrl;\n-            }\n-\n-            public string Provider { get; private set; }\n-            public string ReturnUrl { get; private set; }\n-\n-            public override void ExecuteResult(ControllerContext context)\n-            {\n-                OAuthWebSecurity.RequestAuthentication(Provider, ReturnUrl);\n-            }\n-        }\n-\n-        private static string ErrorCodeToString(MembershipCreateStatus createStatus)\n-        {\n-            // See http://go.microsoft.com/fwlink/?LinkID=177550 for\n-            // a full list of status codes.\n-            switch(createStatus)\n-            {\n-                case MembershipCreateStatus.DuplicateUserName:\n-                    return "User name already exists. Please enter a different user name.";\n-\n-                case MembershipCreateStatus.DuplicateEmail:\n-                    return "A user name for that e-mail address already exists. Please enter a different e-mail address.";\n-\n-                case MembershipCreateStatus.InvalidPassword:\n-                    return "The password provided is invalid. Please enter a valid password value.";\n-\n-                case MembershipCreateStatus.InvalidEmail:\n-                    return "The e-mail address provided is invalid. Please check the value and try again.";\n-\n-                case MembershipCreateStatus.InvalidAnswer:\n-                    return "The password retrieval answer provided is invalid. Please check the value and try again.";\n-\n-                case MembershipCreateStatus.InvalidQuestion:\n-                    return "The password retrieval question provided is invalid. Please check the value and try again.";\n-\n-                case MembershipCreateStatus.InvalidUserName:\n-                    return "The user name provided is invalid. Please check the value and try again.";\n-\n-                case MembershipCreateStatus.ProviderError:\n-                    return "The authentication provider returned an error. Please verify your entry and try again. If the problem persists, please contact your system administrator.";\n-\n-                case MembershipCreateStatus.UserRejected:\n-                    return "The user creation request has been canceled. Please verify your entry and try again. If the problem persists, please contact your system administrator.";\n-\n-                default:\n-                    return "An unknown error occurred. Please verify your entry and try again. If the problem persists, please contact your system administrator.";\n-            }\n-        }\n-        #endregion\n-    }\n-}\n\\ No newline at end of file'},{sha:"0c165068715982626095bf222be319521da325e4",filename:"DemoApp/Controllers/ControllerExtensions.cs",status:"removed",additions:0,deletions:16,changes:16,blob_url:"https://github.com/llaughlin/DemoApp/blob/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Controllers/ControllerExtensions.cs",raw_url:"https://github.com/llaughlin/DemoApp/raw/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Controllers/ControllerExtensions.cs",contents_url:"https://api.github.com/repos/llaughlin/DemoApp/contents/DemoApp/Controllers/ControllerExtensions.cs?ref=5064770c5c97742041a767d527b33ea8c4295e52",patch:"@@ -1,16 +0,0 @@\n-﻿namespace DemoApp.Controllers\n-{\n-    using System.Collections.Generic;\n-    using System.Linq;\n-    using System.Web.Mvc;\n-\n-\n-    public static class ControllerExtensions\n-    {\n-\n-        public static IEnumerable<string> GetErrorMessages(this ModelStateDictionary modelState)\n-        {\n-            return modelState.SelectMany(x => x.Value.Errors.Select(error => error.ErrorMessage));\n-        }\n-    }\n-}\n\\ No newline at end of file"},{sha:"85aa6ea5e0bc697889aa162346b8ec26d0bcc934",filename:"DemoApp/Controllers/HomeController.cs",status:"modified",additions:1,deletions:5,changes:6,blob_url:"https://github.com/llaughlin/DemoApp/blob/d09d477368a0c38e21cecf06d156dbe13c89991d/DemoApp/Controllers/HomeController.cs",raw_url:"https://github.com/llaughlin/DemoApp/raw/d09d477368a0c38e21cecf06d156dbe13c89991d/DemoApp/Controllers/HomeController.cs",contents_url:"https://api.github.com/repos/llaughlin/DemoApp/contents/DemoApp/Controllers/HomeController.cs?ref=d09d477368a0c38e21cecf06d156dbe13c89991d",patch:"@@ -1,8 +1,4 @@\n-﻿using System;\n-using System.Collections.Generic;\n-using System.Linq;\n-using System.Web;\n-using System.Web.Mvc;\n+﻿using System.Web.Mvc;\n \n namespace DemoApp.Controllers\n {"},{sha:"80959d81a726666bc617d22dba0d1ea0bb3223c1",filename:"DemoApp/Controllers/TodoController.cs",status:"removed",additions:0,deletions:129,changes:129,blob_url:"https://github.com/llaughlin/DemoApp/blob/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Controllers/TodoController.cs",raw_url:"https://github.com/llaughlin/DemoApp/raw/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Controllers/TodoController.cs",contents_url:"https://api.github.com/repos/llaughlin/DemoApp/contents/DemoApp/Controllers/TodoController.cs?ref=5064770c5c97742041a767d527b33ea8c4295e52",patch:'@@ -1,129 +0,0 @@\n-﻿using System;\n-using System.Data;\n-using System.Data.Entity.Infrastructure;\n-using System.Net;\n-using System.Net.Http;\n-using System.Web.Http;\n-using DemoApp.Filters;\n-using DemoApp.Models;\n-\n-namespace DemoApp.Controllers\n-{\n-    [Authorize]\n-    [ValidateHttpAntiForgeryToken]\n-    public class TodoController : ApiController\n-    {\n-        private TodoItemContext db = new TodoItemContext();\n-\n-        // PUT api/Todo/5\n-        public HttpResponseMessage PutTodoItem(int id, TodoItemDto todoItemDto)\n-        {\n-            if(!ModelState.IsValid)\n-            {\n-                return Request.CreateErrorResponse(HttpStatusCode.BadRequest, ModelState);\n-            }\n-\n-            if(id != todoItemDto.TodoItemId)\n-            {\n-                return Request.CreateResponse(HttpStatusCode.BadRequest);\n-            }\n-\n-            TodoItem todoItem = todoItemDto.ToEntity();\n-            TodoList todoList = db.TodoLists.Find(todoItem.TodoListId);\n-            if(todoList == null)\n-            {\n-                return Request.CreateResponse(HttpStatusCode.NotFound);\n-            }\n-\n-            if(todoList.UserId != User.Identity.Name)\n-            {\n-                // Trying to modify a record that does not belong to the user\n-                return Request.CreateResponse(HttpStatusCode.Unauthorized);\n-            }\n-\n-            // Need to detach to avoid duplicate primary key exception when SaveChanges is called\n-            db.Entry(todoList).State = EntityState.Detached;\n-            db.Entry(todoItem).State = EntityState.Modified;\n-\n-            try\n-            {\n-                db.SaveChanges();\n-            }\n-            catch(DbUpdateConcurrencyException)\n-            {\n-                return Request.CreateResponse(HttpStatusCode.InternalServerError);\n-            }\n-\n-            return Request.CreateResponse(HttpStatusCode.OK);\n-        }\n-\n-        // POST api/Todo\n-        public HttpResponseMessage PostTodoItem(TodoItemDto todoItemDto)\n-        {\n-            if(!ModelState.IsValid)\n-            {\n-                return Request.CreateErrorResponse(HttpStatusCode.BadRequest, ModelState);\n-            }\n-\n-            TodoList todoList = db.TodoLists.Find(todoItemDto.TodoListId);\n-            if(todoList == null)\n-            {\n-                return Request.CreateResponse(HttpStatusCode.NotFound);\n-            }\n-\n-            if(todoList.UserId != User.Identity.Name)\n-            {\n-                // Trying to add a record that does not belong to the user\n-                return Request.CreateResponse(HttpStatusCode.Unauthorized);\n-            }\n-\n-            TodoItem todoItem = todoItemDto.ToEntity();\n-\n-            // Need to detach to avoid loop reference exception during JSON serialization\n-            db.Entry(todoList).State = EntityState.Detached;\n-            db.TodoItems.Add(todoItem);\n-            db.SaveChanges();\n-            todoItemDto.TodoItemId = todoItem.TodoItemId;\n-\n-            HttpResponseMessage response = Request.CreateResponse(HttpStatusCode.Created, todoItemDto);\n-            response.Headers.Location = new Uri(Url.Link("DefaultApi", new { id = todoItemDto.TodoItemId }));\n-            return response;\n-        }\n-\n-        // DELETE api/Todo/5\n-        public HttpResponseMessage DeleteTodoItem(int id)\n-        {\n-            TodoItem todoItem = db.TodoItems.Find(id);\n-            if(todoItem == null)\n-            {\n-                return Request.CreateResponse(HttpStatusCode.NotFound);\n-            }\n-\n-            if(db.Entry(todoItem.TodoList).Entity.UserId != User.Identity.Name)\n-            {\n-                // Trying to delete a record that does not belong to the user\n-                return Request.CreateResponse(HttpStatusCode.Unauthorized);\n-            }\n-\n-            TodoItemDto todoItemDto = new TodoItemDto(todoItem);\n-            db.TodoItems.Remove(todoItem);\n-\n-            try\n-            {\n-                db.SaveChanges();\n-            }\n-            catch(DbUpdateConcurrencyException)\n-            {\n-                return Request.CreateResponse(HttpStatusCode.InternalServerError);\n-            }\n-\n-            return Request.CreateResponse(HttpStatusCode.OK, todoItemDto);\n-        }\n-\n-        protected override void Dispose(bool disposing)\n-        {\n-            db.Dispose();\n-            base.Dispose(disposing);\n-        }\n-    }\n-}\n\\ No newline at end of file'},{sha:"54c31ee7da23545c4268b20748a0e78a9f65511d",filename:"DemoApp/Controllers/TodoListController.cs",status:"removed",additions:0,deletions:139,changes:139,blob_url:"https://github.com/llaughlin/DemoApp/blob/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Controllers/TodoListController.cs",raw_url:"https://github.com/llaughlin/DemoApp/raw/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Controllers/TodoListController.cs",contents_url:"https://api.github.com/repos/llaughlin/DemoApp/contents/DemoApp/Controllers/TodoListController.cs?ref=5064770c5c97742041a767d527b33ea8c4295e52",patch:'@@ -1,139 +0,0 @@\n-﻿using System;\n-using System.Collections.Generic;\n-using System.Data;\n-using System.Data.Entity.Infrastructure;\n-using System.Linq;\n-using System.Net;\n-using System.Net.Http;\n-using System.Web.Http;\n-using DemoApp.Filters;\n-using DemoApp.Models;\n-\n-namespace DemoApp.Controllers\n-{\n-    [Authorize]\n-    public class TodoListController : ApiController\n-    {\n-        private TodoItemContext db = new TodoItemContext();\n-\n-        // GET api/TodoList\n-        public IEnumerable<TodoListDto> GetTodoLists()\n-        {\n-            return db.TodoLists.Include("Todos")\n-                .Where(u => u.UserId == User.Identity.Name)\n-                .OrderByDescending(u => u.TodoListId)\n-                .AsEnumerable()\n-                .Select(todoList => new TodoListDto(todoList));\n-        }\n-\n-        // GET api/TodoList/5\n-        public TodoListDto GetTodoList(int id)\n-        {\n-            TodoList todoList = db.TodoLists.Find(id);\n-            if(todoList == null)\n-            {\n-                throw new HttpResponseException(Request.CreateResponse(HttpStatusCode.NotFound));\n-            }\n-\n-            if(todoList.UserId != User.Identity.Name)\n-            {\n-                // Trying to modify a record that does not belong to the user\n-                throw new HttpResponseException(Request.CreateResponse(HttpStatusCode.Unauthorized));\n-            }\n-\n-            return new TodoListDto(todoList);\n-        }\n-\n-        // PUT api/TodoList/5\n-        [ValidateHttpAntiForgeryToken]\n-        public HttpResponseMessage PutTodoList(int id, TodoListDto todoListDto)\n-        {\n-            if(!ModelState.IsValid)\n-            {\n-                return Request.CreateErrorResponse(HttpStatusCode.BadRequest, ModelState);\n-            }\n-\n-            if(id != todoListDto.TodoListId)\n-            {\n-                return Request.CreateResponse(HttpStatusCode.BadRequest);\n-            }\n-\n-            TodoList todoList = todoListDto.ToEntity();\n-            if(db.Entry(todoList).Entity.UserId != User.Identity.Name)\n-            {\n-                // Trying to modify a record that does not belong to the user\n-                return Request.CreateResponse(HttpStatusCode.Unauthorized);\n-            }\n-\n-            db.Entry(todoList).State = EntityState.Modified;\n-\n-            try\n-            {\n-                db.SaveChanges();\n-            }\n-            catch(DbUpdateConcurrencyException)\n-            {\n-                return Request.CreateResponse(HttpStatusCode.InternalServerError);\n-            }\n-\n-            return Request.CreateResponse(HttpStatusCode.OK);\n-        }\n-\n-        // POST api/TodoList\n-        [ValidateHttpAntiForgeryToken]\n-        public HttpResponseMessage PostTodoList(TodoListDto todoListDto)\n-        {\n-            if(!ModelState.IsValid)\n-            {\n-                return Request.CreateErrorResponse(HttpStatusCode.BadRequest, ModelState);\n-            }\n-\n-            todoListDto.UserId = User.Identity.Name;\n-            TodoList todoList = todoListDto.ToEntity();\n-            db.TodoLists.Add(todoList);\n-            db.SaveChanges();\n-            todoListDto.TodoListId = todoList.TodoListId;\n-\n-            HttpResponseMessage response = Request.CreateResponse(HttpStatusCode.Created, todoListDto);\n-            response.Headers.Location = new Uri(Url.Link("DefaultApi", new { id = todoListDto.TodoListId }));\n-            return response;\n-        }\n-\n-        // DELETE api/TodoList/5\n-        [ValidateHttpAntiForgeryToken]\n-        public HttpResponseMessage DeleteTodoList(int id)\n-        {\n-            TodoList todoList = db.TodoLists.Find(id);\n-            if(todoList == null)\n-            {\n-                return Request.CreateResponse(HttpStatusCode.NotFound);\n-            }\n-\n-            if(db.Entry(todoList).Entity.UserId != User.Identity.Name)\n-            {\n-                // Trying to delete a record that does not belong to the user\n-                return Request.CreateResponse(HttpStatusCode.Unauthorized);\n-            }\n-\n-            TodoListDto todoListDto = new TodoListDto(todoList);\n-            db.TodoLists.Remove(todoList);\n-\n-            try\n-            {\n-                db.SaveChanges();\n-            }\n-            catch(DbUpdateConcurrencyException)\n-            {\n-                return Request.CreateResponse(HttpStatusCode.InternalServerError);\n-            }\n-\n-            return Request.CreateResponse(HttpStatusCode.OK, todoListDto);\n-        }\n-\n-        protected override void Dispose(bool disposing)\n-        {\n-            db.Dispose();\n-            base.Dispose(disposing);\n-        }\n-    }\n-}\n\\ No newline at end of file'},{sha:"3db1bb6b57c82309648a8b4756842c519a3d5f40",filename:"DemoApp/DemoApp.csproj",status:"modified",additions:2,deletions:67,changes:69,blob_url:"https://github.com/llaughlin/DemoApp/blob/d09d477368a0c38e21cecf06d156dbe13c89991d/DemoApp/DemoApp.csproj",raw_url:"https://github.com/llaughlin/DemoApp/raw/d09d477368a0c38e21cecf06d156dbe13c89991d/DemoApp/DemoApp.csproj",contents_url:"https://api.github.com/repos/llaughlin/DemoApp/contents/DemoApp/DemoApp.csproj?ref=d09d477368a0c38e21cecf06d156dbe13c89991d",patch:'@@ -185,40 +185,14 @@\n     <Compile Include="App_Start\\FilterConfig.cs" />\n     <Compile Include="App_Start\\RouteConfig.cs" />\n     <Compile Include="App_Start\\WebApiConfig.cs" />\n-    <Compile Include="Areas\\HelpPage\\ApiDescriptionExtensions.cs" />\n-    <Compile Include="Areas\\HelpPage\\App_Start\\HelpPageConfig.cs" />\n-    <Compile Include="Areas\\HelpPage\\Controllers\\HelpController.cs" />\n-    <Compile Include="Areas\\HelpPage\\HelpPageAreaRegistration.cs" />\n-    <Compile Include="Areas\\HelpPage\\HelpPageConfigurationExtensions.cs" />\n-    <Compile Include="Areas\\HelpPage\\Models\\HelpPageApiModel.cs" />\n-    <Compile Include="Areas\\HelpPage\\SampleGeneration\\HelpPageSampleGenerator.cs" />\n-    <Compile Include="Areas\\HelpPage\\SampleGeneration\\HelpPageSampleKey.cs" />\n-    <Compile Include="Areas\\HelpPage\\SampleGeneration\\ImageSample.cs" />\n-    <Compile Include="Areas\\HelpPage\\SampleGeneration\\InvalidSample.cs" />\n-    <Compile Include="Areas\\HelpPage\\SampleGeneration\\ObjectGenerator.cs" />\n-    <Compile Include="Areas\\HelpPage\\SampleGeneration\\SampleDirection.cs" />\n-    <Compile Include="Areas\\HelpPage\\SampleGeneration\\TextSample.cs" />\n-    <Compile Include="Areas\\HelpPage\\XmlDocumentationProvider.cs" />\n-    <Compile Include="Controllers\\AccountController.cs" />\n-    <Compile Include="Controllers\\ControllerExtensions.cs" />\n     <Compile Include="Controllers\\HomeController.cs" />\n-    <Compile Include="Controllers\\TodoController.cs" />\n-    <Compile Include="Controllers\\TodoListController.cs" />\n-    <Compile Include="Filters\\InitializeSimpleMembershipAttribute.cs" />\n     <Compile Include="Filters\\ValidateHttpAntiForgeryTokenAttribute.cs" />\n     <Compile Include="Global.asax.cs">\n       <DependentUpon>Global.asax<\/DependentUpon>\n     <\/Compile>\n-    <Compile Include="Models\\AccountModels.cs" />\n-    <Compile Include="Models\\TodoItemDto.cs" />\n-    <Compile Include="Models\\TodoListDto.cs" />\n-    <Compile Include="Models\\TodoList.cs" />\n-    <Compile Include="Models\\TodoItem.cs" />\n-    <Compile Include="Models\\TodoItemContext.cs" />\n     <Compile Include="Properties\\AssemblyInfo.cs" />\n   <\/ItemGroup>\n   <ItemGroup>\n-    <Content Include="Areas\\HelpPage\\HelpPage.css" />\n     <Content Include="Content\\themes\\base\\images\\ui-bg_flat_0_aaaaaa_40x100.png" />\n     <Content Include="Content\\themes\\base\\images\\ui-bg_flat_75_ffffff_40x100.png" />\n     <Content Include="Content\\themes\\base\\images\\ui-bg_glass_55_fbf9ee_1x400.png" />\n@@ -275,17 +249,6 @@\n     <Content Include="Content\\themes\\base\\minified\\jquery.ui.theme.min.css" />\n     <Content Include="favicon.ico" />\n     <Content Include="Global.asax" />\n-    <Content Include="Areas\\HelpPage\\Views\\Web.config" />\n-    <Content Include="Areas\\HelpPage\\Views\\Shared\\_Layout.cshtml" />\n-    <Content Include="Areas\\HelpPage\\Views\\Help\\Index.cshtml" />\n-    <Content Include="Areas\\HelpPage\\Views\\Help\\DisplayTemplates\\TextSample.cshtml" />\n-    <Content Include="Areas\\HelpPage\\Views\\Help\\DisplayTemplates\\Samples.cshtml" />\n-    <Content Include="Areas\\HelpPage\\Views\\Help\\DisplayTemplates\\Parameters.cshtml" />\n-    <Content Include="Areas\\HelpPage\\Views\\Help\\DisplayTemplates\\InvalidSample.cshtml" />\n-    <Content Include="Areas\\HelpPage\\Views\\Help\\DisplayTemplates\\ImageSample.cshtml" />\n-    <Content Include="Areas\\HelpPage\\Views\\Help\\DisplayTemplates\\HelpPageApiModel.cshtml" />\n-    <Content Include="Areas\\HelpPage\\Views\\Help\\DisplayTemplates\\ApiGroup.cshtml" />\n-    <Content Include="Areas\\HelpPage\\Views\\Help\\Api.cshtml" />\n     <None Include="Scripts\\jquery-1.9.1.intellisense.js" />\n     <Content Include="Scripts\\jquery-1.9.1.js" />\n     <Content Include="Scripts\\jquery-1.9.1.min.js" />\n@@ -311,46 +274,18 @@\n     <Content Include="Web.Release.config">\n       <DependentUpon>Web.config<\/DependentUpon>\n     <\/Content>\n-    <Content Include="Areas\\HelpPage\\Views\\_ViewStart.cshtml" />\n     <Content Include="Content\\Site.css" />\n-    <Content Include="Content\\TodoList.css" />\n     <Content Include="Scripts\\_references.js" />\n-    <Content Include="Scripts\\app\\ajaxlogin.js" />\n-    <Content Include="Scripts\\app\\todo.viewmodel.js" />\n-    <Content Include="Scripts\\app\\todo.bindings.js" />\n-    <Content Include="Scripts\\app\\todo.datacontext.js" />\n-    <Content Include="Scripts\\app\\todo.model.js" />\n-    <Content Include="Images\\accent.png" />\n-    <Content Include="Images\\bullet.png" />\n-    <Content Include="Images\\heroAccent.png" />\n-    <Content Include="Images\\orderedList0.png" />\n-    <Content Include="Images\\orderedList1.png" />\n-    <Content Include="Images\\orderedList2.png" />\n-    <Content Include="Images\\orderedList3.png" />\n-    <Content Include="Images\\orderedList4.png" />\n-    <Content Include="Images\\orderedList5.png" />\n-    <Content Include="Images\\orderedList6.png" />\n-    <Content Include="Images\\orderedList7.png" />\n-    <Content Include="Images\\orderedList8.png" />\n-    <Content Include="Images\\orderedList9.png" />\n     <Content Include="Views\\_ViewStart.cshtml" />\n-    <Content Include="Views\\Account\\_ChangePasswordPartial.cshtml" />\n-    <Content Include="Views\\Account\\_ExternalLoginsListPartial.cshtml" />\n-    <Content Include="Views\\Account\\_RemoveExternalLoginsPartial.cshtml" />\n-    <Content Include="Views\\Account\\_SetPasswordPartial.cshtml" />\n-    <Content Include="Views\\Account\\Manage.cshtml" />\n-    <Content Include="Views\\Account\\ExternalLoginFailure.cshtml" />\n-    <Content Include="Views\\Account\\ExternalLoginConfirmation.cshtml" />\n     <Content Include="Views\\Shared\\Error.cshtml" />\n-    <Content Include="Views\\Shared\\_UserSettings.cshtml" />\n     <Content Include="Views\\Shared\\_Layout.cshtml" />\n     <Content Include="Views\\Web.config" />\n     <Content Include="Views\\Home\\Index.cshtml" />\n-    <Content Include="Views\\Home\\_Login.cshtml" />\n-    <Content Include="Views\\Home\\_Register.cshtml" />\n   <\/ItemGroup>\n   <ItemGroup>\n     <Folder Include="App_Data\\" />\n+    <Folder Include="Images\\" />\n+    <Folder Include="Models\\" />\n   <\/ItemGroup>\n   <ItemGroup>\n     <Content Include="packages.config" />'},{sha:"b81307da6516a69abec0cb476ca4d995a1d4c41e",filename:"DemoApp/Filters/InitializeSimpleMembershipAttribute.cs",status:"removed",additions:0,deletions:50,changes:50,blob_url:"https://github.com/llaughlin/DemoApp/blob/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Filters/InitializeSimpleMembershipAttribute.cs",raw_url:"https://github.com/llaughlin/DemoApp/raw/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Filters/InitializeSimpleMembershipAttribute.cs",contents_url:"https://api.github.com/repos/llaughlin/DemoApp/contents/DemoApp/Filters/InitializeSimpleMembershipAttribute.cs?ref=5064770c5c97742041a767d527b33ea8c4295e52",patch:'@@ -1,50 +0,0 @@\n-﻿using System;\n-using System.Data.Entity;\n-using System.Data.Entity.Infrastructure;\n-using System.Threading;\n-using System.Web.Mvc;\n-using WebMatrix.WebData;\n-using DemoApp.Models;\n-\n-namespace DemoApp.Filters\n-{\n-    [AttributeUsage(AttributeTargets.Class | AttributeTargets.Method, AllowMultiple = false, Inherited = true)]\n-    public sealed class InitializeSimpleMembershipAttribute : ActionFilterAttribute\n-    {\n-        private static SimpleMembershipInitializer _initializer;\n-        private static object _initializerLock = new object();\n-        private static bool _isInitialized;\n-\n-        public override void OnActionExecuting(ActionExecutingContext filterContext)\n-        {\n-            // Ensure ASP.NET Simple Membership is initialized only once per app start\n-            LazyInitializer.EnsureInitialized(ref _initializer, ref _isInitialized, ref _initializerLock);\n-        }\n-\n-        private class SimpleMembershipInitializer\n-        {\n-            public SimpleMembershipInitializer()\n-            {\n-                Database.SetInitializer<UsersContext>(null);\n-\n-                try\n-                {\n-                    using(var context = new UsersContext())\n-                    {\n-                        if(!context.Database.Exists())\n-                        {\n-                            // Create the SimpleMembership database without Entity Framework migration schema\n-                            ((IObjectContextAdapter)context).ObjectContext.CreateDatabase();\n-                        }\n-                    }\n-\n-                    WebSecurity.InitializeDatabaseConnection("DefaultConnection", "UserProfile", "UserId", "UserName", autoCreateTables: true);\n-                }\n-                catch(Exception ex)\n-                {\n-                    throw new InvalidOperationException("The ASP.NET Simple Membership database could not be initialized. For more information, please see http://go.microsoft.com/fwlink/?LinkId=256588", ex);\n-                }\n-            }\n-        }\n-    }\n-}'},{sha:"cd07580d6180aca070d174afc76fa9d284b29f5c",filename:"DemoApp/Images/accent.png",status:"removed",additions:0,deletions:0,changes:0,blob_url:"https://github.com/llaughlin/DemoApp/blob/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Images/accent.png",raw_url:"https://github.com/llaughlin/DemoApp/raw/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Images/accent.png",contents_url:"https://api.github.com/repos/llaughlin/DemoApp/contents/DemoApp/Images/accent.png?ref=5064770c5c97742041a767d527b33ea8c4295e52"},{sha:"d3824c15594223636fad93eeabf5f01082972ddd",filename:"DemoApp/Images/bullet.png",status:"removed",additions:0,deletions:0,changes:0,blob_url:"https://github.com/llaughlin/DemoApp/blob/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Images/bullet.png",raw_url:"https://github.com/llaughlin/DemoApp/raw/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Images/bullet.png",contents_url:"https://api.github.com/repos/llaughlin/DemoApp/contents/DemoApp/Images/bullet.png?ref=5064770c5c97742041a767d527b33ea8c4295e52"},{sha:"14ea59b29d7af0a29cbfac05d02346dfa0835d93",filename:"DemoApp/Images/heroAccent.png",status:"removed",additions:0,deletions:0,changes:0,blob_url:"https://github.com/llaughlin/DemoApp/blob/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Images/heroAccent.png",raw_url:"https://github.com/llaughlin/DemoApp/raw/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Images/heroAccent.png",contents_url:"https://api.github.com/repos/llaughlin/DemoApp/contents/DemoApp/Images/heroAccent.png?ref=5064770c5c97742041a767d527b33ea8c4295e52"},{sha:"7a4ea253aebd7c2fab5a14d7255d694c1f9825ed",filename:"DemoApp/Images/orderedList0.png",status:"removed",additions:0,deletions:0,changes:0,blob_url:"https://github.com/llaughlin/DemoApp/blob/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Images/orderedList0.png",raw_url:"https://github.com/llaughlin/DemoApp/raw/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Images/orderedList0.png",contents_url:"https://api.github.com/repos/llaughlin/DemoApp/contents/DemoApp/Images/orderedList0.png?ref=5064770c5c97742041a767d527b33ea8c4295e52"},{sha:"523c24daaefa49f99248a3202425bd544e5a1e40",filename:"DemoApp/Images/orderedList1.png",status:"removed",additions:0,deletions:0,changes:0,blob_url:"https://github.com/llaughlin/DemoApp/blob/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Images/orderedList1.png",raw_url:"https://github.com/llaughlin/DemoApp/raw/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Images/orderedList1.png",contents_url:"https://api.github.com/repos/llaughlin/DemoApp/contents/DemoApp/Images/orderedList1.png?ref=5064770c5c97742041a767d527b33ea8c4295e52"},{sha:"553a2da214a384b7ac96fd2d2c67bb344469b5f8",filename:"DemoApp/Images/orderedList2.png",status:"removed",additions:0,deletions:0,changes:0,blob_url:"https://github.com/llaughlin/DemoApp/blob/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Images/orderedList2.png",raw_url:"https://github.com/llaughlin/DemoApp/raw/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Images/orderedList2.png",contents_url:"https://api.github.com/repos/llaughlin/DemoApp/contents/DemoApp/Images/orderedList2.png?ref=5064770c5c97742041a767d527b33ea8c4295e52"},{sha:"0714981a81788e51f0aa19fe1dc3aa200b5a0cd3",filename:"DemoApp/Images/orderedList3.png",status:"removed",additions:0,deletions:0,changes:0,blob_url:"https://github.com/llaughlin/DemoApp/blob/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Images/orderedList3.png",raw_url:"https://github.com/llaughlin/DemoApp/raw/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Images/orderedList3.png",contents_url:"https://api.github.com/repos/llaughlin/DemoApp/contents/DemoApp/Images/orderedList3.png?ref=5064770c5c97742041a767d527b33ea8c4295e52"},{sha:"ce91e8f64955deadeabcfbf0cca26b192c945323",filename:"DemoApp/Images/orderedList4.png",status:"removed",additions:0,deletions:0,changes:0,blob_url:"https://github.com/llaughlin/DemoApp/blob/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Images/orderedList4.png",raw_url:"https://github.com/llaughlin/DemoApp/raw/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Images/orderedList4.png",contents_url:"https://api.github.com/repos/llaughlin/DemoApp/contents/DemoApp/Images/orderedList4.png?ref=5064770c5c97742041a767d527b33ea8c4295e52"},{sha:"c0734857669ceeed3f402c8b69387526fc9cd9ab",filename:"DemoApp/Images/orderedList5.png",status:"removed",additions:0,deletions:0,changes:0,blob_url:"https://github.com/llaughlin/DemoApp/blob/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Images/orderedList5.png",raw_url:"https://github.com/llaughlin/DemoApp/raw/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Images/orderedList5.png",contents_url:"https://api.github.com/repos/llaughlin/DemoApp/contents/DemoApp/Images/orderedList5.png?ref=5064770c5c97742041a767d527b33ea8c4295e52"},{sha:"3b9aa05a9cb5991971434ab050c07794260a6e32",filename:"DemoApp/Images/orderedList6.png",status:"removed",additions:0,deletions:0,changes:0,blob_url:"https://github.com/llaughlin/DemoApp/blob/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Images/orderedList6.png",raw_url:"https://github.com/llaughlin/DemoApp/raw/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Images/orderedList6.png",contents_url:"https://api.github.com/repos/llaughlin/DemoApp/contents/DemoApp/Images/orderedList6.png?ref=5064770c5c97742041a767d527b33ea8c4295e52"},{sha:"f99c609f553957977407a39a11538f8656a45d32",filename:"DemoApp/Images/orderedList7.png",status:"removed",additions:0,deletions:0,changes:0,blob_url:"https://github.com/llaughlin/DemoApp/blob/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Images/orderedList7.png",raw_url:"https://github.com/llaughlin/DemoApp/raw/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Images/orderedList7.png",contents_url:"https://api.github.com/repos/llaughlin/DemoApp/contents/DemoApp/Images/orderedList7.png?ref=5064770c5c97742041a767d527b33ea8c4295e52"},{sha:"127596d105dd7862f48fe7aacf507fb7619b585e",filename:"DemoApp/Images/orderedList8.png",status:"removed",additions:0,deletions:0,changes:0,blob_url:"https://github.com/llaughlin/DemoApp/blob/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Images/orderedList8.png",raw_url:"https://github.com/llaughlin/DemoApp/raw/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Images/orderedList8.png",contents_url:"https://api.github.com/repos/llaughlin/DemoApp/contents/DemoApp/Images/orderedList8.png?ref=5064770c5c97742041a767d527b33ea8c4295e52"},{sha:"39cfdcf5768d99933867f86bcb2fdef2293d041e",filename:"DemoApp/Images/orderedList9.png",status:"removed",additions:0,deletions:0,changes:0,blob_url:"https://github.com/llaughlin/DemoApp/blob/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Images/orderedList9.png",raw_url:"https://github.com/llaughlin/DemoApp/raw/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Images/orderedList9.png",contents_url:"https://api.github.com/repos/llaughlin/DemoApp/contents/DemoApp/Images/orderedList9.png?ref=5064770c5c97742041a767d527b33ea8c4295e52"},{sha:"04878474966b6973c495cf8907ed2ae7810eb78a",filename:"DemoApp/Models/AccountModels.cs",status:"removed",additions:0,deletions:97,changes:97,blob_url:"https://github.com/llaughlin/DemoApp/blob/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Models/AccountModels.cs",raw_url:"https://github.com/llaughlin/DemoApp/raw/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Models/AccountModels.cs",contents_url:"https://api.github.com/repos/llaughlin/DemoApp/contents/DemoApp/Models/AccountModels.cs?ref=5064770c5c97742041a767d527b33ea8c4295e52",patch:'@@ -1,97 +0,0 @@\n-﻿using System;\n-using System.Collections.Generic;\n-using System.ComponentModel.DataAnnotations;\n-using System.ComponentModel.DataAnnotations.Schema;\n-using System.Data.Entity;\n-using System.Globalization;\n-using System.Web.Security;\n-\n-namespace DemoApp.Models\n-{\n-    public class UsersContext : DbContext\n-    {\n-        public UsersContext()\n-            : base("DefaultConnection")\n-        {\n-        }\n-\n-        public DbSet<UserProfile> UserProfiles { get; set; }\n-    }\n-\n-    [Table("UserProfile")]\n-    public class UserProfile\n-    {\n-        [Key]\n-        [DatabaseGeneratedAttribute(DatabaseGeneratedOption.Identity)]\n-        public int UserId { get; set; }\n-        public string UserName { get; set; }\n-    }\n-\n-    public class RegisterExternalLoginModel\n-    {\n-        [Required]\n-        [Display(Name = "User name")]\n-        public string UserName { get; set; }\n-\n-        public string ExternalLoginData { get; set; }\n-    }\n-\n-    public class LocalPasswordModel\n-    {\n-        [Required]\n-        [DataType(DataType.Password)]\n-        [Display(Name = "Current password")]\n-        public string OldPassword { get; set; }\n-\n-        [Required]\n-        [StringLength(100, ErrorMessage = "The {0} must be at least {2} characters long.", MinimumLength = 6)]\n-        [DataType(DataType.Password)]\n-        [Display(Name = "New password")]\n-        public string NewPassword { get; set; }\n-\n-        [DataType(DataType.Password)]\n-        [Display(Name = "Confirm new password")]\n-        [Compare("NewPassword", ErrorMessage = "The new password and confirmation password do not match.")]\n-        public string ConfirmPassword { get; set; }\n-    }\n-\n-    public class LoginModel\n-    {\n-        [Required]\n-        [Display(Name = "User name")]\n-        public string UserName { get; set; }\n-\n-        [Required]\n-        [DataType(DataType.Password)]\n-        [Display(Name = "Password")]\n-        public string Password { get; set; }\n-\n-        [Display(Name = "Remember me?")]\n-        public bool RememberMe { get; set; }\n-    }\n-\n-    public class RegisterModel\n-    {\n-        [Required]\n-        [Display(Name = "User name")]\n-        public string UserName { get; set; }\n-\n-        [Required]\n-        [StringLength(100, ErrorMessage = "The {0} must be at least {2} characters long.", MinimumLength = 6)]\n-        [DataType(DataType.Password)]\n-        [Display(Name = "Password")]\n-        public string Password { get; set; }\n-\n-        [DataType(DataType.Password)]\n-        [Display(Name = "Confirm password")]\n-        [Compare("Password", ErrorMessage = "The password and confirmation password do not match.")]\n-        public string ConfirmPassword { get; set; }\n-    }\n-\n-    public class ExternalLogin\n-    {\n-        public string Provider { get; set; }\n-        public string ProviderDisplayName { get; set; }\n-        public string ProviderUserId { get; set; }\n-    }\n-}'},{sha:"b71a024700a8cfef2a508d1538f3fbd426648b7c",filename:"DemoApp/Models/TodoItem.cs",status:"removed",additions:0,deletions:24,changes:24,blob_url:"https://github.com/llaughlin/DemoApp/blob/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Models/TodoItem.cs",raw_url:"https://github.com/llaughlin/DemoApp/raw/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Models/TodoItem.cs",contents_url:"https://api.github.com/repos/llaughlin/DemoApp/contents/DemoApp/Models/TodoItem.cs?ref=5064770c5c97742041a767d527b33ea8c4295e52",patch:'@@ -1,24 +0,0 @@\n-﻿using System;\n-using System.Collections.Generic;\n-using System.ComponentModel.DataAnnotations;\n-using System.ComponentModel.DataAnnotations.Schema;\n-using System.Linq;\n-\n-namespace DemoApp.Models\n-{\n-    /// <summary>\n-    /// Todo item entity\n-    /// <\/summary>\n-    public class TodoItem\n-    {\n-        public int TodoItemId { get; set; }\n-\n-        [Required]\n-        public string Title { get; set; }\n-        public bool IsDone { get; set; }\n-\n-        [ForeignKey("TodoList")]\n-        public int TodoListId { get; set; }\n-        public virtual TodoList TodoList { get; set; }\n-    }\n-}\n\\ No newline at end of file'},{sha:"c1b64029b3fd86007e2025a7f6db1bc32a43c040",filename:"DemoApp/Models/TodoItemContext.cs",status:"removed",additions:0,deletions:26,changes:26,blob_url:"https://github.com/llaughlin/DemoApp/blob/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Models/TodoItemContext.cs",raw_url:"https://github.com/llaughlin/DemoApp/raw/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Models/TodoItemContext.cs",contents_url:"https://api.github.com/repos/llaughlin/DemoApp/contents/DemoApp/Models/TodoItemContext.cs?ref=5064770c5c97742041a767d527b33ea8c4295e52",patch:'@@ -1,26 +0,0 @@\n-﻿using System;\n-using System.Collections.Generic;\n-using System.Data.Entity;\n-using System.Linq;\n-\n-namespace DemoApp.Models\n-{\n-    // You can add custom code to this file. Changes will not be overwritten.\n-    // \n-    // If you want Entity Framework to drop and regenerate your database\n-    // automatically whenever you change your model schema, add the following\n-    // code to the Application_Start method in your Global.asax file.\n-    // Note: this will destroy and re-create your database with every model change.\n-    // \n-    // System.Data.Entity.Database.SetInitializer(new System.Data.Entity.DropCreateDatabaseIfModelChanges<DemoApp.Models.TodoItemContext>());\n-    public class TodoItemContext : DbContext\n-    {\n-        public TodoItemContext()\n-            : base("name=DefaultConnection")\n-        {\n-        }\n-\n-        public DbSet<TodoItem> TodoItems { get; set; }\n-        public DbSet<TodoList> TodoLists { get; set; }\n-    }\n-}\n\\ No newline at end of file'},{sha:"f553afa7a91526a58541d60ba2c144252bd8494b",filename:"DemoApp/Models/TodoItemDto.cs",status:"removed",additions:0,deletions:45,changes:45,blob_url:"https://github.com/llaughlin/DemoApp/blob/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Models/TodoItemDto.cs",raw_url:"https://github.com/llaughlin/DemoApp/raw/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Models/TodoItemDto.cs",contents_url:"https://api.github.com/repos/llaughlin/DemoApp/contents/DemoApp/Models/TodoItemDto.cs?ref=5064770c5c97742041a767d527b33ea8c4295e52",patch:'@@ -1,45 +0,0 @@\n-using System;\n-using System.Collections.Generic;\n-using System.ComponentModel.DataAnnotations;\n-using System.ComponentModel.DataAnnotations.Schema;\n-using System.Linq;\n-\n-namespace DemoApp.Models\n-{\n-    public class TodoItemDto\n-    {\n-        /// <summary>\n-        /// Data transfer object for <see cref="TodoItem"/>\n-        /// <\/summary>\n-        public TodoItemDto() { }\n-\n-        public TodoItemDto(TodoItem item)\n-        {\n-            TodoItemId = item.TodoItemId;\n-            Title = item.Title;\n-            IsDone = item.IsDone;\n-            TodoListId = item.TodoListId;\n-        }\n-\n-        [Key]\n-        public int TodoItemId { get; set; }\n-\n-        [Required]\n-        public string Title { get; set; }\n-\n-        public bool IsDone { get; set; }\n-\n-        public int TodoListId { get; set; }\n-\n-        public TodoItem ToEntity()\n-        {\n-            return new TodoItem\n-            {\n-                TodoItemId = TodoItemId,\n-                Title = Title,\n-                IsDone = IsDone,\n-                TodoListId = TodoListId\n-            };\n-        }\n-    }\n-}'},{sha:"eaf44e052ec8068191d2b16c210b5d8dca8f0742",filename:"DemoApp/Models/TodoList.cs",status:"removed",additions:0,deletions:25,changes:25,blob_url:"https://github.com/llaughlin/DemoApp/blob/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Models/TodoList.cs",raw_url:"https://github.com/llaughlin/DemoApp/raw/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Models/TodoList.cs",contents_url:"https://api.github.com/repos/llaughlin/DemoApp/contents/DemoApp/Models/TodoList.cs?ref=5064770c5c97742041a767d527b33ea8c4295e52",patch:"@@ -1,25 +0,0 @@\n-﻿using System;\n-using System.Collections.Generic;\n-using System.ComponentModel.DataAnnotations;\n-using System.Linq;\n-using System.Web;\n-using Newtonsoft.Json;\n-\n-namespace DemoApp.Models\n-{\n-    /// <summary>\n-    /// Todo list entity\n-    /// <\/summary>\n-    public class TodoList\n-    {\n-        public int TodoListId { get; set; }\n-\n-        [Required]\n-        public string UserId { get; set; }\n-\n-        [Required]\n-        public string Title { get; set; }\n-\n-        public virtual List<TodoItem> Todos { get; set; }\n-    }\n-}\n\\ No newline at end of file"},{sha:"7480933553c2ffdd79c90d62a73febd509155752",filename:"DemoApp/Models/TodoListDto.cs",status:"removed",additions:0,deletions:57,changes:57,blob_url:"https://github.com/llaughlin/DemoApp/blob/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Models/TodoListDto.cs",raw_url:"https://github.com/llaughlin/DemoApp/raw/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Models/TodoListDto.cs",contents_url:"https://api.github.com/repos/llaughlin/DemoApp/contents/DemoApp/Models/TodoListDto.cs?ref=5064770c5c97742041a767d527b33ea8c4295e52",patch:'@@ -1,57 +0,0 @@\n-using System;\n-using System.Collections.Generic;\n-using System.ComponentModel.DataAnnotations;\n-using System.Linq;\n-using System.Web;\n-using Newtonsoft.Json;\n-\n-namespace DemoApp.Models\n-{\n-    /// <summary>\n-    /// Data transfer object for <see cref="TodoList"/>\n-    /// <\/summary>\n-    public class TodoListDto\n-    {\n-        public TodoListDto() { }\n-\n-        public TodoListDto(TodoList todoList)\n-        {\n-            TodoListId = todoList.TodoListId;\n-            UserId = todoList.UserId;\n-            Title = todoList.Title;\n-            Todos = new List<TodoItemDto>();\n-            foreach(TodoItem item in todoList.Todos)\n-            {\n-                Todos.Add(new TodoItemDto(item));\n-            }\n-        }\n-\n-        [Key]\n-        public int TodoListId { get; set; }\n-\n-        [Required]\n-        public string UserId { get; set; }\n-\n-        [Required]\n-        public string Title { get; set; }\n-\n-        public virtual List<TodoItemDto> Todos { get; set; }\n-\n-        public TodoList ToEntity()\n-        {\n-            TodoList todo = new TodoList\n-            {\n-                Title = Title,\n-                TodoListId = TodoListId,\n-                UserId = UserId,\n-                Todos = new List<TodoItem>()\n-            };\n-            foreach(TodoItemDto item in Todos)\n-            {\n-                todo.Todos.Add(item.ToEntity());\n-            }\n-\n-            return todo;\n-        }\n-    }\n-}\n\\ No newline at end of file'},{sha:"3436edef47fb65aaa5c4b4cd24eb080e19e7f73c",filename:"DemoApp/Scripts/_references.js",status:"modified",additions:0,deletions:4,changes:4,blob_url:"https://github.com/llaughlin/DemoApp/blob/d09d477368a0c38e21cecf06d156dbe13c89991d/DemoApp/Scripts/_references.js",raw_url:"https://github.com/llaughlin/DemoApp/raw/d09d477368a0c38e21cecf06d156dbe13c89991d/DemoApp/Scripts/_references.js",contents_url:"https://api.github.com/repos/llaughlin/DemoApp/contents/DemoApp/Scripts/_references.js?ref=d09d477368a0c38e21cecf06d156dbe13c89991d",patch:'@@ -4,7 +4,3 @@\n /// <reference path="jquery.validate.unobtrusive.js" />\n /// <reference path="knockout-2.2.0.debug.js" />\n /// <reference path="modernizr-2.6.2.js" />\n-/// <reference path="app/todo.bindings.js" />\n-/// <reference path="app/todo.datacontext.js" />\n-/// <reference path="app/todo.model.js" />\n-/// <reference path="app/todo.viewmodel.js" />'},{sha:"8f5247e4b7ccd77b4c672a879ac3dafdc8d5bc6c",filename:"DemoApp/Scripts/app/ajaxlogin.js",status:"removed",additions:0,deletions:62,changes:62,blob_url:"https://github.com/llaughlin/DemoApp/blob/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Scripts/app/ajaxlogin.js",raw_url:"https://github.com/llaughlin/DemoApp/raw/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Scripts/app/ajaxlogin.js",contents_url:"https://api.github.com/repos/llaughlin/DemoApp/contents/DemoApp/Scripts/app/ajaxlogin.js?ref=5064770c5c97742041a767d527b33ea8c4295e52",patch:'@@ -1,62 +0,0 @@\n-﻿$(function () {\n-    var getValidationSummaryErrors = function ($form) {\n-        var errorSummary = $form.find(\'.validation-summary-errors, .validation-summary-valid\');\n-        return errorSummary;\n-    };\n-\n-    var displayErrors = function (form, errors) {\n-        var errorSummary = getValidationSummaryErrors(form)\n-            .removeClass(\'validation-summary-valid\')\n-            .addClass(\'validation-summary-errors\');\n-\n-        var items = $.map(errors, function (error) {\n-            return \'<li>\' + error + \'<\/li>\';\n-        }).join(\'\');\n-\n-        errorSummary.find(\'ul\').empty().append(items);\n-    };\n-\n-    var formSubmitHandler = function (e) {\n-        var $form = $(this);\n-\n-        // We check if jQuery.validator exists on the form\n-        if (!$form.valid || $form.valid()) {\n-            $.post($form.attr(\'action\'), $form.serializeArray())\n-                .done(function (json) {\n-                    json = json || {};\n-\n-                    // In case of success, we redirect to the provided URL or the same page.\n-                    if (json.success) {\n-                        window.location = json.redirect || location.href;\n-                    } else if (json.errors) {\n-                        displayErrors($form, json.errors);\n-                    }\n-                })\n-                .error(function () {\n-                    displayErrors($form, [\'An unknown error happened.\']);\n-                });\n-        }\n-\n-        // Prevent the normal behavior since we opened the dialog\n-        e.preventDefault();\n-    };\n-\n-    $("#showRegister").click(function () {\n-        $("#loginPanel").hide("slide", function () {\n-            $("#registerPanel").show("slide", function () {\n-                $("#registerName").focus();\n-            });\n-        });\n-    });\n-\n-    $("#showLogin").click(function () {\n-        $("#registerPanel").hide("slide", function () {\n-            $("#loginPanel").show("slide", function () {\n-                $("#loginName").focus();\n-            });\n-        });\n-    });\n-\n-    $("#loginForm").submit(formSubmitHandler);\n-    $("#registerForm").submit(formSubmitHandler);\n-});\n\\ No newline at end of file'},{sha:"83eda035567e971bd8d9ae96e2d6e6c0d8d090b2",filename:"DemoApp/Scripts/app/todo.bindings.js",status:"removed",additions:0,deletions:70,changes:70,blob_url:"https://github.com/llaughlin/DemoApp/blob/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Scripts/app/todo.bindings.js",raw_url:"https://github.com/llaughlin/DemoApp/raw/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Scripts/app/todo.bindings.js",contents_url:"https://api.github.com/repos/llaughlin/DemoApp/contents/DemoApp/Scripts/app/todo.bindings.js?ref=5064770c5c97742041a767d527b33ea8c4295e52",patch:"@@ -1,70 +0,0 @@\n-﻿// Hooks up a form to jQuery Validation\n-ko.bindingHandlers.validate = {\n-    init: function (elem, valueAccessor) {\n-        $(elem).validate();\n-    }\n-};\n-\n-// Controls whether or not the text in a textbox is selected based on a model property\n-ko.bindingHandlers.selected = {\n-    init: function (elem, valueAccessor) {\n-        $(elem).blur(function () {\n-            var boundProperty = valueAccessor();\n-            if (ko.isWriteableObservable(boundProperty)) {\n-                boundProperty(false);\n-            }\n-        });\n-    },\n-    update: function (elem, valueAccessor) {\n-        var shouldBeSelected = ko.utils.unwrapObservable(valueAccessor());\n-        if (shouldBeSelected) {\n-            $(elem).select();\n-        }\n-    }\n-};\n-\n-// Makes a textbox lose focus if you press \"enter\"\n-ko.bindingHandlers.blurOnEnter = {\n-    init: function (elem, valueAccessor) {\n-        $(elem).keypress(function (evt) {\n-            if (evt.keyCode === 13 /* enter */) {\n-                evt.preventDefault();\n-                $(elem).triggerHandler(\"change\");\n-                $(elem).blur();\n-            }\n-        });\n-    }\n-};\n-\n-// Simulates HTML5-style placeholders on older browsers\n-ko.bindingHandlers.placeholder = {\n-    init: function (elem, valueAccessor) {\n-        var placeholderText = ko.utils.unwrapObservable(valueAccessor()),\n-            input = $(elem);\n-\n-        input.attr('placeholder', placeholderText);\n-\n-        // For older browsers, manually implement placeholder behaviors\n-        if (!Modernizr.input.placeholder) {\n-            input.focus(function () {\n-                if (input.val() === placeholderText) {\n-                    input.val('');\n-                    input.removeClass('placeholder');\n-                }\n-            }).blur(function () {\n-                setTimeout(function () {\n-                    if (input.val() === '' || input.val() === placeholderText) {\n-                        input.addClass('placeholder');\n-                        input.val(placeholderText);\n-                    }\n-                }, 0);\n-            }).blur();\n-\n-            input.parents('form').submit(function () {\n-                if (input.val() === placeholderText) {\n-                    input.val('');\n-                }\n-            });\n-        }\n-    }\n-};\n\\ No newline at end of file"},{sha:"318e40f654a328bf2c2fc8f7f3f2f5ab65b6c685",filename:"DemoApp/Scripts/app/todo.datacontext.js",status:"removed",additions:0,deletions:109,changes:109,blob_url:"https://github.com/llaughlin/DemoApp/blob/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Scripts/app/todo.datacontext.js",raw_url:"https://github.com/llaughlin/DemoApp/raw/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Scripts/app/todo.datacontext.js",contents_url:"https://api.github.com/repos/llaughlin/DemoApp/contents/DemoApp/Scripts/app/todo.datacontext.js?ref=5064770c5c97742041a767d527b33ea8c4295e52",patch:'@@ -1,109 +0,0 @@\n-﻿window.todoApp = window.todoApp || {};\n-\n-window.todoApp.datacontext = (function () {\n-\n-    var datacontext = {\n-        getTodoLists: getTodoLists,\n-        createTodoItem: createTodoItem,\n-        createTodoList: createTodoList,\n-        saveNewTodoItem: saveNewTodoItem,\n-        saveNewTodoList: saveNewTodoList,\n-        saveChangedTodoItem: saveChangedTodoItem,\n-        saveChangedTodoList: saveChangedTodoList,\n-        deleteTodoItem: deleteTodoItem,\n-        deleteTodoList: deleteTodoList\n-    };\n-\n-    return datacontext;\n-\n-    function getTodoLists(todoListsObservable, errorObservable) {\n-        return ajaxRequest("get", todoListUrl())\n-            .done(getSucceeded)\n-            .fail(getFailed);\n-\n-        function getSucceeded(data) {\n-            var mappedTodoLists = $.map(data, function (list) { return new createTodoList(list); });\n-            todoListsObservable(mappedTodoLists);\n-        }\n-\n-        function getFailed() {\n-            errorObservable("Error retrieving todo lists.");\n-        }\n-    }\n-    function createTodoItem(data) {\n-        return new datacontext.todoItem(data); // todoItem is injected by todo.model.js\n-    }\n-    function createTodoList(data) {\n-        return new datacontext.todoList(data); // todoList is injected by todo.model.js\n-    }\n-    function saveNewTodoItem(todoItem) {\n-        clearErrorMessage(todoItem);\n-        return ajaxRequest("post", todoItemUrl(), todoItem)\n-            .done(function (result) {\n-                todoItem.todoItemId = result.todoItemId;\n-            })\n-            .fail(function () {\n-                todoItem.errorMessage("Error adding a new todo item.");\n-            });\n-    }\n-    function saveNewTodoList(todoList) {\n-        clearErrorMessage(todoList);\n-        return ajaxRequest("post", todoListUrl(), todoList)\n-            .done(function (result) {\n-                todoList.todoListId = result.todoListId;\n-                todoList.userId = result.userId;\n-            })\n-            .fail(function () {\n-                todoList.errorMessage("Error adding a new todo list.");\n-            });\n-    }\n-    function deleteTodoItem(todoItem) {\n-        return ajaxRequest("delete", todoItemUrl(todoItem.todoItemId))\n-            .fail(function () {\n-                todoItem.errorMessage("Error removing todo item.");\n-            });\n-    }\n-    function deleteTodoList(todoList) {\n-        return ajaxRequest("delete", todoListUrl(todoList.todoListId))\n-            .fail(function () {\n-                todoList.errorMessage("Error removing todo list.");\n-            });\n-    }\n-    function saveChangedTodoItem(todoItem) {\n-        clearErrorMessage(todoItem);\n-        return ajaxRequest("put", todoItemUrl(todoItem.todoItemId), todoItem, "text")\n-            .fail(function () {\n-                todoItem.errorMessage("Error updating todo item.");\n-            });\n-    }\n-    function saveChangedTodoList(todoList) {\n-        clearErrorMessage(todoList);\n-        return ajaxRequest("put", todoListUrl(todoList.todoListId), todoList, "text")\n-            .fail(function () {\n-                todoList.errorMessage("Error updating the todo list title. Please make sure it is non-empty.");\n-            });\n-    }\n-\n-    // Private\n-    function clearErrorMessage(entity) { entity.errorMessage(null); }\n-    function ajaxRequest(type, url, data, dataType) { // Ajax helper\n-        var options = {\n-            dataType: dataType || "json",\n-            contentType: "application/json",\n-            cache: false,\n-            type: type,\n-            data: data ? data.toJson() : null\n-        };\n-        var antiForgeryToken = $("#antiForgeryToken").val();\n-        if (antiForgeryToken) {\n-            options.headers = {\n-                \'RequestVerificationToken\': antiForgeryToken\n-            }\n-        }\n-        return $.ajax(url, options);\n-    }\n-    // routes\n-    function todoListUrl(id) { return "/api/todolist/" + (id || ""); }\n-    function todoItemUrl(id) { return "/api/todo/" + (id || ""); }\n-\n-})();\n\\ No newline at end of file'},{sha:"6dc75348f80e8dc7107627420ad188878aac631e",filename:"DemoApp/Scripts/app/todo.model.js",status:"removed",additions:0,deletions:78,changes:78,blob_url:"https://github.com/llaughlin/DemoApp/blob/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Scripts/app/todo.model.js",raw_url:"https://github.com/llaughlin/DemoApp/raw/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Scripts/app/todo.model.js",contents_url:"https://api.github.com/repos/llaughlin/DemoApp/contents/DemoApp/Scripts/app/todo.model.js?ref=5064770c5c97742041a767d527b33ea8c4295e52",patch:'@@ -1,78 +0,0 @@\n-﻿(function (ko, datacontext) {\n-    datacontext.todoItem = todoItem;\n-    datacontext.todoList = todoList;\n-\n-    function todoItem(data) {\n-        var self = this;\n-        data = data || {};\n-\n-        // Persisted properties\n-        self.todoItemId = data.todoItemId;\n-        self.title = ko.observable(data.title);\n-        self.isDone = ko.observable(data.isDone);\n-        self.todoListId = data.todoListId;\n-\n-        // Non-persisted properties\n-        self.errorMessage = ko.observable();\n-\n-        saveChanges = function () {\n-            return datacontext.saveChangedTodoItem(self);\n-        };\n-\n-        // Auto-save when these properties change\n-        self.isDone.subscribe(saveChanges);\n-        self.title.subscribe(saveChanges);\n-\n-        self.toJson = function () { return ko.toJSON(self) };\n-    };\n-\n-    function todoList(data) {\n-        var self = this;\n-        data = data || {};\n-\n-        // Persisted properties\n-        self.todoListId = data.todoListId;\n-        self.userId = data.userId || "to be replaced";\n-        self.title = ko.observable(data.title || "My todos");\n-        self.todos = ko.observableArray(importTodoItems(data.todos));\n-\n-        // Non-persisted properties\n-        self.isEditingListTitle = ko.observable(false);\n-        self.newTodoTitle = ko.observable();\n-        self.errorMessage = ko.observable();\n-\n-        self.deleteTodo = function () {\n-            var todoItem = this;\n-            return datacontext.deleteTodoItem(todoItem)\n-                 .done(function () { self.todos.remove(todoItem); });\n-        };\n-\n-        // Auto-save when these properties change\n-        self.title.subscribe(function () {\n-            return datacontext.saveChangedTodoList(self);\n-        });\n-\n-        self.toJson = function () { return ko.toJSON(self) };\n-    };\n-    // convert raw todoItem data objects into array of TodoItems\n-    function importTodoItems(todoItems) {\n-        /// <returns value="[new todoItem()]"><\/returns>\n-        return $.map(todoItems || [],\n-                function (todoItemData) {\n-                    return datacontext.createTodoItem(todoItemData);\n-                });\n-    }\n-    todoList.prototype.addTodo = function () {\n-        var self = this;\n-        if (self.newTodoTitle()) { // need a title to save\n-            var todoItem = datacontext.createTodoItem(\n-                {\n-                    title: self.newTodoTitle(),\n-                    todoListId: self.todoListId\n-                });\n-            self.todos.push(todoItem);\n-            datacontext.saveNewTodoItem(todoItem);\n-            self.newTodoTitle("");\n-        }\n-    };\n-})(ko, todoApp.datacontext);\n\\ No newline at end of file'},{sha:"91fea51da38ba0d8270f27287b56a05979e1de6e",filename:"DemoApp/Scripts/app/todo.viewmodel.js",status:"removed",additions:0,deletions:44,changes:44,blob_url:"https://github.com/llaughlin/DemoApp/blob/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Scripts/app/todo.viewmodel.js",raw_url:"https://github.com/llaughlin/DemoApp/raw/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Scripts/app/todo.viewmodel.js",contents_url:"https://api.github.com/repos/llaughlin/DemoApp/contents/DemoApp/Scripts/app/todo.viewmodel.js?ref=5064770c5c97742041a767d527b33ea8c4295e52",patch:'@@ -1,44 +0,0 @@\n-﻿window.todoApp.todoListViewModel = (function (ko, datacontext) {\n-    /// <field name="todoLists" value="[new datacontext.todoList()]"><\/field>\n-    var todoLists = ko.observableArray(),\n-        error = ko.observable(),\n-        addTodoList = function () {\n-            var todoList = datacontext.createTodoList();\n-            todoList.isEditingListTitle(true);\n-            datacontext.saveNewTodoList(todoList)\n-                .then(addSucceeded)\n-                .fail(addFailed);\n-\n-            function addSucceeded() {\n-                showTodoList(todoList);\n-            }\n-            function addFailed() {\n-                error("Save of new todoList failed");\n-            }\n-        },\n-        showTodoList = function (todoList) {\n-            todoLists.unshift(todoList); // Insert new todoList at the front\n-        },\n-        deleteTodoList = function (todoList) {\n-            todoLists.remove(todoList);\n-            datacontext.deleteTodoList(todoList)\n-                .fail(deleteFailed);\n-\n-            function deleteFailed() {\n-                showTodoList(todoList); // re-show the restored list\n-            }\n-        };\n-\n-    datacontext.getTodoLists(todoLists, error); // load todoLists\n-\n-    return {\n-        todoLists: todoLists,\n-        error: error,\n-        addTodoList: addTodoList,\n-        deleteTodoList: deleteTodoList\n-    };\n-\n-})(ko, todoApp.datacontext);\n-\n-// Initiate the Knockout bindings\n-ko.applyBindings(window.todoApp.todoListViewModel);'},{sha:"1e7b32426102090a691c196da3a0bfeac5f20100",filename:"DemoApp/Views/Account/ExternalLoginConfirmation.cshtml",status:"removed",additions:0,deletions:36,changes:36,blob_url:"https://github.com/llaughlin/DemoApp/blob/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Views/Account/ExternalLoginConfirmation.cshtml",raw_url:"https://github.com/llaughlin/DemoApp/raw/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Views/Account/ExternalLoginConfirmation.cshtml",contents_url:"https://api.github.com/repos/llaughlin/DemoApp/contents/DemoApp/Views/Account/ExternalLoginConfirmation.cshtml?ref=5064770c5c97742041a767d527b33ea8c4295e52",patch:'@@ -1,36 +0,0 @@\n-﻿@model DemoApp.Models.RegisterExternalLoginModel\n-@{\n-    ViewBag.Title = "Register";\n-}\n-\n-<hgroup class="title">\n-    <h1>@ViewBag.Title.<\/h1>\n-    <h2>Associate your @ViewBag.ProviderDisplayName account.<\/h2>\n-<\/hgroup>\n-\n-@using (Html.BeginForm("ExternalLoginConfirmation", "Account", new { ReturnUrl = ViewBag.ReturnUrl })) {\n-    @Html.AntiForgeryToken()\n-    @Html.ValidationSummary(true)\n-\n-    <fieldset>\n-        <legend>Association Form<\/legend>\n-        <p>\n-            You\'ve successfully authenticated with <strong>@ViewBag.ProviderDisplayName<\/strong>.\n-            Please enter a user name for this site below and click the Confirm button to finish\n-            logging in.\n-        <\/p>\n-        <ol>\n-            <li class="name">\n-                @Html.LabelFor(m => m.UserName)\n-                @Html.TextBoxFor(m => m.UserName)\n-                @Html.ValidationMessageFor(m => m.UserName)\n-            <\/li>\n-        <\/ol>\n-        @Html.HiddenFor(m => m.ExternalLoginData)\n-        <input type="submit" value="Register" />\n-    <\/fieldset>\n-}\n-\n-@section Scripts {\n-    @Scripts.Render("~/bundles/jqueryval")\n-}'},{sha:"ec69c1392f2e0ff7bc63f5bf27732569a20a7ae2",filename:"DemoApp/Views/Account/ExternalLoginFailure.cshtml",status:"removed",additions:0,deletions:8,changes:8,blob_url:"https://github.com/llaughlin/DemoApp/blob/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Views/Account/ExternalLoginFailure.cshtml",raw_url:"https://github.com/llaughlin/DemoApp/raw/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Views/Account/ExternalLoginFailure.cshtml",contents_url:"https://api.github.com/repos/llaughlin/DemoApp/contents/DemoApp/Views/Account/ExternalLoginFailure.cshtml?ref=5064770c5c97742041a767d527b33ea8c4295e52",patch:'@@ -1,8 +0,0 @@\n-﻿@{\n-    ViewBag.Title = "Login Failure";\n-}\n-\n-<hgroup class="title">\n-    <h1>@ViewBag.Title.<\/h1>\n-    <h2>Unsuccessful login with service.<\/h2>\n-<\/hgroup>'},{sha:"d7e6041975c5449acebbd77bf4a8423141055cdd",filename:"DemoApp/Views/Account/Manage.cshtml",status:"removed",additions:0,deletions:37,changes:37,blob_url:"https://github.com/llaughlin/DemoApp/blob/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Views/Account/Manage.cshtml",raw_url:"https://github.com/llaughlin/DemoApp/raw/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Views/Account/Manage.cshtml",contents_url:"https://api.github.com/repos/llaughlin/DemoApp/contents/DemoApp/Views/Account/Manage.cshtml?ref=5064770c5c97742041a767d527b33ea8c4295e52",patch:'@@ -1,37 +0,0 @@\n-﻿@model DemoApp.Models.LocalPasswordModel\n-@{\n-    ViewBag.Title = "Manage Account";\n-}\n-\n-<header>\n-    <h1>@ViewBag.Title<\/h1>\n-<\/header>\n-\n-<div id="main-content">\n-    <p class="message-success">@ViewBag.StatusMessage<\/p>\n-\n-    <p>You\'re logged in as <strong>@User.Identity.Name<\/strong>.<\/p>\n-    <p>@Html.ActionLink("Back to My Todo List", "Index", "Home")<\/p>\n-\n-    <section class="todoList">\n-    @if (ViewBag.HasLocalPassword)\n-    {\n-        @Html.Partial("_ChangePasswordPartial")\n-    }\n-    else\n-    { \n-        @Html.Partial("_SetPasswordPartial")\n-    }\n-    <\/section>\n-\n-    <section class="todoList" id="externalLogins">\n-        @Html.Action("RemoveExternalLogins")\n-\n-        <h3>Add an external login<\/h3>\n-        @Html.Action("ExternalLoginsList", new { ReturnUrl = ViewBag.ReturnUrl })\n-    <\/section>\n-<\/div>\n-\n-@section Scripts {\n-    @Scripts.Render("~/bundles/jqueryval")\n-}\n\\ No newline at end of file'},{sha:"51d66099ed6a6c731e73ce67fb50889b6c2b19b3",filename:"DemoApp/Views/Account/_ChangePasswordPartial.cshtml",status:"removed",additions:0,deletions:28,changes:28,blob_url:"https://github.com/llaughlin/DemoApp/blob/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Views/Account/_ChangePasswordPartial.cshtml",raw_url:"https://github.com/llaughlin/DemoApp/raw/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Views/Account/_ChangePasswordPartial.cshtml",contents_url:"https://api.github.com/repos/llaughlin/DemoApp/contents/DemoApp/Views/Account/_ChangePasswordPartial.cshtml?ref=5064770c5c97742041a767d527b33ea8c4295e52",patch:'@@ -1,28 +0,0 @@\n-﻿@model DemoApp.Models.LocalPasswordModel\n-\n-<h3>Change password<\/h3>\n-\n-@using (Html.BeginForm("Manage", "Account", FormMethod.Post, new { id = "changePasswordForm" }))\n-{\n-    @Html.AntiForgeryToken()\n-    @Html.ValidationSummary()\n-\n-    <fieldset>\n-        <legend>Change Password Form<\/legend>\n-        <ol>\n-            <li>\n-                @Html.LabelFor(m => m.OldPassword)\n-                @Html.PasswordFor(m => m.OldPassword)\n-            <\/li>\n-            <li>\n-                @Html.LabelFor(m => m.NewPassword)\n-                @Html.PasswordFor(m => m.NewPassword)\n-            <\/li>\n-            <li>\n-                @Html.LabelFor(m => m.ConfirmPassword)\n-                @Html.PasswordFor(m => m.ConfirmPassword)\n-            <\/li>\n-        <\/ol>\n-        <input type="submit" value="Change password" />\n-    <\/fieldset>\n-}\n\\ No newline at end of file'},{sha:"5bdce84e401d8c774dfe8e564f1359f84859fec8",filename:"DemoApp/Views/Account/_ExternalLoginsListPartial.cshtml",status:"removed",additions:0,deletions:25,changes:25,blob_url:"https://github.com/llaughlin/DemoApp/blob/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Views/Account/_ExternalLoginsListPartial.cshtml",raw_url:"https://github.com/llaughlin/DemoApp/raw/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Views/Account/_ExternalLoginsListPartial.cshtml",contents_url:"https://api.github.com/repos/llaughlin/DemoApp/contents/DemoApp/Views/Account/_ExternalLoginsListPartial.cshtml?ref=5064770c5c97742041a767d527b33ea8c4295e52",patch:'@@ -1,25 +0,0 @@\n-﻿@model ICollection<AuthenticationClientData>\n-\n-@if (Model.Count == 0)\n-{\n-    <div class="message-info">\n-        <p>There are no external authentication services configured. See <a href="http://go.microsoft.com/fwlink/?LinkId=252166">this article<\/a>\n-        for details on setting up this ASP.NET application to support logging in via external services.<\/p>\n-    <\/div>\n-}\n-else\n-{\n-    using (Html.BeginForm("ExternalLogin", "Account", new { ReturnUrl = ViewBag.ReturnUrl }))\n-    {\n-    @Html.AntiForgeryToken()\n-    <fieldset id="socialLoginList">\n-        <legend>Log in using another service<\/legend>\n-        <p>\n-        @foreach (AuthenticationClientData p in Model)\n-        {\n-            <button type="submit" name="provider" value="@p.AuthenticationClient.ProviderName" title="Log in using your @p.DisplayName account">@p.DisplayName<\/button>\n-        }\n-        <\/p>\n-    <\/fieldset>\n-    }\n-}'},{sha:"dd5e44ecbf3a3e7d45e01774924e91392e638f5f",filename:"DemoApp/Views/Account/_RemoveExternalLoginsPartial.cshtml",status:"removed",additions:0,deletions:34,changes:34,blob_url:"https://github.com/llaughlin/DemoApp/blob/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Views/Account/_RemoveExternalLoginsPartial.cshtml",raw_url:"https://github.com/llaughlin/DemoApp/raw/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Views/Account/_RemoveExternalLoginsPartial.cshtml",contents_url:"https://api.github.com/repos/llaughlin/DemoApp/contents/DemoApp/Views/Account/_RemoveExternalLoginsPartial.cshtml?ref=5064770c5c97742041a767d527b33ea8c4295e52",patch:'@@ -1,34 +0,0 @@\n-﻿@model ICollection<DemoApp.Models.ExternalLogin>\n-\n-@if (Model.Count > 0)\n-{\n-    <h3>Registered external logins<\/h3>\n-    <table>\n-        <tbody>\n-        @foreach (DemoApp.Models.ExternalLogin externalLogin in Model)\n-        {\n-            <tr>\n-                <td>@externalLogin.ProviderDisplayName<\/td>\n-                <td>\n-                    @if (ViewBag.ShowRemoveButton)\n-                    {\n-                        using (Html.BeginForm("Disassociate", "Account"))\n-                        {\n-                            @Html.AntiForgeryToken()\n-                            <div>\n-                                @Html.Hidden("provider", externalLogin.Provider)\n-                                @Html.Hidden("providerUserId", externalLogin.ProviderUserId)\n-                                <input type="submit" value="Remove" title="Remove this @externalLogin.ProviderDisplayName credential from your account" />\n-                            <\/div>\n-                        }\n-                    }\n-                    else\n-                    {\n-                        @: &nbsp;\n-                    }\n-                <\/td>\n-            <\/tr>\n-        }\n-        <\/tbody>\n-    <\/table>\n-}'},{sha:"243a109b7c13baf010c8fcccbb36ac5f6711d036",filename:"DemoApp/Views/Account/_SetPasswordPartial.cshtml",status:"removed",additions:0,deletions:26,changes:26,blob_url:"https://github.com/llaughlin/DemoApp/blob/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Views/Account/_SetPasswordPartial.cshtml",raw_url:"https://github.com/llaughlin/DemoApp/raw/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Views/Account/_SetPasswordPartial.cshtml",contents_url:"https://api.github.com/repos/llaughlin/DemoApp/contents/DemoApp/Views/Account/_SetPasswordPartial.cshtml?ref=5064770c5c97742041a767d527b33ea8c4295e52",patch:'@@ -1,26 +0,0 @@\n-﻿@model DemoApp.Models.LocalPasswordModel\n-\n-<p>\n-    You do not have a local password for this site. Add a local\n-    password so you can log in without an external login.\n-<\/p>\n-\n-@using (Html.BeginForm("Manage", "Account")) {\n-    @Html.AntiForgeryToken()\n-    @Html.ValidationSummary()\n-\n-    <fieldset>\n-        <legend>Set Password Form<\/legend>\n-        <ol>\n-            <li>\n-                @Html.LabelFor(m => m.NewPassword)\n-                @Html.PasswordFor(m => m.NewPassword)\n-            <\/li>\n-            <li>\n-                @Html.LabelFor(m => m.ConfirmPassword)\n-                @Html.PasswordFor(m => m.ConfirmPassword)\n-            <\/li>\n-        <\/ol>\n-        <input type="submit" value="Set password" />\n-    <\/fieldset>\n-}'},{sha:"5f282702bb03ef11d7184d19c80927b47f919764",filename:"DemoApp/Views/Home/Index.cshtml",status:"modified",additions:1,deletions:80,changes:81,blob_url:"https://github.com/llaughlin/DemoApp/blob/d09d477368a0c38e21cecf06d156dbe13c89991d/DemoApp/Views/Home/Index.cshtml",raw_url:"https://github.com/llaughlin/DemoApp/raw/d09d477368a0c38e21cecf06d156dbe13c89991d/DemoApp/Views/Home/Index.cshtml",contents_url:"https://api.github.com/repos/llaughlin/DemoApp/contents/DemoApp/Views/Home/Index.cshtml?ref=d09d477368a0c38e21cecf06d156dbe13c89991d",patch:'@@ -1,80 +1 @@\n-﻿@model DemoApp.Models.LoginModel\n-@{\n-    ViewBag.Title = "My Todo List";\n-}\n-@functions{\n-    public string GetAntiForgeryToken()\n-    {\n-        string cookieToken, formToken;\n-        AntiForgery.GetTokens(null, out cookieToken, out formToken);\n-        return cookieToken + ":" + formToken;                \n-    }\n-}\n-\n-<header>\n-    <h1>@ViewBag.Title<\/h1>\n-<\/header>\n-\n-<div id="main-content">\n-@if (@User.Identity.IsAuthenticated)\n-{\n-    <p class="error" data-bind="text: error"><\/p>\n-    <input id="antiForgeryToken" type="hidden" value="@GetAntiForgeryToken()" />\n-    <button data-bind="click: addTodoList">Add Todo list<\/button>\n-\n-    <section id="lists" data-bind="foreach: todoLists, visible: todoLists().length > 0">\n-        <article class="todoList">\n-            <header>\n-                <form data-bind="validate: true">\n-                    <input class="required" data-bind="value: title, selected: isEditingListTitle, blurOnEnter: true" />\n-                <\/form>\n-            <\/header>\n-\n-            <a href="#" class="deletelist" data-bind="click: $parent.deleteTodoList">X<\/a>\n-\n-            <ul data-bind="foreach: todos">\n-                <li>\n-                    <input type="checkbox" data-bind="checked: isDone" />\n-                    <input class="todoItemInput" type="text" data-bind="value: title, disable: isDone, blurOnEnter: true" />\n-                    <a href="#" data-bind="click: $parent.deleteTodo">X<\/a>\n-                    <p class="error" data-bind="visible: errorMessage, text: errorMessage"><\/p>\n-                <\/li>\n-            <\/ul>\n-\n-            <form data-bind="submit: addTodo">\n-                <input class="addTodo" type="text" data-bind="value: newTodoTitle, placeholder: \'Type here to add\', blurOnEnter: true, event: { blur: addTodo }" />\n-            <\/form>\n-\n-            <p class="error" data-bind="visible: errorMessage, text: errorMessage"><\/p>\n-        <\/article>\n-    <\/section>\n-}\n-else\n-{\n-    <div class="todoList" id="loginPanel">\n-        <section id="localLoginPanel">\n-            <h2>Log in<\/h2>\n-            @Html.Partial("_Login")\n-        <\/section>\n-        <section id="socialLoginPanel">\n-            <h2>Log in using another service<\/h2>\n-            @Html.Action("ExternalLoginsList", "Account", new { ReturnUrl = ViewBag.ReturnUrl })\n-        <\/section>\n-        <p>First time here? <a id="showRegister">Sign up<\/a><\/p>\n-    <\/div>\n-    <div class="todoList" id="registerPanel">\n-        <h2>Sign up<\/h2>\n-        @Html.Partial("_Register")\n-        <p>Already signed up? <a id="showLogin">Log in<\/a><\/p>\n-    <\/div>\n-}\n-<\/div>\n-\n-@if (@User.Identity.IsAuthenticated)\n-{\n-    @section scripts {\n-        @Scripts.Render("~/bundles/knockout")\n-        @Scripts.Render("~/bundles/jqueryval")\n-        @Scripts.Render("~/bundles/todo")\n-    }\n-}\n\\ No newline at end of file\n+﻿\n\\ No newline at end of file'},{sha:"0881b1c3b8a620a3b5d15fcb33d2db9bdbbdfbb7",filename:"DemoApp/Views/Home/_Login.cshtml",status:"removed",additions:0,deletions:30,changes:30,blob_url:"https://github.com/llaughlin/DemoApp/blob/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Views/Home/_Login.cshtml",raw_url:"https://github.com/llaughlin/DemoApp/raw/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Views/Home/_Login.cshtml",contents_url:"https://api.github.com/repos/llaughlin/DemoApp/contents/DemoApp/Views/Home/_Login.cshtml?ref=5064770c5c97742041a767d527b33ea8c4295e52",patch:'@@ -1,30 +0,0 @@\n-﻿@model DemoApp.Models.LoginModel\n-\n-@using (Html.BeginForm("JsonLogin", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { id = "loginForm" }))\n-{\n-    @Html.AntiForgeryToken()\n-\n-    <fieldset>\n-        <legend>Log in Form<\/legend>\n-        <ol>\n-            <li>\n-                @Html.LabelFor(m => m.UserName)\n-                @Html.TextBoxFor(m => m.UserName, new { autofocus = "autofocus", id = "loginName" })\n-                @Html.ValidationMessageFor(m => m.UserName)\n-            <\/li>\n-            <li>\n-                @Html.LabelFor(m => m.Password)\n-                @Html.PasswordFor(m => m.Password)\n-                @Html.ValidationMessageFor(m => m.Password)\n-            <\/li>\n-            <li>\n-                @Html.CheckBoxFor(m => m.RememberMe)\n-                @Html.LabelFor(m => m.RememberMe, new { @class = "checkbox" })\n-            <\/li>\n-            <li>\n-                <input type="submit" value="Log in" />\n-            <\/li>\n-        <\/ol>\n-        @Html.ValidationSummary() \n-    <\/fieldset>\n-}\n\\ No newline at end of file'},{sha:"2566b4f7de165f67dd240f2b1508deb50f58bcd6",filename:"DemoApp/Views/Home/_Register.cshtml",status:"removed",additions:0,deletions:28,changes:28,blob_url:"https://github.com/llaughlin/DemoApp/blob/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Views/Home/_Register.cshtml",raw_url:"https://github.com/llaughlin/DemoApp/raw/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Views/Home/_Register.cshtml",contents_url:"https://api.github.com/repos/llaughlin/DemoApp/contents/DemoApp/Views/Home/_Register.cshtml?ref=5064770c5c97742041a767d527b33ea8c4295e52",patch:'@@ -1,28 +0,0 @@\n-﻿@model DemoApp.Models.RegisterModel\n-\n-@using (Html.BeginForm("JsonRegister", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { Id = "registerForm" }))\n-{\n-    @Html.AntiForgeryToken()\n-\n-    <fieldset>\n-        <legend>Registration Form<\/legend>\n-        <ol>\n-            <li>\n-                @Html.LabelFor(m => m.UserName)\n-                @Html.TextBoxFor(m => m.UserName, new { id = "registerName" })\n-            <\/li>\n-            <li>\n-                @Html.LabelFor(m => m.Password)\n-                @Html.PasswordFor(m => m.Password)\n-            <\/li>\n-            <li>\n-                @Html.LabelFor(m => m.ConfirmPassword)\n-                @Html.PasswordFor(m => m.ConfirmPassword)\n-            <\/li>\n-            <li>\n-                <input type="submit" value="Sign up" />\n-            <\/li>\n-        <\/ol>\n-        @Html.ValidationSummary()\n-    <\/fieldset>\n-}\n\\ No newline at end of file'},{sha:"94a73395d1a9a8a8167ca40036ef19a07dcb6bd9",filename:"DemoApp/Views/Shared/_Layout.cshtml",status:"modified",additions:2,deletions:16,changes:18,blob_url:"https://github.com/llaughlin/DemoApp/blob/d09d477368a0c38e21cecf06d156dbe13c89991d/DemoApp/Views/Shared/_Layout.cshtml",raw_url:"https://github.com/llaughlin/DemoApp/raw/d09d477368a0c38e21cecf06d156dbe13c89991d/DemoApp/Views/Shared/_Layout.cshtml",contents_url:"https://api.github.com/repos/llaughlin/DemoApp/contents/DemoApp/Views/Shared/_Layout.cshtml?ref=d09d477368a0c38e21cecf06d156dbe13c89991d",patch:'@@ -2,7 +2,7 @@\n <html lang="en">\n <head>\n     <meta charset="utf-8" />\n-    <title>@ViewBag.Title - My ASP.NET MVC Application<\/title>\n+    <title>@ViewBag.Title<\/title>\n     <link href="~/favicon.ico" rel="shortcut icon" type="image/x-icon" />\n     <meta name="viewport" content="width=device-width" />\n     @Styles.Render("~/Content/css")\n@@ -10,28 +10,14 @@\n     @Styles.Render("~/Content/themes/base/css")\n <\/head>\n <body>\n-    <div id="userSettings">\n-        @Html.Partial("_UserSettings")\n-    <\/div>\n+\n \n     <div id="body">\n         @RenderBody()\n     <\/div>\n \n-    <footer>\n-        <nav>\n-            <ul id="menu">\n-                <li>@Html.ActionLink("Todo List", "Index", "Home", new { area = "" }, null)<\/li>\n-                <li>@Html.ActionLink("API", "Index", "Help", new { area = "HelpPage" }, null)<\/li>\n-            <\/ul>\n-        <\/nav> \n-        <p>Learn more about <a href="http://go.microsoft.com/fwlink/?LinkId=273732">Single Page Applications<\/a><\/p>\n-        <p>&copy; @DateTime.Now.Year - My ASP.NET MVC Application<\/p>\n-    <\/footer>\n-\n     @Scripts.Render("~/bundles/jquery")\n     @Scripts.Render("~/bundles/jqueryui")\n-    @Scripts.Render("~/bundles/ajaxlogin")\n     @RenderSection("scripts", required: false)\n <\/body>\n <\/html>\n\\ No newline at end of file'},{sha:"f573cce294f3ce7887db82641633479ca1ce0e4c",filename:"DemoApp/Views/Shared/_UserSettings.cshtml",status:"removed",additions:0,deletions:9,changes:9,blob_url:"https://github.com/llaughlin/DemoApp/blob/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Views/Shared/_UserSettings.cshtml",raw_url:"https://github.com/llaughlin/DemoApp/raw/5064770c5c97742041a767d527b33ea8c4295e52/DemoApp/Views/Shared/_UserSettings.cshtml",contents_url:"https://api.github.com/repos/llaughlin/DemoApp/contents/DemoApp/Views/Shared/_UserSettings.cshtml?ref=5064770c5c97742041a767d527b33ea8c4295e52",patch:'@@ -1,9 +0,0 @@\n-﻿@if (Request.IsAuthenticated) {\n-    <text>\n-        Hello, @Html.ActionLink(User.Identity.Name, "Manage", "Account", routeValues: new { area = "" }, htmlAttributes: new { @class = "username", title = "Manage" })\n-        @using (Html.BeginForm("LogOff", "Account", new { area = "" }, FormMethod.Post, new { id = "logoutForm" })) {\n-            @Html.AntiForgeryToken()\n-            <a href="javascript:document.getElementById(\'logoutForm\').submit()">Log off<\/a>\n-        }\n-    <\/text>\n-}\n\\ No newline at end of file'}]}}).call(this)